{"version": null, "code": "gASVWQQAAAAAAAAoQxJ0AGQBfA58EWQCjQMBAGQAUwCUKIwFaW5wdXSUjAZvdXRwdXSUjAZwYXJhbXOUjAl3aWxkY2FyZHOUjAd0aHJlYWRzlIwJcmVzb3VyY2VzlIwDbG9nlIwHdmVyc2lvbpSMBHJ1bGWUjAljb25kYV9lbnaUjA1jb250YWluZXJfaW1nlIwQc2luZ3VsYXJpdHlfYXJnc5SMD3VzZV9zaW5ndWxhcml0eZSMC2Vudl9tb2R1bGVzlIwMYmVuY2hfcmVjb3JklIwFam9iaWSUjAhpc19zaGVsbJSMD2JlbmNoX2l0ZXJhdGlvbpSMD2NsZWFudXBfc2NyaXB0c5SMCnNoYWRvd19kaXKUjA1lZGl0X25vdGVib29rlIwPY29uZGFfYmFzZV9wYXRolIwHYmFzZWRpcpSMGHJ1bnRpbWVfc291cmNlY2FjaGVfcGF0aJR0lF2UKE5Y5gIAAAoJCXRhaWwgLW4rMiB7aW5wdXQubWV0aGZyZXF9IHwgc29ydEJlZCB8IGF3ayAnRlM9T0ZTPSIJIicne3twcmludCAkMSwkMiwkMywkN319JyA+IHJlc3VsdHMve3BhcmFtcy5uYW1lfS50ZXN0LmJlZCAmJiBiZ3ppcCByZXN1bHRzL3twYXJhbXMubmFtZX0udGVzdC5iZWQgJiYgdGFiaXggcmVzdWx0cy97cGFyYW1zLm5hbWV9LnRlc3QuYmVkLmd6ICYmIHdoaWxlIElGUz0kJwknIHJlYWQgLXIgY2hyb20gc3RhcnQgZW5kOyBkbyB0YWJpeCByZXN1bHRzL3twYXJhbXMubmFtZX0udGVzdC5iZWQuZ3ogJGNocm9tIjoiJHN0YXJ0Ii0iJGVuZCA+IHJlc3VsdHMve3BhcmFtcy5uYW1lfS5vdmVybGFwLmJlZCAmJiBpZiBbIC1zIHJlc3VsdHMve3BhcmFtcy5uYW1lfS5vdmVybGFwLmJlZCBdOyB0aGVuIG1lYW49JChjdXQgLWYgNCByZXN1bHRzL3twYXJhbXMubmFtZX0ub3ZlcmxhcC5iZWQgfCBhd2sgJ3t7IHN1bSArPSAkMTsgbisrIH19IEVORCB7eyBpZiAobiA+IDApIHByaW50IHN1bSAvIG47IH19JykgJiYgZWNobyAtZSAkY2hyb20iCSIkc3RhcnQiCSIkZW5kIgkiJG1lYW4iCSJ7cGFyYW1zLm5hbWV9ID4+IHtvdXRwdXR9O2ZpO2RvbmU8e2lucHV0LmludGVydmFsc30gJiYgcm0gcmVzdWx0cy97cGFyYW1zLm5hbWV9Lm92ZXJsYXAuYmVkICYmIHJtIHJlc3VsdHMve3BhcmFtcy5uYW1lfS50ZXN0LmJlZC5neiAmJiBybSByZXN1bHRzL3twYXJhbXMubmFtZX0udGVzdC5iZWQuZ3oudGJpIDI+e2xvZ30KCQmUaA9oEoaUZYwFc2hlbGyUhZR0lC4=", "rule": "parse_meth_freq", "input": ["results/1G.methfreq.tsv", "results/intervals.bed"], "log": ["logs/1G.nanopolish_freq.parse.log"], "params": ["'1G'"], "shellcmd": "\n\t\ttail -n+2 results/1G.methfreq.tsv | sortBed | awk 'FS=OFS=\"\t\"''{print $1,$2,$3,$7}' > results/1G.test.bed && bgzip results/1G.test.bed && tabix results/1G.test.bed.gz && while IFS=$'\t' read -r chrom start end; do tabix results/1G.test.bed.gz $chrom\":\"$start\"-\"$end > results/1G.overlap.bed && if [ -s results/1G.overlap.bed ]; then mean=$(cut -f 4 results/1G.overlap.bed | awk '{ sum += $1; n++ } END { if (n > 0) print sum / n; }') && echo -e $chrom\"\t\"$start\"\t\"$end\"\t\"$mean\"\t\"1G >> results/1G.methfreq.parsed.bed;fi;done<results/intervals.bed && rm results/1G.overlap.bed && rm results/1G.test.bed.gz && rm results/1G.test.bed.gz.tbi 2>logs/1G.nanopolish_freq.parse.log\n\t\t", "incomplete": false, "starttime": 1642516556.2579005, "endtime": 1642517173.5219302, "job_hash": 8750104715140, "conda_env": null, "container_img_url": null}