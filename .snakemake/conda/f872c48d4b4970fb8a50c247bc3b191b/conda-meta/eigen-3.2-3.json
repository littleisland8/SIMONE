{
  "build": "3",
  "build_number": 3,
  "channel": "https://conda.anaconda.org/bioconda/linux-64",
  "constrains": [],
  "depends": [
    "cmake"
  ],
  "extracted_package_dir": "/home/simone/miniconda3/pkgs/eigen-3.2-3",
  "features": "",
  "files": [
    "include/eigen3/Eigen/Array",
    "include/eigen3/Eigen/Cholesky",
    "include/eigen3/Eigen/CholmodSupport",
    "include/eigen3/Eigen/Core",
    "include/eigen3/Eigen/Dense",
    "include/eigen3/Eigen/Eigen",
    "include/eigen3/Eigen/Eigen2Support",
    "include/eigen3/Eigen/Eigenvalues",
    "include/eigen3/Eigen/Geometry",
    "include/eigen3/Eigen/Householder",
    "include/eigen3/Eigen/IterativeLinearSolvers",
    "include/eigen3/Eigen/Jacobi",
    "include/eigen3/Eigen/LU",
    "include/eigen3/Eigen/LeastSquares",
    "include/eigen3/Eigen/MetisSupport",
    "include/eigen3/Eigen/OrderingMethods",
    "include/eigen3/Eigen/PaStiXSupport",
    "include/eigen3/Eigen/PardisoSupport",
    "include/eigen3/Eigen/QR",
    "include/eigen3/Eigen/QtAlignedMalloc",
    "include/eigen3/Eigen/SPQRSupport",
    "include/eigen3/Eigen/SVD",
    "include/eigen3/Eigen/Sparse",
    "include/eigen3/Eigen/SparseCholesky",
    "include/eigen3/Eigen/SparseCore",
    "include/eigen3/Eigen/SparseLU",
    "include/eigen3/Eigen/SparseQR",
    "include/eigen3/Eigen/StdDeque",
    "include/eigen3/Eigen/StdList",
    "include/eigen3/Eigen/StdVector",
    "include/eigen3/Eigen/SuperLUSupport",
    "include/eigen3/Eigen/UmfPackSupport",
    "include/eigen3/Eigen/src/Cholesky/LDLT.h",
    "include/eigen3/Eigen/src/Cholesky/LLT.h",
    "include/eigen3/Eigen/src/Cholesky/LLT_MKL.h",
    "include/eigen3/Eigen/src/CholmodSupport/CholmodSupport.h",
    "include/eigen3/Eigen/src/Core/Array.h",
    "include/eigen3/Eigen/src/Core/ArrayBase.h",
    "include/eigen3/Eigen/src/Core/ArrayWrapper.h",
    "include/eigen3/Eigen/src/Core/Assign.h",
    "include/eigen3/Eigen/src/Core/Assign_MKL.h",
    "include/eigen3/Eigen/src/Core/BandMatrix.h",
    "include/eigen3/Eigen/src/Core/Block.h",
    "include/eigen3/Eigen/src/Core/BooleanRedux.h",
    "include/eigen3/Eigen/src/Core/CommaInitializer.h",
    "include/eigen3/Eigen/src/Core/CoreIterators.h",
    "include/eigen3/Eigen/src/Core/CwiseBinaryOp.h",
    "include/eigen3/Eigen/src/Core/CwiseNullaryOp.h",
    "include/eigen3/Eigen/src/Core/CwiseUnaryOp.h",
    "include/eigen3/Eigen/src/Core/CwiseUnaryView.h",
    "include/eigen3/Eigen/src/Core/DenseBase.h",
    "include/eigen3/Eigen/src/Core/DenseCoeffsBase.h",
    "include/eigen3/Eigen/src/Core/DenseStorage.h",
    "include/eigen3/Eigen/src/Core/Diagonal.h",
    "include/eigen3/Eigen/src/Core/DiagonalMatrix.h",
    "include/eigen3/Eigen/src/Core/DiagonalProduct.h",
    "include/eigen3/Eigen/src/Core/Dot.h",
    "include/eigen3/Eigen/src/Core/EigenBase.h",
    "include/eigen3/Eigen/src/Core/Flagged.h",
    "include/eigen3/Eigen/src/Core/ForceAlignedAccess.h",
    "include/eigen3/Eigen/src/Core/Functors.h",
    "include/eigen3/Eigen/src/Core/Fuzzy.h",
    "include/eigen3/Eigen/src/Core/GeneralProduct.h",
    "include/eigen3/Eigen/src/Core/GenericPacketMath.h",
    "include/eigen3/Eigen/src/Core/GlobalFunctions.h",
    "include/eigen3/Eigen/src/Core/IO.h",
    "include/eigen3/Eigen/src/Core/Map.h",
    "include/eigen3/Eigen/src/Core/MapBase.h",
    "include/eigen3/Eigen/src/Core/MathFunctions.h",
    "include/eigen3/Eigen/src/Core/Matrix.h",
    "include/eigen3/Eigen/src/Core/MatrixBase.h",
    "include/eigen3/Eigen/src/Core/NestByValue.h",
    "include/eigen3/Eigen/src/Core/NoAlias.h",
    "include/eigen3/Eigen/src/Core/NumTraits.h",
    "include/eigen3/Eigen/src/Core/PermutationMatrix.h",
    "include/eigen3/Eigen/src/Core/PlainObjectBase.h",
    "include/eigen3/Eigen/src/Core/ProductBase.h",
    "include/eigen3/Eigen/src/Core/Random.h",
    "include/eigen3/Eigen/src/Core/Redux.h",
    "include/eigen3/Eigen/src/Core/Ref.h",
    "include/eigen3/Eigen/src/Core/Replicate.h",
    "include/eigen3/Eigen/src/Core/ReturnByValue.h",
    "include/eigen3/Eigen/src/Core/Reverse.h",
    "include/eigen3/Eigen/src/Core/Select.h",
    "include/eigen3/Eigen/src/Core/SelfAdjointView.h",
    "include/eigen3/Eigen/src/Core/SelfCwiseBinaryOp.h",
    "include/eigen3/Eigen/src/Core/SolveTriangular.h",
    "include/eigen3/Eigen/src/Core/StableNorm.h",
    "include/eigen3/Eigen/src/Core/Stride.h",
    "include/eigen3/Eigen/src/Core/Swap.h",
    "include/eigen3/Eigen/src/Core/Transpose.h",
    "include/eigen3/Eigen/src/Core/Transpositions.h",
    "include/eigen3/Eigen/src/Core/TriangularMatrix.h",
    "include/eigen3/Eigen/src/Core/VectorBlock.h",
    "include/eigen3/Eigen/src/Core/VectorwiseOp.h",
    "include/eigen3/Eigen/src/Core/Visitor.h",
    "include/eigen3/Eigen/src/Core/arch/AltiVec/Complex.h",
    "include/eigen3/Eigen/src/Core/arch/AltiVec/PacketMath.h",
    "include/eigen3/Eigen/src/Core/arch/Default/Settings.h",
    "include/eigen3/Eigen/src/Core/arch/NEON/Complex.h",
    "include/eigen3/Eigen/src/Core/arch/NEON/PacketMath.h",
    "include/eigen3/Eigen/src/Core/arch/SSE/Complex.h",
    "include/eigen3/Eigen/src/Core/arch/SSE/MathFunctions.h",
    "include/eigen3/Eigen/src/Core/arch/SSE/PacketMath.h",
    "include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h",
    "include/eigen3/Eigen/src/Core/products/GeneralBlockPanelKernel.h",
    "include/eigen3/Eigen/src/Core/products/GeneralMatrixMatrix.h",
    "include/eigen3/Eigen/src/Core/products/GeneralMatrixMatrixTriangular.h",
    "include/eigen3/Eigen/src/Core/products/GeneralMatrixMatrixTriangular_MKL.h",
    "include/eigen3/Eigen/src/Core/products/GeneralMatrixMatrix_MKL.h",
    "include/eigen3/Eigen/src/Core/products/GeneralMatrixVector.h",
    "include/eigen3/Eigen/src/Core/products/GeneralMatrixVector_MKL.h",
    "include/eigen3/Eigen/src/Core/products/Parallelizer.h",
    "include/eigen3/Eigen/src/Core/products/SelfadjointMatrixMatrix.h",
    "include/eigen3/Eigen/src/Core/products/SelfadjointMatrixMatrix_MKL.h",
    "include/eigen3/Eigen/src/Core/products/SelfadjointMatrixVector.h",
    "include/eigen3/Eigen/src/Core/products/SelfadjointMatrixVector_MKL.h",
    "include/eigen3/Eigen/src/Core/products/SelfadjointProduct.h",
    "include/eigen3/Eigen/src/Core/products/SelfadjointRank2Update.h",
    "include/eigen3/Eigen/src/Core/products/TriangularMatrixMatrix.h",
    "include/eigen3/Eigen/src/Core/products/TriangularMatrixMatrix_MKL.h",
    "include/eigen3/Eigen/src/Core/products/TriangularMatrixVector.h",
    "include/eigen3/Eigen/src/Core/products/TriangularMatrixVector_MKL.h",
    "include/eigen3/Eigen/src/Core/products/TriangularSolverMatrix.h",
    "include/eigen3/Eigen/src/Core/products/TriangularSolverMatrix_MKL.h",
    "include/eigen3/Eigen/src/Core/products/TriangularSolverVector.h",
    "include/eigen3/Eigen/src/Core/util/BlasUtil.h",
    "include/eigen3/Eigen/src/Core/util/Constants.h",
    "include/eigen3/Eigen/src/Core/util/DisableStupidWarnings.h",
    "include/eigen3/Eigen/src/Core/util/ForwardDeclarations.h",
    "include/eigen3/Eigen/src/Core/util/MKL_support.h",
    "include/eigen3/Eigen/src/Core/util/Macros.h",
    "include/eigen3/Eigen/src/Core/util/Memory.h",
    "include/eigen3/Eigen/src/Core/util/Meta.h",
    "include/eigen3/Eigen/src/Core/util/NonMPL2.h",
    "include/eigen3/Eigen/src/Core/util/ReenableStupidWarnings.h",
    "include/eigen3/Eigen/src/Core/util/StaticAssert.h",
    "include/eigen3/Eigen/src/Core/util/XprHelper.h",
    "include/eigen3/Eigen/src/Eigen2Support/Block.h",
    "include/eigen3/Eigen/src/Eigen2Support/Cwise.h",
    "include/eigen3/Eigen/src/Eigen2Support/CwiseOperators.h",
    "include/eigen3/Eigen/src/Eigen2Support/Geometry/AlignedBox.h",
    "include/eigen3/Eigen/src/Eigen2Support/Geometry/All.h",
    "include/eigen3/Eigen/src/Eigen2Support/Geometry/AngleAxis.h",
    "include/eigen3/Eigen/src/Eigen2Support/Geometry/Hyperplane.h",
    "include/eigen3/Eigen/src/Eigen2Support/Geometry/ParametrizedLine.h",
    "include/eigen3/Eigen/src/Eigen2Support/Geometry/Quaternion.h",
    "include/eigen3/Eigen/src/Eigen2Support/Geometry/Rotation2D.h",
    "include/eigen3/Eigen/src/Eigen2Support/Geometry/RotationBase.h",
    "include/eigen3/Eigen/src/Eigen2Support/Geometry/Scaling.h",
    "include/eigen3/Eigen/src/Eigen2Support/Geometry/Transform.h",
    "include/eigen3/Eigen/src/Eigen2Support/Geometry/Translation.h",
    "include/eigen3/Eigen/src/Eigen2Support/LU.h",
    "include/eigen3/Eigen/src/Eigen2Support/Lazy.h",
    "include/eigen3/Eigen/src/Eigen2Support/LeastSquares.h",
    "include/eigen3/Eigen/src/Eigen2Support/Macros.h",
    "include/eigen3/Eigen/src/Eigen2Support/MathFunctions.h",
    "include/eigen3/Eigen/src/Eigen2Support/Memory.h",
    "include/eigen3/Eigen/src/Eigen2Support/Meta.h",
    "include/eigen3/Eigen/src/Eigen2Support/Minor.h",
    "include/eigen3/Eigen/src/Eigen2Support/QR.h",
    "include/eigen3/Eigen/src/Eigen2Support/SVD.h",
    "include/eigen3/Eigen/src/Eigen2Support/TriangularSolver.h",
    "include/eigen3/Eigen/src/Eigen2Support/VectorBlock.h",
    "include/eigen3/Eigen/src/Eigenvalues/ComplexEigenSolver.h",
    "include/eigen3/Eigen/src/Eigenvalues/ComplexSchur.h",
    "include/eigen3/Eigen/src/Eigenvalues/ComplexSchur_MKL.h",
    "include/eigen3/Eigen/src/Eigenvalues/EigenSolver.h",
    "include/eigen3/Eigen/src/Eigenvalues/GeneralizedEigenSolver.h",
    "include/eigen3/Eigen/src/Eigenvalues/GeneralizedSelfAdjointEigenSolver.h",
    "include/eigen3/Eigen/src/Eigenvalues/HessenbergDecomposition.h",
    "include/eigen3/Eigen/src/Eigenvalues/MatrixBaseEigenvalues.h",
    "include/eigen3/Eigen/src/Eigenvalues/RealQZ.h",
    "include/eigen3/Eigen/src/Eigenvalues/RealSchur.h",
    "include/eigen3/Eigen/src/Eigenvalues/RealSchur_MKL.h",
    "include/eigen3/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h",
    "include/eigen3/Eigen/src/Eigenvalues/SelfAdjointEigenSolver_MKL.h",
    "include/eigen3/Eigen/src/Eigenvalues/Tridiagonalization.h",
    "include/eigen3/Eigen/src/Geometry/AlignedBox.h",
    "include/eigen3/Eigen/src/Geometry/AngleAxis.h",
    "include/eigen3/Eigen/src/Geometry/EulerAngles.h",
    "include/eigen3/Eigen/src/Geometry/Homogeneous.h",
    "include/eigen3/Eigen/src/Geometry/Hyperplane.h",
    "include/eigen3/Eigen/src/Geometry/OrthoMethods.h",
    "include/eigen3/Eigen/src/Geometry/ParametrizedLine.h",
    "include/eigen3/Eigen/src/Geometry/Quaternion.h",
    "include/eigen3/Eigen/src/Geometry/Rotation2D.h",
    "include/eigen3/Eigen/src/Geometry/RotationBase.h",
    "include/eigen3/Eigen/src/Geometry/Scaling.h",
    "include/eigen3/Eigen/src/Geometry/Transform.h",
    "include/eigen3/Eigen/src/Geometry/Translation.h",
    "include/eigen3/Eigen/src/Geometry/Umeyama.h",
    "include/eigen3/Eigen/src/Geometry/arch/Geometry_SSE.h",
    "include/eigen3/Eigen/src/Householder/BlockHouseholder.h",
    "include/eigen3/Eigen/src/Householder/Householder.h",
    "include/eigen3/Eigen/src/Householder/HouseholderSequence.h",
    "include/eigen3/Eigen/src/IterativeLinearSolvers/BasicPreconditioners.h",
    "include/eigen3/Eigen/src/IterativeLinearSolvers/BiCGSTAB.h",
    "include/eigen3/Eigen/src/IterativeLinearSolvers/ConjugateGradient.h",
    "include/eigen3/Eigen/src/IterativeLinearSolvers/IncompleteLUT.h",
    "include/eigen3/Eigen/src/IterativeLinearSolvers/IterativeSolverBase.h",
    "include/eigen3/Eigen/src/Jacobi/Jacobi.h",
    "include/eigen3/Eigen/src/LU/Determinant.h",
    "include/eigen3/Eigen/src/LU/FullPivLU.h",
    "include/eigen3/Eigen/src/LU/Inverse.h",
    "include/eigen3/Eigen/src/LU/PartialPivLU.h",
    "include/eigen3/Eigen/src/LU/PartialPivLU_MKL.h",
    "include/eigen3/Eigen/src/LU/arch/Inverse_SSE.h",
    "include/eigen3/Eigen/src/MetisSupport/MetisSupport.h",
    "include/eigen3/Eigen/src/OrderingMethods/Amd.h",
    "include/eigen3/Eigen/src/OrderingMethods/Eigen_Colamd.h",
    "include/eigen3/Eigen/src/OrderingMethods/Ordering.h",
    "include/eigen3/Eigen/src/PaStiXSupport/PaStiXSupport.h",
    "include/eigen3/Eigen/src/PardisoSupport/PardisoSupport.h",
    "include/eigen3/Eigen/src/QR/ColPivHouseholderQR.h",
    "include/eigen3/Eigen/src/QR/ColPivHouseholderQR_MKL.h",
    "include/eigen3/Eigen/src/QR/FullPivHouseholderQR.h",
    "include/eigen3/Eigen/src/QR/HouseholderQR.h",
    "include/eigen3/Eigen/src/QR/HouseholderQR_MKL.h",
    "include/eigen3/Eigen/src/SPQRSupport/SuiteSparseQRSupport.h",
    "include/eigen3/Eigen/src/SVD/JacobiSVD.h",
    "include/eigen3/Eigen/src/SVD/JacobiSVD_MKL.h",
    "include/eigen3/Eigen/src/SVD/UpperBidiagonalization.h",
    "include/eigen3/Eigen/src/SparseCholesky/SimplicialCholesky.h",
    "include/eigen3/Eigen/src/SparseCholesky/SimplicialCholesky_impl.h",
    "include/eigen3/Eigen/src/SparseCore/AmbiVector.h",
    "include/eigen3/Eigen/src/SparseCore/CompressedStorage.h",
    "include/eigen3/Eigen/src/SparseCore/ConservativeSparseSparseProduct.h",
    "include/eigen3/Eigen/src/SparseCore/MappedSparseMatrix.h",
    "include/eigen3/Eigen/src/SparseCore/SparseBlock.h",
    "include/eigen3/Eigen/src/SparseCore/SparseColEtree.h",
    "include/eigen3/Eigen/src/SparseCore/SparseCwiseBinaryOp.h",
    "include/eigen3/Eigen/src/SparseCore/SparseCwiseUnaryOp.h",
    "include/eigen3/Eigen/src/SparseCore/SparseDenseProduct.h",
    "include/eigen3/Eigen/src/SparseCore/SparseDiagonalProduct.h",
    "include/eigen3/Eigen/src/SparseCore/SparseDot.h",
    "include/eigen3/Eigen/src/SparseCore/SparseFuzzy.h",
    "include/eigen3/Eigen/src/SparseCore/SparseMatrix.h",
    "include/eigen3/Eigen/src/SparseCore/SparseMatrixBase.h",
    "include/eigen3/Eigen/src/SparseCore/SparsePermutation.h",
    "include/eigen3/Eigen/src/SparseCore/SparseProduct.h",
    "include/eigen3/Eigen/src/SparseCore/SparseRedux.h",
    "include/eigen3/Eigen/src/SparseCore/SparseSelfAdjointView.h",
    "include/eigen3/Eigen/src/SparseCore/SparseSparseProductWithPruning.h",
    "include/eigen3/Eigen/src/SparseCore/SparseTranspose.h",
    "include/eigen3/Eigen/src/SparseCore/SparseTriangularView.h",
    "include/eigen3/Eigen/src/SparseCore/SparseUtil.h",
    "include/eigen3/Eigen/src/SparseCore/SparseVector.h",
    "include/eigen3/Eigen/src/SparseCore/SparseView.h",
    "include/eigen3/Eigen/src/SparseCore/TriangularSolver.h",
    "include/eigen3/Eigen/src/SparseLU/SparseLU.h",
    "include/eigen3/Eigen/src/SparseLU/SparseLUImpl.h",
    "include/eigen3/Eigen/src/SparseLU/SparseLU_Memory.h",
    "include/eigen3/Eigen/src/SparseLU/SparseLU_Structs.h",
    "include/eigen3/Eigen/src/SparseLU/SparseLU_SupernodalMatrix.h",
    "include/eigen3/Eigen/src/SparseLU/SparseLU_Utils.h",
    "include/eigen3/Eigen/src/SparseLU/SparseLU_column_bmod.h",
    "include/eigen3/Eigen/src/SparseLU/SparseLU_column_dfs.h",
    "include/eigen3/Eigen/src/SparseLU/SparseLU_copy_to_ucol.h",
    "include/eigen3/Eigen/src/SparseLU/SparseLU_gemm_kernel.h",
    "include/eigen3/Eigen/src/SparseLU/SparseLU_heap_relax_snode.h",
    "include/eigen3/Eigen/src/SparseLU/SparseLU_kernel_bmod.h",
    "include/eigen3/Eigen/src/SparseLU/SparseLU_panel_bmod.h",
    "include/eigen3/Eigen/src/SparseLU/SparseLU_panel_dfs.h",
    "include/eigen3/Eigen/src/SparseLU/SparseLU_pivotL.h",
    "include/eigen3/Eigen/src/SparseLU/SparseLU_pruneL.h",
    "include/eigen3/Eigen/src/SparseLU/SparseLU_relax_snode.h",
    "include/eigen3/Eigen/src/SparseQR/SparseQR.h",
    "include/eigen3/Eigen/src/StlSupport/StdDeque.h",
    "include/eigen3/Eigen/src/StlSupport/StdList.h",
    "include/eigen3/Eigen/src/StlSupport/StdVector.h",
    "include/eigen3/Eigen/src/StlSupport/details.h",
    "include/eigen3/Eigen/src/SuperLUSupport/SuperLUSupport.h",
    "include/eigen3/Eigen/src/UmfPackSupport/UmfPackSupport.h",
    "include/eigen3/Eigen/src/misc/Image.h",
    "include/eigen3/Eigen/src/misc/Kernel.h",
    "include/eigen3/Eigen/src/misc/Solve.h",
    "include/eigen3/Eigen/src/misc/SparseSolve.h",
    "include/eigen3/Eigen/src/misc/blas.h",
    "include/eigen3/Eigen/src/plugins/ArrayCwiseBinaryOps.h",
    "include/eigen3/Eigen/src/plugins/ArrayCwiseUnaryOps.h",
    "include/eigen3/Eigen/src/plugins/BlockMethods.h",
    "include/eigen3/Eigen/src/plugins/CommonCwiseBinaryOps.h",
    "include/eigen3/Eigen/src/plugins/CommonCwiseUnaryOps.h",
    "include/eigen3/Eigen/src/plugins/MatrixCwiseBinaryOps.h",
    "include/eigen3/Eigen/src/plugins/MatrixCwiseUnaryOps.h",
    "include/eigen3/signature_of_eigen3_matrix_library",
    "include/eigen3/unsupported/Eigen/AdolcForward",
    "include/eigen3/unsupported/Eigen/AlignedVector3",
    "include/eigen3/unsupported/Eigen/ArpackSupport",
    "include/eigen3/unsupported/Eigen/AutoDiff",
    "include/eigen3/unsupported/Eigen/BVH",
    "include/eigen3/unsupported/Eigen/FFT",
    "include/eigen3/unsupported/Eigen/IterativeSolvers",
    "include/eigen3/unsupported/Eigen/KroneckerProduct",
    "include/eigen3/unsupported/Eigen/LevenbergMarquardt",
    "include/eigen3/unsupported/Eigen/MPRealSupport",
    "include/eigen3/unsupported/Eigen/MatrixFunctions",
    "include/eigen3/unsupported/Eigen/MoreVectorization",
    "include/eigen3/unsupported/Eigen/NonLinearOptimization",
    "include/eigen3/unsupported/Eigen/NumericalDiff",
    "include/eigen3/unsupported/Eigen/OpenGLSupport",
    "include/eigen3/unsupported/Eigen/Polynomials",
    "include/eigen3/unsupported/Eigen/Skyline",
    "include/eigen3/unsupported/Eigen/SparseExtra",
    "include/eigen3/unsupported/Eigen/Splines",
    "include/eigen3/unsupported/Eigen/src/AutoDiff/AutoDiffJacobian.h",
    "include/eigen3/unsupported/Eigen/src/AutoDiff/AutoDiffScalar.h",
    "include/eigen3/unsupported/Eigen/src/AutoDiff/AutoDiffVector.h",
    "include/eigen3/unsupported/Eigen/src/BVH/BVAlgorithms.h",
    "include/eigen3/unsupported/Eigen/src/BVH/KdBVH.h",
    "include/eigen3/unsupported/Eigen/src/FFT/ei_fftw_impl.h",
    "include/eigen3/unsupported/Eigen/src/FFT/ei_kissfft_impl.h",
    "include/eigen3/unsupported/Eigen/src/IterativeSolvers/ConstrainedConjGrad.h",
    "include/eigen3/unsupported/Eigen/src/IterativeSolvers/DGMRES.h",
    "include/eigen3/unsupported/Eigen/src/IterativeSolvers/GMRES.h",
    "include/eigen3/unsupported/Eigen/src/IterativeSolvers/IncompleteCholesky.h",
    "include/eigen3/unsupported/Eigen/src/IterativeSolvers/IncompleteLU.h",
    "include/eigen3/unsupported/Eigen/src/IterativeSolvers/IterationController.h",
    "include/eigen3/unsupported/Eigen/src/IterativeSolvers/MINRES.h",
    "include/eigen3/unsupported/Eigen/src/IterativeSolvers/Scaling.h",
    "include/eigen3/unsupported/Eigen/src/KroneckerProduct/KroneckerTensorProduct.h",
    "include/eigen3/unsupported/Eigen/src/LevenbergMarquardt/LMcovar.h",
    "include/eigen3/unsupported/Eigen/src/LevenbergMarquardt/LMonestep.h",
    "include/eigen3/unsupported/Eigen/src/LevenbergMarquardt/LMpar.h",
    "include/eigen3/unsupported/Eigen/src/LevenbergMarquardt/LMqrsolv.h",
    "include/eigen3/unsupported/Eigen/src/LevenbergMarquardt/LevenbergMarquardt.h",
    "include/eigen3/unsupported/Eigen/src/MatrixFunctions/MatrixExponential.h",
    "include/eigen3/unsupported/Eigen/src/MatrixFunctions/MatrixFunction.h",
    "include/eigen3/unsupported/Eigen/src/MatrixFunctions/MatrixFunctionAtomic.h",
    "include/eigen3/unsupported/Eigen/src/MatrixFunctions/MatrixLogarithm.h",
    "include/eigen3/unsupported/Eigen/src/MatrixFunctions/MatrixPower.h",
    "include/eigen3/unsupported/Eigen/src/MatrixFunctions/MatrixSquareRoot.h",
    "include/eigen3/unsupported/Eigen/src/MatrixFunctions/StemFunction.h",
    "include/eigen3/unsupported/Eigen/src/MoreVectorization/MathFunctions.h",
    "include/eigen3/unsupported/Eigen/src/NonLinearOptimization/HybridNonLinearSolver.h",
    "include/eigen3/unsupported/Eigen/src/NonLinearOptimization/LevenbergMarquardt.h",
    "include/eigen3/unsupported/Eigen/src/NonLinearOptimization/chkder.h",
    "include/eigen3/unsupported/Eigen/src/NonLinearOptimization/covar.h",
    "include/eigen3/unsupported/Eigen/src/NonLinearOptimization/dogleg.h",
    "include/eigen3/unsupported/Eigen/src/NonLinearOptimization/fdjac1.h",
    "include/eigen3/unsupported/Eigen/src/NonLinearOptimization/lmpar.h",
    "include/eigen3/unsupported/Eigen/src/NonLinearOptimization/qrsolv.h",
    "include/eigen3/unsupported/Eigen/src/NonLinearOptimization/r1mpyq.h",
    "include/eigen3/unsupported/Eigen/src/NonLinearOptimization/r1updt.h",
    "include/eigen3/unsupported/Eigen/src/NonLinearOptimization/rwupdt.h",
    "include/eigen3/unsupported/Eigen/src/NumericalDiff/NumericalDiff.h",
    "include/eigen3/unsupported/Eigen/src/Polynomials/Companion.h",
    "include/eigen3/unsupported/Eigen/src/Polynomials/PolynomialSolver.h",
    "include/eigen3/unsupported/Eigen/src/Polynomials/PolynomialUtils.h",
    "include/eigen3/unsupported/Eigen/src/Skyline/SkylineInplaceLU.h",
    "include/eigen3/unsupported/Eigen/src/Skyline/SkylineMatrix.h",
    "include/eigen3/unsupported/Eigen/src/Skyline/SkylineMatrixBase.h",
    "include/eigen3/unsupported/Eigen/src/Skyline/SkylineProduct.h",
    "include/eigen3/unsupported/Eigen/src/Skyline/SkylineStorage.h",
    "include/eigen3/unsupported/Eigen/src/Skyline/SkylineUtil.h",
    "include/eigen3/unsupported/Eigen/src/SparseExtra/BlockOfDynamicSparseMatrix.h",
    "include/eigen3/unsupported/Eigen/src/SparseExtra/DynamicSparseMatrix.h",
    "include/eigen3/unsupported/Eigen/src/SparseExtra/MarketIO.h",
    "include/eigen3/unsupported/Eigen/src/SparseExtra/MatrixMarketIterator.h",
    "include/eigen3/unsupported/Eigen/src/SparseExtra/RandomSetter.h",
    "include/eigen3/unsupported/Eigen/src/Splines/Spline.h",
    "include/eigen3/unsupported/Eigen/src/Splines/SplineFitting.h",
    "include/eigen3/unsupported/Eigen/src/Splines/SplineFwd.h",
    "share/pkgconfig/eigen3.pc",
    "unpacked_source/CMakeLists.txt",
    "unpacked_source/COPYING.BSD",
    "unpacked_source/COPYING.GPL",
    "unpacked_source/COPYING.LGPL",
    "unpacked_source/COPYING.MINPACK",
    "unpacked_source/COPYING.MPL2",
    "unpacked_source/COPYING.README",
    "unpacked_source/CTestConfig.cmake",
    "unpacked_source/CTestCustom.cmake.in",
    "unpacked_source/Eigen/Array",
    "unpacked_source/Eigen/CMakeLists.txt",
    "unpacked_source/Eigen/Cholesky",
    "unpacked_source/Eigen/CholmodSupport",
    "unpacked_source/Eigen/Core",
    "unpacked_source/Eigen/Dense",
    "unpacked_source/Eigen/Eigen",
    "unpacked_source/Eigen/Eigen2Support",
    "unpacked_source/Eigen/Eigenvalues",
    "unpacked_source/Eigen/Geometry",
    "unpacked_source/Eigen/Householder",
    "unpacked_source/Eigen/IterativeLinearSolvers",
    "unpacked_source/Eigen/Jacobi",
    "unpacked_source/Eigen/LU",
    "unpacked_source/Eigen/LeastSquares",
    "unpacked_source/Eigen/MetisSupport",
    "unpacked_source/Eigen/OrderingMethods",
    "unpacked_source/Eigen/PaStiXSupport",
    "unpacked_source/Eigen/PardisoSupport",
    "unpacked_source/Eigen/QR",
    "unpacked_source/Eigen/QtAlignedMalloc",
    "unpacked_source/Eigen/SPQRSupport",
    "unpacked_source/Eigen/SVD",
    "unpacked_source/Eigen/Sparse",
    "unpacked_source/Eigen/SparseCholesky",
    "unpacked_source/Eigen/SparseCore",
    "unpacked_source/Eigen/SparseLU",
    "unpacked_source/Eigen/SparseQR",
    "unpacked_source/Eigen/StdDeque",
    "unpacked_source/Eigen/StdList",
    "unpacked_source/Eigen/StdVector",
    "unpacked_source/Eigen/SuperLUSupport",
    "unpacked_source/Eigen/UmfPackSupport",
    "unpacked_source/Eigen/src/CMakeLists.txt",
    "unpacked_source/Eigen/src/Cholesky/CMakeLists.txt",
    "unpacked_source/Eigen/src/Cholesky/LDLT.h",
    "unpacked_source/Eigen/src/Cholesky/LLT.h",
    "unpacked_source/Eigen/src/Cholesky/LLT_MKL.h",
    "unpacked_source/Eigen/src/CholmodSupport/CMakeLists.txt",
    "unpacked_source/Eigen/src/CholmodSupport/CholmodSupport.h",
    "unpacked_source/Eigen/src/Core/Array.h",
    "unpacked_source/Eigen/src/Core/ArrayBase.h",
    "unpacked_source/Eigen/src/Core/ArrayWrapper.h",
    "unpacked_source/Eigen/src/Core/Assign.h",
    "unpacked_source/Eigen/src/Core/Assign_MKL.h",
    "unpacked_source/Eigen/src/Core/BandMatrix.h",
    "unpacked_source/Eigen/src/Core/Block.h",
    "unpacked_source/Eigen/src/Core/BooleanRedux.h",
    "unpacked_source/Eigen/src/Core/CMakeLists.txt",
    "unpacked_source/Eigen/src/Core/CommaInitializer.h",
    "unpacked_source/Eigen/src/Core/CoreIterators.h",
    "unpacked_source/Eigen/src/Core/CwiseBinaryOp.h",
    "unpacked_source/Eigen/src/Core/CwiseNullaryOp.h",
    "unpacked_source/Eigen/src/Core/CwiseUnaryOp.h",
    "unpacked_source/Eigen/src/Core/CwiseUnaryView.h",
    "unpacked_source/Eigen/src/Core/DenseBase.h",
    "unpacked_source/Eigen/src/Core/DenseCoeffsBase.h",
    "unpacked_source/Eigen/src/Core/DenseStorage.h",
    "unpacked_source/Eigen/src/Core/Diagonal.h",
    "unpacked_source/Eigen/src/Core/DiagonalMatrix.h",
    "unpacked_source/Eigen/src/Core/DiagonalProduct.h",
    "unpacked_source/Eigen/src/Core/Dot.h",
    "unpacked_source/Eigen/src/Core/EigenBase.h",
    "unpacked_source/Eigen/src/Core/Flagged.h",
    "unpacked_source/Eigen/src/Core/ForceAlignedAccess.h",
    "unpacked_source/Eigen/src/Core/Functors.h",
    "unpacked_source/Eigen/src/Core/Fuzzy.h",
    "unpacked_source/Eigen/src/Core/GeneralProduct.h",
    "unpacked_source/Eigen/src/Core/GenericPacketMath.h",
    "unpacked_source/Eigen/src/Core/GlobalFunctions.h",
    "unpacked_source/Eigen/src/Core/IO.h",
    "unpacked_source/Eigen/src/Core/Map.h",
    "unpacked_source/Eigen/src/Core/MapBase.h",
    "unpacked_source/Eigen/src/Core/MathFunctions.h",
    "unpacked_source/Eigen/src/Core/Matrix.h",
    "unpacked_source/Eigen/src/Core/MatrixBase.h",
    "unpacked_source/Eigen/src/Core/NestByValue.h",
    "unpacked_source/Eigen/src/Core/NoAlias.h",
    "unpacked_source/Eigen/src/Core/NumTraits.h",
    "unpacked_source/Eigen/src/Core/PermutationMatrix.h",
    "unpacked_source/Eigen/src/Core/PlainObjectBase.h",
    "unpacked_source/Eigen/src/Core/ProductBase.h",
    "unpacked_source/Eigen/src/Core/Random.h",
    "unpacked_source/Eigen/src/Core/Redux.h",
    "unpacked_source/Eigen/src/Core/Ref.h",
    "unpacked_source/Eigen/src/Core/Replicate.h",
    "unpacked_source/Eigen/src/Core/ReturnByValue.h",
    "unpacked_source/Eigen/src/Core/Reverse.h",
    "unpacked_source/Eigen/src/Core/Select.h",
    "unpacked_source/Eigen/src/Core/SelfAdjointView.h",
    "unpacked_source/Eigen/src/Core/SelfCwiseBinaryOp.h",
    "unpacked_source/Eigen/src/Core/SolveTriangular.h",
    "unpacked_source/Eigen/src/Core/StableNorm.h",
    "unpacked_source/Eigen/src/Core/Stride.h",
    "unpacked_source/Eigen/src/Core/Swap.h",
    "unpacked_source/Eigen/src/Core/Transpose.h",
    "unpacked_source/Eigen/src/Core/Transpositions.h",
    "unpacked_source/Eigen/src/Core/TriangularMatrix.h",
    "unpacked_source/Eigen/src/Core/VectorBlock.h",
    "unpacked_source/Eigen/src/Core/VectorwiseOp.h",
    "unpacked_source/Eigen/src/Core/Visitor.h",
    "unpacked_source/Eigen/src/Core/arch/AltiVec/CMakeLists.txt",
    "unpacked_source/Eigen/src/Core/arch/AltiVec/Complex.h",
    "unpacked_source/Eigen/src/Core/arch/AltiVec/PacketMath.h",
    "unpacked_source/Eigen/src/Core/arch/CMakeLists.txt",
    "unpacked_source/Eigen/src/Core/arch/Default/CMakeLists.txt",
    "unpacked_source/Eigen/src/Core/arch/Default/Settings.h",
    "unpacked_source/Eigen/src/Core/arch/NEON/CMakeLists.txt",
    "unpacked_source/Eigen/src/Core/arch/NEON/Complex.h",
    "unpacked_source/Eigen/src/Core/arch/NEON/PacketMath.h",
    "unpacked_source/Eigen/src/Core/arch/SSE/CMakeLists.txt",
    "unpacked_source/Eigen/src/Core/arch/SSE/Complex.h",
    "unpacked_source/Eigen/src/Core/arch/SSE/MathFunctions.h",
    "unpacked_source/Eigen/src/Core/arch/SSE/PacketMath.h",
    "unpacked_source/Eigen/src/Core/products/CMakeLists.txt",
    "unpacked_source/Eigen/src/Core/products/CoeffBasedProduct.h",
    "unpacked_source/Eigen/src/Core/products/GeneralBlockPanelKernel.h",
    "unpacked_source/Eigen/src/Core/products/GeneralMatrixMatrix.h",
    "unpacked_source/Eigen/src/Core/products/GeneralMatrixMatrixTriangular.h",
    "unpacked_source/Eigen/src/Core/products/GeneralMatrixMatrixTriangular_MKL.h",
    "unpacked_source/Eigen/src/Core/products/GeneralMatrixMatrix_MKL.h",
    "unpacked_source/Eigen/src/Core/products/GeneralMatrixVector.h",
    "unpacked_source/Eigen/src/Core/products/GeneralMatrixVector_MKL.h",
    "unpacked_source/Eigen/src/Core/products/Parallelizer.h",
    "unpacked_source/Eigen/src/Core/products/SelfadjointMatrixMatrix.h",
    "unpacked_source/Eigen/src/Core/products/SelfadjointMatrixMatrix_MKL.h",
    "unpacked_source/Eigen/src/Core/products/SelfadjointMatrixVector.h",
    "unpacked_source/Eigen/src/Core/products/SelfadjointMatrixVector_MKL.h",
    "unpacked_source/Eigen/src/Core/products/SelfadjointProduct.h",
    "unpacked_source/Eigen/src/Core/products/SelfadjointRank2Update.h",
    "unpacked_source/Eigen/src/Core/products/TriangularMatrixMatrix.h",
    "unpacked_source/Eigen/src/Core/products/TriangularMatrixMatrix_MKL.h",
    "unpacked_source/Eigen/src/Core/products/TriangularMatrixVector.h",
    "unpacked_source/Eigen/src/Core/products/TriangularMatrixVector_MKL.h",
    "unpacked_source/Eigen/src/Core/products/TriangularSolverMatrix.h",
    "unpacked_source/Eigen/src/Core/products/TriangularSolverMatrix_MKL.h",
    "unpacked_source/Eigen/src/Core/products/TriangularSolverVector.h",
    "unpacked_source/Eigen/src/Core/util/BlasUtil.h",
    "unpacked_source/Eigen/src/Core/util/CMakeLists.txt",
    "unpacked_source/Eigen/src/Core/util/Constants.h",
    "unpacked_source/Eigen/src/Core/util/DisableStupidWarnings.h",
    "unpacked_source/Eigen/src/Core/util/ForwardDeclarations.h",
    "unpacked_source/Eigen/src/Core/util/MKL_support.h",
    "unpacked_source/Eigen/src/Core/util/Macros.h",
    "unpacked_source/Eigen/src/Core/util/Memory.h",
    "unpacked_source/Eigen/src/Core/util/Meta.h",
    "unpacked_source/Eigen/src/Core/util/NonMPL2.h",
    "unpacked_source/Eigen/src/Core/util/ReenableStupidWarnings.h",
    "unpacked_source/Eigen/src/Core/util/StaticAssert.h",
    "unpacked_source/Eigen/src/Core/util/XprHelper.h",
    "unpacked_source/Eigen/src/Eigen2Support/Block.h",
    "unpacked_source/Eigen/src/Eigen2Support/CMakeLists.txt",
    "unpacked_source/Eigen/src/Eigen2Support/Cwise.h",
    "unpacked_source/Eigen/src/Eigen2Support/CwiseOperators.h",
    "unpacked_source/Eigen/src/Eigen2Support/Geometry/AlignedBox.h",
    "unpacked_source/Eigen/src/Eigen2Support/Geometry/All.h",
    "unpacked_source/Eigen/src/Eigen2Support/Geometry/AngleAxis.h",
    "unpacked_source/Eigen/src/Eigen2Support/Geometry/CMakeLists.txt",
    "unpacked_source/Eigen/src/Eigen2Support/Geometry/Hyperplane.h",
    "unpacked_source/Eigen/src/Eigen2Support/Geometry/ParametrizedLine.h",
    "unpacked_source/Eigen/src/Eigen2Support/Geometry/Quaternion.h",
    "unpacked_source/Eigen/src/Eigen2Support/Geometry/Rotation2D.h",
    "unpacked_source/Eigen/src/Eigen2Support/Geometry/RotationBase.h",
    "unpacked_source/Eigen/src/Eigen2Support/Geometry/Scaling.h",
    "unpacked_source/Eigen/src/Eigen2Support/Geometry/Transform.h",
    "unpacked_source/Eigen/src/Eigen2Support/Geometry/Translation.h",
    "unpacked_source/Eigen/src/Eigen2Support/LU.h",
    "unpacked_source/Eigen/src/Eigen2Support/Lazy.h",
    "unpacked_source/Eigen/src/Eigen2Support/LeastSquares.h",
    "unpacked_source/Eigen/src/Eigen2Support/Macros.h",
    "unpacked_source/Eigen/src/Eigen2Support/MathFunctions.h",
    "unpacked_source/Eigen/src/Eigen2Support/Memory.h",
    "unpacked_source/Eigen/src/Eigen2Support/Meta.h",
    "unpacked_source/Eigen/src/Eigen2Support/Minor.h",
    "unpacked_source/Eigen/src/Eigen2Support/QR.h",
    "unpacked_source/Eigen/src/Eigen2Support/SVD.h",
    "unpacked_source/Eigen/src/Eigen2Support/TriangularSolver.h",
    "unpacked_source/Eigen/src/Eigen2Support/VectorBlock.h",
    "unpacked_source/Eigen/src/Eigenvalues/CMakeLists.txt",
    "unpacked_source/Eigen/src/Eigenvalues/ComplexEigenSolver.h",
    "unpacked_source/Eigen/src/Eigenvalues/ComplexSchur.h",
    "unpacked_source/Eigen/src/Eigenvalues/ComplexSchur_MKL.h",
    "unpacked_source/Eigen/src/Eigenvalues/EigenSolver.h",
    "unpacked_source/Eigen/src/Eigenvalues/GeneralizedEigenSolver.h",
    "unpacked_source/Eigen/src/Eigenvalues/GeneralizedSelfAdjointEigenSolver.h",
    "unpacked_source/Eigen/src/Eigenvalues/HessenbergDecomposition.h",
    "unpacked_source/Eigen/src/Eigenvalues/MatrixBaseEigenvalues.h",
    "unpacked_source/Eigen/src/Eigenvalues/RealQZ.h",
    "unpacked_source/Eigen/src/Eigenvalues/RealSchur.h",
    "unpacked_source/Eigen/src/Eigenvalues/RealSchur_MKL.h",
    "unpacked_source/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h",
    "unpacked_source/Eigen/src/Eigenvalues/SelfAdjointEigenSolver_MKL.h",
    "unpacked_source/Eigen/src/Eigenvalues/Tridiagonalization.h",
    "unpacked_source/Eigen/src/Geometry/AlignedBox.h",
    "unpacked_source/Eigen/src/Geometry/AngleAxis.h",
    "unpacked_source/Eigen/src/Geometry/CMakeLists.txt",
    "unpacked_source/Eigen/src/Geometry/EulerAngles.h",
    "unpacked_source/Eigen/src/Geometry/Homogeneous.h",
    "unpacked_source/Eigen/src/Geometry/Hyperplane.h",
    "unpacked_source/Eigen/src/Geometry/OrthoMethods.h",
    "unpacked_source/Eigen/src/Geometry/ParametrizedLine.h",
    "unpacked_source/Eigen/src/Geometry/Quaternion.h",
    "unpacked_source/Eigen/src/Geometry/Rotation2D.h",
    "unpacked_source/Eigen/src/Geometry/RotationBase.h",
    "unpacked_source/Eigen/src/Geometry/Scaling.h",
    "unpacked_source/Eigen/src/Geometry/Transform.h",
    "unpacked_source/Eigen/src/Geometry/Translation.h",
    "unpacked_source/Eigen/src/Geometry/Umeyama.h",
    "unpacked_source/Eigen/src/Geometry/arch/CMakeLists.txt",
    "unpacked_source/Eigen/src/Geometry/arch/Geometry_SSE.h",
    "unpacked_source/Eigen/src/Householder/BlockHouseholder.h",
    "unpacked_source/Eigen/src/Householder/CMakeLists.txt",
    "unpacked_source/Eigen/src/Householder/Householder.h",
    "unpacked_source/Eigen/src/Householder/HouseholderSequence.h",
    "unpacked_source/Eigen/src/IterativeLinearSolvers/BasicPreconditioners.h",
    "unpacked_source/Eigen/src/IterativeLinearSolvers/BiCGSTAB.h",
    "unpacked_source/Eigen/src/IterativeLinearSolvers/CMakeLists.txt",
    "unpacked_source/Eigen/src/IterativeLinearSolvers/ConjugateGradient.h",
    "unpacked_source/Eigen/src/IterativeLinearSolvers/IncompleteLUT.h",
    "unpacked_source/Eigen/src/IterativeLinearSolvers/IterativeSolverBase.h",
    "unpacked_source/Eigen/src/Jacobi/CMakeLists.txt",
    "unpacked_source/Eigen/src/Jacobi/Jacobi.h",
    "unpacked_source/Eigen/src/LU/CMakeLists.txt",
    "unpacked_source/Eigen/src/LU/Determinant.h",
    "unpacked_source/Eigen/src/LU/FullPivLU.h",
    "unpacked_source/Eigen/src/LU/Inverse.h",
    "unpacked_source/Eigen/src/LU/PartialPivLU.h",
    "unpacked_source/Eigen/src/LU/PartialPivLU_MKL.h",
    "unpacked_source/Eigen/src/LU/arch/CMakeLists.txt",
    "unpacked_source/Eigen/src/LU/arch/Inverse_SSE.h",
    "unpacked_source/Eigen/src/MetisSupport/CMakeLists.txt",
    "unpacked_source/Eigen/src/MetisSupport/MetisSupport.h",
    "unpacked_source/Eigen/src/OrderingMethods/Amd.h",
    "unpacked_source/Eigen/src/OrderingMethods/CMakeLists.txt",
    "unpacked_source/Eigen/src/OrderingMethods/Eigen_Colamd.h",
    "unpacked_source/Eigen/src/OrderingMethods/Ordering.h",
    "unpacked_source/Eigen/src/PaStiXSupport/CMakeLists.txt",
    "unpacked_source/Eigen/src/PaStiXSupport/PaStiXSupport.h",
    "unpacked_source/Eigen/src/PardisoSupport/CMakeLists.txt",
    "unpacked_source/Eigen/src/PardisoSupport/PardisoSupport.h",
    "unpacked_source/Eigen/src/QR/CMakeLists.txt",
    "unpacked_source/Eigen/src/QR/ColPivHouseholderQR.h",
    "unpacked_source/Eigen/src/QR/ColPivHouseholderQR_MKL.h",
    "unpacked_source/Eigen/src/QR/FullPivHouseholderQR.h",
    "unpacked_source/Eigen/src/QR/HouseholderQR.h",
    "unpacked_source/Eigen/src/QR/HouseholderQR_MKL.h",
    "unpacked_source/Eigen/src/SPQRSupport/CMakeLists.txt",
    "unpacked_source/Eigen/src/SPQRSupport/SuiteSparseQRSupport.h",
    "unpacked_source/Eigen/src/SVD/CMakeLists.txt",
    "unpacked_source/Eigen/src/SVD/JacobiSVD.h",
    "unpacked_source/Eigen/src/SVD/JacobiSVD_MKL.h",
    "unpacked_source/Eigen/src/SVD/UpperBidiagonalization.h",
    "unpacked_source/Eigen/src/SparseCholesky/CMakeLists.txt",
    "unpacked_source/Eigen/src/SparseCholesky/SimplicialCholesky.h",
    "unpacked_source/Eigen/src/SparseCholesky/SimplicialCholesky_impl.h",
    "unpacked_source/Eigen/src/SparseCore/AmbiVector.h",
    "unpacked_source/Eigen/src/SparseCore/CMakeLists.txt",
    "unpacked_source/Eigen/src/SparseCore/CompressedStorage.h",
    "unpacked_source/Eigen/src/SparseCore/ConservativeSparseSparseProduct.h",
    "unpacked_source/Eigen/src/SparseCore/MappedSparseMatrix.h",
    "unpacked_source/Eigen/src/SparseCore/SparseBlock.h",
    "unpacked_source/Eigen/src/SparseCore/SparseColEtree.h",
    "unpacked_source/Eigen/src/SparseCore/SparseCwiseBinaryOp.h",
    "unpacked_source/Eigen/src/SparseCore/SparseCwiseUnaryOp.h",
    "unpacked_source/Eigen/src/SparseCore/SparseDenseProduct.h",
    "unpacked_source/Eigen/src/SparseCore/SparseDiagonalProduct.h",
    "unpacked_source/Eigen/src/SparseCore/SparseDot.h",
    "unpacked_source/Eigen/src/SparseCore/SparseFuzzy.h",
    "unpacked_source/Eigen/src/SparseCore/SparseMatrix.h",
    "unpacked_source/Eigen/src/SparseCore/SparseMatrixBase.h",
    "unpacked_source/Eigen/src/SparseCore/SparsePermutation.h",
    "unpacked_source/Eigen/src/SparseCore/SparseProduct.h",
    "unpacked_source/Eigen/src/SparseCore/SparseRedux.h",
    "unpacked_source/Eigen/src/SparseCore/SparseSelfAdjointView.h",
    "unpacked_source/Eigen/src/SparseCore/SparseSparseProductWithPruning.h",
    "unpacked_source/Eigen/src/SparseCore/SparseTranspose.h",
    "unpacked_source/Eigen/src/SparseCore/SparseTriangularView.h",
    "unpacked_source/Eigen/src/SparseCore/SparseUtil.h",
    "unpacked_source/Eigen/src/SparseCore/SparseVector.h",
    "unpacked_source/Eigen/src/SparseCore/SparseView.h",
    "unpacked_source/Eigen/src/SparseCore/TriangularSolver.h",
    "unpacked_source/Eigen/src/SparseLU/CMakeLists.txt",
    "unpacked_source/Eigen/src/SparseLU/SparseLU.h",
    "unpacked_source/Eigen/src/SparseLU/SparseLUImpl.h",
    "unpacked_source/Eigen/src/SparseLU/SparseLU_Memory.h",
    "unpacked_source/Eigen/src/SparseLU/SparseLU_Structs.h",
    "unpacked_source/Eigen/src/SparseLU/SparseLU_SupernodalMatrix.h",
    "unpacked_source/Eigen/src/SparseLU/SparseLU_Utils.h",
    "unpacked_source/Eigen/src/SparseLU/SparseLU_column_bmod.h",
    "unpacked_source/Eigen/src/SparseLU/SparseLU_column_dfs.h",
    "unpacked_source/Eigen/src/SparseLU/SparseLU_copy_to_ucol.h",
    "unpacked_source/Eigen/src/SparseLU/SparseLU_gemm_kernel.h",
    "unpacked_source/Eigen/src/SparseLU/SparseLU_heap_relax_snode.h",
    "unpacked_source/Eigen/src/SparseLU/SparseLU_kernel_bmod.h",
    "unpacked_source/Eigen/src/SparseLU/SparseLU_panel_bmod.h",
    "unpacked_source/Eigen/src/SparseLU/SparseLU_panel_dfs.h",
    "unpacked_source/Eigen/src/SparseLU/SparseLU_pivotL.h",
    "unpacked_source/Eigen/src/SparseLU/SparseLU_pruneL.h",
    "unpacked_source/Eigen/src/SparseLU/SparseLU_relax_snode.h",
    "unpacked_source/Eigen/src/SparseQR/CMakeLists.txt",
    "unpacked_source/Eigen/src/SparseQR/SparseQR.h",
    "unpacked_source/Eigen/src/StlSupport/CMakeLists.txt",
    "unpacked_source/Eigen/src/StlSupport/StdDeque.h",
    "unpacked_source/Eigen/src/StlSupport/StdList.h",
    "unpacked_source/Eigen/src/StlSupport/StdVector.h",
    "unpacked_source/Eigen/src/StlSupport/details.h",
    "unpacked_source/Eigen/src/SuperLUSupport/CMakeLists.txt",
    "unpacked_source/Eigen/src/SuperLUSupport/SuperLUSupport.h",
    "unpacked_source/Eigen/src/UmfPackSupport/CMakeLists.txt",
    "unpacked_source/Eigen/src/UmfPackSupport/UmfPackSupport.h",
    "unpacked_source/Eigen/src/misc/CMakeLists.txt",
    "unpacked_source/Eigen/src/misc/Image.h",
    "unpacked_source/Eigen/src/misc/Kernel.h",
    "unpacked_source/Eigen/src/misc/Solve.h",
    "unpacked_source/Eigen/src/misc/SparseSolve.h",
    "unpacked_source/Eigen/src/misc/blas.h",
    "unpacked_source/Eigen/src/plugins/ArrayCwiseBinaryOps.h",
    "unpacked_source/Eigen/src/plugins/ArrayCwiseUnaryOps.h",
    "unpacked_source/Eigen/src/plugins/BlockMethods.h",
    "unpacked_source/Eigen/src/plugins/CMakeLists.txt",
    "unpacked_source/Eigen/src/plugins/CommonCwiseBinaryOps.h",
    "unpacked_source/Eigen/src/plugins/CommonCwiseUnaryOps.h",
    "unpacked_source/Eigen/src/plugins/MatrixCwiseBinaryOps.h",
    "unpacked_source/Eigen/src/plugins/MatrixCwiseUnaryOps.h",
    "unpacked_source/INSTALL",
    "unpacked_source/bench/BenchSparseUtil.h",
    "unpacked_source/bench/BenchTimer.h",
    "unpacked_source/bench/BenchUtil.h",
    "unpacked_source/bench/README.txt",
    "unpacked_source/bench/basicbench.cxxlist",
    "unpacked_source/bench/basicbenchmark.cpp",
    "unpacked_source/bench/basicbenchmark.h",
    "unpacked_source/bench/benchBlasGemm.cpp",
    "unpacked_source/bench/benchCholesky.cpp",
    "unpacked_source/bench/benchEigenSolver.cpp",
    "unpacked_source/bench/benchFFT.cpp",
    "unpacked_source/bench/benchGeometry.cpp",
    "unpacked_source/bench/benchVecAdd.cpp",
    "unpacked_source/bench/bench_gemm.cpp",
    "unpacked_source/bench/bench_multi_compilers.sh",
    "unpacked_source/bench/bench_norm.cpp",
    "unpacked_source/bench/bench_reverse.cpp",
    "unpacked_source/bench/bench_sum.cpp",
    "unpacked_source/bench/bench_unrolling",
    "unpacked_source/bench/benchmark.cpp",
    "unpacked_source/bench/benchmarkSlice.cpp",
    "unpacked_source/bench/benchmarkX.cpp",
    "unpacked_source/bench/benchmarkXcwise.cpp",
    "unpacked_source/bench/benchmark_suite",
    "unpacked_source/bench/btl/CMakeLists.txt",
    "unpacked_source/bench/btl/COPYING",
    "unpacked_source/bench/btl/README",
    "unpacked_source/bench/btl/actions/action_aat_product.hh",
    "unpacked_source/bench/btl/actions/action_ata_product.hh",
    "unpacked_source/bench/btl/actions/action_atv_product.hh",
    "unpacked_source/bench/btl/actions/action_axpby.hh",
    "unpacked_source/bench/btl/actions/action_axpy.hh",
    "unpacked_source/bench/btl/actions/action_cholesky.hh",
    "unpacked_source/bench/btl/actions/action_ger.hh",
    "unpacked_source/bench/btl/actions/action_hessenberg.hh",
    "unpacked_source/bench/btl/actions/action_lu_decomp.hh",
    "unpacked_source/bench/btl/actions/action_lu_solve.hh",
    "unpacked_source/bench/btl/actions/action_matrix_matrix_product.hh",
    "unpacked_source/bench/btl/actions/action_matrix_matrix_product_bis.hh",
    "unpacked_source/bench/btl/actions/action_matrix_vector_product.hh",
    "unpacked_source/bench/btl/actions/action_partial_lu.hh",
    "unpacked_source/bench/btl/actions/action_rot.hh",
    "unpacked_source/bench/btl/actions/action_symv.hh",
    "unpacked_source/bench/btl/actions/action_syr2.hh",
    "unpacked_source/bench/btl/actions/action_trisolve.hh",
    "unpacked_source/bench/btl/actions/action_trisolve_matrix.hh",
    "unpacked_source/bench/btl/actions/action_trmm.hh",
    "unpacked_source/bench/btl/actions/basic_actions.hh",
    "unpacked_source/bench/btl/cmake/FindACML.cmake",
    "unpacked_source/bench/btl/cmake/FindATLAS.cmake",
    "unpacked_source/bench/btl/cmake/FindBlitz.cmake",
    "unpacked_source/bench/btl/cmake/FindCBLAS.cmake",
    "unpacked_source/bench/btl/cmake/FindGMM.cmake",
    "unpacked_source/bench/btl/cmake/FindGOTO.cmake",
    "unpacked_source/bench/btl/cmake/FindGOTO2.cmake",
    "unpacked_source/bench/btl/cmake/FindMKL.cmake",
    "unpacked_source/bench/btl/cmake/FindMTL4.cmake",
    "unpacked_source/bench/btl/cmake/FindPackageHandleStandardArgs.cmake",
    "unpacked_source/bench/btl/cmake/FindTvmet.cmake",
    "unpacked_source/bench/btl/cmake/MacroOptionalAddSubdirectory.cmake",
    "unpacked_source/bench/btl/data/CMakeLists.txt",
    "unpacked_source/bench/btl/data/action_settings.txt",
    "unpacked_source/bench/btl/data/gnuplot_common_settings.hh",
    "unpacked_source/bench/btl/data/go_mean",
    "unpacked_source/bench/btl/data/mean.cxx",
    "unpacked_source/bench/btl/data/mk_gnuplot_script.sh",
    "unpacked_source/bench/btl/data/mk_mean_script.sh",
    "unpacked_source/bench/btl/data/mk_new_gnuplot.sh",
    "unpacked_source/bench/btl/data/perlib_plot_settings.txt",
    "unpacked_source/bench/btl/data/regularize.cxx",
    "unpacked_source/bench/btl/data/smooth.cxx",
    "unpacked_source/bench/btl/data/smooth_all.sh",
    "unpacked_source/bench/btl/generic_bench/bench.hh",
    "unpacked_source/bench/btl/generic_bench/bench_parameter.hh",
    "unpacked_source/bench/btl/generic_bench/btl.hh",
    "unpacked_source/bench/btl/generic_bench/init/init_function.hh",
    "unpacked_source/bench/btl/generic_bench/init/init_matrix.hh",
    "unpacked_source/bench/btl/generic_bench/init/init_vector.hh",
    "unpacked_source/bench/btl/generic_bench/static/bench_static.hh",
    "unpacked_source/bench/btl/generic_bench/static/intel_bench_fixed_size.hh",
    "unpacked_source/bench/btl/generic_bench/static/static_size_generator.hh",
    "unpacked_source/bench/btl/generic_bench/timers/STL_perf_analyzer.hh",
    "unpacked_source/bench/btl/generic_bench/timers/STL_timer.hh",
    "unpacked_source/bench/btl/generic_bench/timers/mixed_perf_analyzer.hh",
    "unpacked_source/bench/btl/generic_bench/timers/portable_perf_analyzer.hh",
    "unpacked_source/bench/btl/generic_bench/timers/portable_perf_analyzer_old.hh",
    "unpacked_source/bench/btl/generic_bench/timers/portable_timer.hh",
    "unpacked_source/bench/btl/generic_bench/timers/x86_perf_analyzer.hh",
    "unpacked_source/bench/btl/generic_bench/timers/x86_timer.hh",
    "unpacked_source/bench/btl/generic_bench/utils/size_lin_log.hh",
    "unpacked_source/bench/btl/generic_bench/utils/size_log.hh",
    "unpacked_source/bench/btl/generic_bench/utils/utilities.h",
    "unpacked_source/bench/btl/generic_bench/utils/xy_file.hh",
    "unpacked_source/bench/btl/libs/BLAS/CMakeLists.txt",
    "unpacked_source/bench/btl/libs/BLAS/blas.h",
    "unpacked_source/bench/btl/libs/BLAS/blas_interface.hh",
    "unpacked_source/bench/btl/libs/BLAS/blas_interface_impl.hh",
    "unpacked_source/bench/btl/libs/BLAS/c_interface_base.h",
    "unpacked_source/bench/btl/libs/BLAS/main.cpp",
    "unpacked_source/bench/btl/libs/STL/CMakeLists.txt",
    "unpacked_source/bench/btl/libs/STL/STL_interface.hh",
    "unpacked_source/bench/btl/libs/STL/main.cpp",
    "unpacked_source/bench/btl/libs/blitz/CMakeLists.txt",
    "unpacked_source/bench/btl/libs/blitz/blitz_LU_solve_interface.hh",
    "unpacked_source/bench/btl/libs/blitz/blitz_interface.hh",
    "unpacked_source/bench/btl/libs/blitz/btl_blitz.cpp",
    "unpacked_source/bench/btl/libs/blitz/btl_tiny_blitz.cpp",
    "unpacked_source/bench/btl/libs/blitz/tiny_blitz_interface.hh",
    "unpacked_source/bench/btl/libs/eigen2/CMakeLists.txt",
    "unpacked_source/bench/btl/libs/eigen2/btl_tiny_eigen2.cpp",
    "unpacked_source/bench/btl/libs/eigen2/eigen2_interface.hh",
    "unpacked_source/bench/btl/libs/eigen2/main_adv.cpp",
    "unpacked_source/bench/btl/libs/eigen2/main_linear.cpp",
    "unpacked_source/bench/btl/libs/eigen2/main_matmat.cpp",
    "unpacked_source/bench/btl/libs/eigen2/main_vecmat.cpp",
    "unpacked_source/bench/btl/libs/eigen3/CMakeLists.txt",
    "unpacked_source/bench/btl/libs/eigen3/btl_tiny_eigen3.cpp",
    "unpacked_source/bench/btl/libs/eigen3/eigen3_interface.hh",
    "unpacked_source/bench/btl/libs/eigen3/main_adv.cpp",
    "unpacked_source/bench/btl/libs/eigen3/main_linear.cpp",
    "unpacked_source/bench/btl/libs/eigen3/main_matmat.cpp",
    "unpacked_source/bench/btl/libs/eigen3/main_vecmat.cpp",
    "unpacked_source/bench/btl/libs/gmm/CMakeLists.txt",
    "unpacked_source/bench/btl/libs/gmm/gmm_LU_solve_interface.hh",
    "unpacked_source/bench/btl/libs/gmm/gmm_interface.hh",
    "unpacked_source/bench/btl/libs/gmm/main.cpp",
    "unpacked_source/bench/btl/libs/mtl4/.kdbgrc.main",
    "unpacked_source/bench/btl/libs/mtl4/CMakeLists.txt",
    "unpacked_source/bench/btl/libs/mtl4/main.cpp",
    "unpacked_source/bench/btl/libs/mtl4/mtl4_LU_solve_interface.hh",
    "unpacked_source/bench/btl/libs/mtl4/mtl4_interface.hh",
    "unpacked_source/bench/btl/libs/tvmet/CMakeLists.txt",
    "unpacked_source/bench/btl/libs/tvmet/main.cpp",
    "unpacked_source/bench/btl/libs/tvmet/tvmet_interface.hh",
    "unpacked_source/bench/btl/libs/ublas/CMakeLists.txt",
    "unpacked_source/bench/btl/libs/ublas/main.cpp",
    "unpacked_source/bench/btl/libs/ublas/ublas_interface.hh",
    "unpacked_source/bench/check_cache_queries.cpp",
    "unpacked_source/bench/eig33.cpp",
    "unpacked_source/bench/geometry.cpp",
    "unpacked_source/bench/product_threshold.cpp",
    "unpacked_source/bench/quat_slerp.cpp",
    "unpacked_source/bench/quatmul.cpp",
    "unpacked_source/bench/sparse_cholesky.cpp",
    "unpacked_source/bench/sparse_dense_product.cpp",
    "unpacked_source/bench/sparse_lu.cpp",
    "unpacked_source/bench/sparse_product.cpp",
    "unpacked_source/bench/sparse_randomsetter.cpp",
    "unpacked_source/bench/sparse_setter.cpp",
    "unpacked_source/bench/sparse_transpose.cpp",
    "unpacked_source/bench/sparse_trisolver.cpp",
    "unpacked_source/bench/spbench/CMakeLists.txt",
    "unpacked_source/bench/spbench/sp_solver.cpp",
    "unpacked_source/bench/spbench/spbench.dtd",
    "unpacked_source/bench/spbench/spbenchsolver.cpp",
    "unpacked_source/bench/spbench/spbenchsolver.h",
    "unpacked_source/bench/spbench/spbenchstyle.h",
    "unpacked_source/bench/spbench/test_sparseLU.cpp",
    "unpacked_source/bench/spmv.cpp",
    "unpacked_source/bench/vdw_new.cpp",
    "unpacked_source/blas/BandTriangularSolver.h",
    "unpacked_source/blas/CMakeLists.txt",
    "unpacked_source/blas/GeneralRank1Update.h",
    "unpacked_source/blas/PackedSelfadjointProduct.h",
    "unpacked_source/blas/PackedTriangularMatrixVector.h",
    "unpacked_source/blas/PackedTriangularSolverVector.h",
    "unpacked_source/blas/README.txt",
    "unpacked_source/blas/Rank2Update.h",
    "unpacked_source/blas/chbmv.f",
    "unpacked_source/blas/chpmv.f",
    "unpacked_source/blas/common.h",
    "unpacked_source/blas/complex_double.cpp",
    "unpacked_source/blas/complex_single.cpp",
    "unpacked_source/blas/complexdots.f",
    "unpacked_source/blas/ctbmv.f",
    "unpacked_source/blas/double.cpp",
    "unpacked_source/blas/drotm.f",
    "unpacked_source/blas/drotmg.f",
    "unpacked_source/blas/dsbmv.f",
    "unpacked_source/blas/dspmv.f",
    "unpacked_source/blas/dtbmv.f",
    "unpacked_source/blas/level1_cplx_impl.h",
    "unpacked_source/blas/level1_impl.h",
    "unpacked_source/blas/level1_real_impl.h",
    "unpacked_source/blas/level2_cplx_impl.h",
    "unpacked_source/blas/level2_impl.h",
    "unpacked_source/blas/level2_real_impl.h",
    "unpacked_source/blas/level3_impl.h",
    "unpacked_source/blas/lsame.f",
    "unpacked_source/blas/single.cpp",
    "unpacked_source/blas/srotm.f",
    "unpacked_source/blas/srotmg.f",
    "unpacked_source/blas/ssbmv.f",
    "unpacked_source/blas/sspmv.f",
    "unpacked_source/blas/stbmv.f",
    "unpacked_source/blas/testing/CMakeLists.txt",
    "unpacked_source/blas/testing/cblat1.f",
    "unpacked_source/blas/testing/cblat2.dat",
    "unpacked_source/blas/testing/cblat2.f",
    "unpacked_source/blas/testing/cblat3.dat",
    "unpacked_source/blas/testing/cblat3.f",
    "unpacked_source/blas/testing/dblat1.f",
    "unpacked_source/blas/testing/dblat2.dat",
    "unpacked_source/blas/testing/dblat2.f",
    "unpacked_source/blas/testing/dblat3.dat",
    "unpacked_source/blas/testing/dblat3.f",
    "unpacked_source/blas/testing/runblastest.sh",
    "unpacked_source/blas/testing/sblat1.f",
    "unpacked_source/blas/testing/sblat2.dat",
    "unpacked_source/blas/testing/sblat2.f",
    "unpacked_source/blas/testing/sblat3.dat",
    "unpacked_source/blas/testing/sblat3.f",
    "unpacked_source/blas/testing/zblat1.f",
    "unpacked_source/blas/testing/zblat2.dat",
    "unpacked_source/blas/testing/zblat2.f",
    "unpacked_source/blas/testing/zblat3.dat",
    "unpacked_source/blas/testing/zblat3.f",
    "unpacked_source/blas/xerbla.cpp",
    "unpacked_source/blas/zhbmv.f",
    "unpacked_source/blas/zhpmv.f",
    "unpacked_source/blas/ztbmv.f",
    "unpacked_source/cmake/EigenConfigureTesting.cmake",
    "unpacked_source/cmake/EigenDetermineOSVersion.cmake",
    "unpacked_source/cmake/EigenDetermineVSServicePack.cmake",
    "unpacked_source/cmake/EigenTesting.cmake",
    "unpacked_source/cmake/FindAdolc.cmake",
    "unpacked_source/cmake/FindBLAS.cmake",
    "unpacked_source/cmake/FindCholmod.cmake",
    "unpacked_source/cmake/FindEigen2.cmake",
    "unpacked_source/cmake/FindEigen3.cmake",
    "unpacked_source/cmake/FindFFTW.cmake",
    "unpacked_source/cmake/FindGLEW.cmake",
    "unpacked_source/cmake/FindGMP.cmake",
    "unpacked_source/cmake/FindGSL.cmake",
    "unpacked_source/cmake/FindGoogleHash.cmake",
    "unpacked_source/cmake/FindLAPACK.cmake",
    "unpacked_source/cmake/FindMPFR.cmake",
    "unpacked_source/cmake/FindMetis.cmake",
    "unpacked_source/cmake/FindPastix.cmake",
    "unpacked_source/cmake/FindSPQR.cmake",
    "unpacked_source/cmake/FindScotch.cmake",
    "unpacked_source/cmake/FindStandardMathLibrary.cmake",
    "unpacked_source/cmake/FindSuperLU.cmake",
    "unpacked_source/cmake/FindUmfpack.cmake",
    "unpacked_source/cmake/RegexUtils.cmake",
    "unpacked_source/cmake/language_support.cmake",
    "unpacked_source/debug/gdb/__init__.py",
    "unpacked_source/debug/gdb/printers.py",
    "unpacked_source/debug/msvc/eigen.natvis",
    "unpacked_source/debug/msvc/eigen_autoexp_part.dat",
    "unpacked_source/demos/CMakeLists.txt",
    "unpacked_source/demos/mandelbrot/CMakeLists.txt",
    "unpacked_source/demos/mandelbrot/README",
    "unpacked_source/demos/mandelbrot/mandelbrot.cpp",
    "unpacked_source/demos/mandelbrot/mandelbrot.h",
    "unpacked_source/demos/mix_eigen_and_c/README",
    "unpacked_source/demos/mix_eigen_and_c/binary_library.cpp",
    "unpacked_source/demos/mix_eigen_and_c/binary_library.h",
    "unpacked_source/demos/mix_eigen_and_c/example.c",
    "unpacked_source/demos/opengl/CMakeLists.txt",
    "unpacked_source/demos/opengl/README",
    "unpacked_source/demos/opengl/camera.cpp",
    "unpacked_source/demos/opengl/camera.h",
    "unpacked_source/demos/opengl/gpuhelper.cpp",
    "unpacked_source/demos/opengl/gpuhelper.h",
    "unpacked_source/demos/opengl/icosphere.cpp",
    "unpacked_source/demos/opengl/icosphere.h",
    "unpacked_source/demos/opengl/quaternion_demo.cpp",
    "unpacked_source/demos/opengl/quaternion_demo.h",
    "unpacked_source/demos/opengl/trackball.cpp",
    "unpacked_source/demos/opengl/trackball.h",
    "unpacked_source/doc/A05_PortingFrom2To3.dox",
    "unpacked_source/doc/A10_Eigen2SupportModes.dox",
    "unpacked_source/doc/AsciiQuickReference.txt",
    "unpacked_source/doc/B01_Experimental.dox",
    "unpacked_source/doc/CMakeLists.txt",
    "unpacked_source/doc/ClassHierarchy.dox",
    "unpacked_source/doc/CustomizingEigen.dox",
    "unpacked_source/doc/Doxyfile.in",
    "unpacked_source/doc/Eigen_Silly_Professor_64x64.png",
    "unpacked_source/doc/FixedSizeVectorizable.dox",
    "unpacked_source/doc/FunctionsTakingEigenTypes.dox",
    "unpacked_source/doc/HiPerformance.dox",
    "unpacked_source/doc/InsideEigenExample.dox",
    "unpacked_source/doc/Manual.dox",
    "unpacked_source/doc/Overview.dox",
    "unpacked_source/doc/PassingByValue.dox",
    "unpacked_source/doc/Pitfalls.dox",
    "unpacked_source/doc/PreprocessorDirectives.dox",
    "unpacked_source/doc/QuickReference.dox",
    "unpacked_source/doc/QuickStartGuide.dox",
    "unpacked_source/doc/SparseLinearSystems.dox",
    "unpacked_source/doc/SparseQuickReference.dox",
    "unpacked_source/doc/StlContainers.dox",
    "unpacked_source/doc/StorageOrders.dox",
    "unpacked_source/doc/StructHavingEigenMembers.dox",
    "unpacked_source/doc/TemplateKeyword.dox",
    "unpacked_source/doc/TopicAliasing.dox",
    "unpacked_source/doc/TopicAssertions.dox",
    "unpacked_source/doc/TopicEigenExpressionTemplates.dox",
    "unpacked_source/doc/TopicLazyEvaluation.dox",
    "unpacked_source/doc/TopicLinearAlgebraDecompositions.dox",
    "unpacked_source/doc/TopicMultithreading.dox",
    "unpacked_source/doc/TopicResizing.dox",
    "unpacked_source/doc/TopicScalarTypes.dox",
    "unpacked_source/doc/TopicVectorization.dox",
    "unpacked_source/doc/TutorialAdvancedInitialization.dox",
    "unpacked_source/doc/TutorialArrayClass.dox",
    "unpacked_source/doc/TutorialBlockOperations.dox",
    "unpacked_source/doc/TutorialGeometry.dox",
    "unpacked_source/doc/TutorialLinearAlgebra.dox",
    "unpacked_source/doc/TutorialMapClass.dox",
    "unpacked_source/doc/TutorialMatrixArithmetic.dox",
    "unpacked_source/doc/TutorialMatrixClass.dox",
    "unpacked_source/doc/TutorialReductionsVisitorsBroadcasting.dox",
    "unpacked_source/doc/TutorialSparse.dox",
    "unpacked_source/doc/TutorialSparse_example_details.dox",
    "unpacked_source/doc/UnalignedArrayAssert.dox",
    "unpacked_source/doc/UsingIntelMKL.dox",
    "unpacked_source/doc/WrongStackAlignment.dox",
    "unpacked_source/doc/eigen_navtree_hacks.js",
    "unpacked_source/doc/eigendoxy.css",
    "unpacked_source/doc/eigendoxy_footer.html.in",
    "unpacked_source/doc/eigendoxy_header.html.in",
    "unpacked_source/doc/eigendoxy_layout.xml.in",
    "unpacked_source/doc/eigendoxy_tabs.css",
    "unpacked_source/doc/examples/.krazy",
    "unpacked_source/doc/examples/CMakeLists.txt",
    "unpacked_source/doc/examples/DenseBase_middleCols_int.cpp",
    "unpacked_source/doc/examples/DenseBase_middleRows_int.cpp",
    "unpacked_source/doc/examples/DenseBase_template_int_middleCols.cpp",
    "unpacked_source/doc/examples/DenseBase_template_int_middleRows.cpp",
    "unpacked_source/doc/examples/MatrixBase_cwise_const.cpp",
    "unpacked_source/doc/examples/QuickStart_example.cpp",
    "unpacked_source/doc/examples/QuickStart_example2_dynamic.cpp",
    "unpacked_source/doc/examples/QuickStart_example2_fixed.cpp",
    "unpacked_source/doc/examples/TemplateKeyword_flexible.cpp",
    "unpacked_source/doc/examples/TemplateKeyword_simple.cpp",
    "unpacked_source/doc/examples/TutorialLinAlgComputeTwice.cpp",
    "unpacked_source/doc/examples/TutorialLinAlgExComputeSolveError.cpp",
    "unpacked_source/doc/examples/TutorialLinAlgExSolveColPivHouseholderQR.cpp",
    "unpacked_source/doc/examples/TutorialLinAlgExSolveLDLT.cpp",
    "unpacked_source/doc/examples/TutorialLinAlgInverseDeterminant.cpp",
    "unpacked_source/doc/examples/TutorialLinAlgRankRevealing.cpp",
    "unpacked_source/doc/examples/TutorialLinAlgSVDSolve.cpp",
    "unpacked_source/doc/examples/TutorialLinAlgSelfAdjointEigenSolver.cpp",
    "unpacked_source/doc/examples/TutorialLinAlgSetThreshold.cpp",
    "unpacked_source/doc/examples/Tutorial_ArrayClass_accessors.cpp",
    "unpacked_source/doc/examples/Tutorial_ArrayClass_addition.cpp",
    "unpacked_source/doc/examples/Tutorial_ArrayClass_cwise_other.cpp",
    "unpacked_source/doc/examples/Tutorial_ArrayClass_interop.cpp",
    "unpacked_source/doc/examples/Tutorial_ArrayClass_interop_matrix.cpp",
    "unpacked_source/doc/examples/Tutorial_ArrayClass_mult.cpp",
    "unpacked_source/doc/examples/Tutorial_BlockOperations_block_assignment.cpp",
    "unpacked_source/doc/examples/Tutorial_BlockOperations_colrow.cpp",
    "unpacked_source/doc/examples/Tutorial_BlockOperations_corner.cpp",
    "unpacked_source/doc/examples/Tutorial_BlockOperations_print_block.cpp",
    "unpacked_source/doc/examples/Tutorial_BlockOperations_vector.cpp",
    "unpacked_source/doc/examples/Tutorial_PartialLU_solve.cpp",
    "unpacked_source/doc/examples/Tutorial_ReductionsVisitorsBroadcasting_broadcast_1nn.cpp",
    "unpacked_source/doc/examples/Tutorial_ReductionsVisitorsBroadcasting_broadcast_simple.cpp",
    "unpacked_source/doc/examples/Tutorial_ReductionsVisitorsBroadcasting_broadcast_simple_rowwise.cpp",
    "unpacked_source/doc/examples/Tutorial_ReductionsVisitorsBroadcasting_colwise.cpp",
    "unpacked_source/doc/examples/Tutorial_ReductionsVisitorsBroadcasting_maxnorm.cpp",
    "unpacked_source/doc/examples/Tutorial_ReductionsVisitorsBroadcasting_reductions_bool.cpp",
    "unpacked_source/doc/examples/Tutorial_ReductionsVisitorsBroadcasting_reductions_norm.cpp",
    "unpacked_source/doc/examples/Tutorial_ReductionsVisitorsBroadcasting_rowwise.cpp",
    "unpacked_source/doc/examples/Tutorial_ReductionsVisitorsBroadcasting_visitors.cpp",
    "unpacked_source/doc/examples/Tutorial_simple_example_dynamic_size.cpp",
    "unpacked_source/doc/examples/Tutorial_simple_example_fixed_size.cpp",
    "unpacked_source/doc/examples/class_Block.cpp",
    "unpacked_source/doc/examples/class_CwiseBinaryOp.cpp",
    "unpacked_source/doc/examples/class_CwiseUnaryOp.cpp",
    "unpacked_source/doc/examples/class_CwiseUnaryOp_ptrfun.cpp",
    "unpacked_source/doc/examples/class_FixedBlock.cpp",
    "unpacked_source/doc/examples/class_FixedVectorBlock.cpp",
    "unpacked_source/doc/examples/class_VectorBlock.cpp",
    "unpacked_source/doc/examples/function_taking_eigenbase.cpp",
    "unpacked_source/doc/examples/function_taking_ref.cpp",
    "unpacked_source/doc/examples/tut_arithmetic_add_sub.cpp",
    "unpacked_source/doc/examples/tut_arithmetic_dot_cross.cpp",
    "unpacked_source/doc/examples/tut_arithmetic_matrix_mul.cpp",
    "unpacked_source/doc/examples/tut_arithmetic_redux_basic.cpp",
    "unpacked_source/doc/examples/tut_arithmetic_scalar_mul_div.cpp",
    "unpacked_source/doc/examples/tut_matrix_coefficient_accessors.cpp",
    "unpacked_source/doc/examples/tut_matrix_resize.cpp",
    "unpacked_source/doc/examples/tut_matrix_resize_fixed_size.cpp",
    "unpacked_source/doc/snippets/.krazy",
    "unpacked_source/doc/snippets/AngleAxis_mimic_euler.cpp",
    "unpacked_source/doc/snippets/CMakeLists.txt",
    "unpacked_source/doc/snippets/ColPivHouseholderQR_solve.cpp",
    "unpacked_source/doc/snippets/ComplexEigenSolver_compute.cpp",
    "unpacked_source/doc/snippets/ComplexEigenSolver_eigenvalues.cpp",
    "unpacked_source/doc/snippets/ComplexEigenSolver_eigenvectors.cpp",
    "unpacked_source/doc/snippets/ComplexSchur_compute.cpp",
    "unpacked_source/doc/snippets/ComplexSchur_matrixT.cpp",
    "unpacked_source/doc/snippets/ComplexSchur_matrixU.cpp",
    "unpacked_source/doc/snippets/Cwise_abs.cpp",
    "unpacked_source/doc/snippets/Cwise_abs2.cpp",
    "unpacked_source/doc/snippets/Cwise_acos.cpp",
    "unpacked_source/doc/snippets/Cwise_asin.cpp",
    "unpacked_source/doc/snippets/Cwise_boolean_and.cpp",
    "unpacked_source/doc/snippets/Cwise_boolean_or.cpp",
    "unpacked_source/doc/snippets/Cwise_cos.cpp",
    "unpacked_source/doc/snippets/Cwise_cube.cpp",
    "unpacked_source/doc/snippets/Cwise_equal_equal.cpp",
    "unpacked_source/doc/snippets/Cwise_exp.cpp",
    "unpacked_source/doc/snippets/Cwise_greater.cpp",
    "unpacked_source/doc/snippets/Cwise_greater_equal.cpp",
    "unpacked_source/doc/snippets/Cwise_inverse.cpp",
    "unpacked_source/doc/snippets/Cwise_less.cpp",
    "unpacked_source/doc/snippets/Cwise_less_equal.cpp",
    "unpacked_source/doc/snippets/Cwise_log.cpp",
    "unpacked_source/doc/snippets/Cwise_max.cpp",
    "unpacked_source/doc/snippets/Cwise_min.cpp",
    "unpacked_source/doc/snippets/Cwise_minus.cpp",
    "unpacked_source/doc/snippets/Cwise_minus_equal.cpp",
    "unpacked_source/doc/snippets/Cwise_not_equal.cpp",
    "unpacked_source/doc/snippets/Cwise_plus.cpp",
    "unpacked_source/doc/snippets/Cwise_plus_equal.cpp",
    "unpacked_source/doc/snippets/Cwise_pow.cpp",
    "unpacked_source/doc/snippets/Cwise_product.cpp",
    "unpacked_source/doc/snippets/Cwise_quotient.cpp",
    "unpacked_source/doc/snippets/Cwise_sin.cpp",
    "unpacked_source/doc/snippets/Cwise_slash_equal.cpp",
    "unpacked_source/doc/snippets/Cwise_sqrt.cpp",
    "unpacked_source/doc/snippets/Cwise_square.cpp",
    "unpacked_source/doc/snippets/Cwise_tan.cpp",
    "unpacked_source/doc/snippets/Cwise_times_equal.cpp",
    "unpacked_source/doc/snippets/DenseBase_LinSpaced.cpp",
    "unpacked_source/doc/snippets/DenseBase_LinSpaced_seq.cpp",
    "unpacked_source/doc/snippets/DenseBase_setLinSpaced.cpp",
    "unpacked_source/doc/snippets/DirectionWise_replicate.cpp",
    "unpacked_source/doc/snippets/DirectionWise_replicate_int.cpp",
    "unpacked_source/doc/snippets/EigenSolver_EigenSolver_MatrixType.cpp",
    "unpacked_source/doc/snippets/EigenSolver_compute.cpp",
    "unpacked_source/doc/snippets/EigenSolver_eigenvalues.cpp",
    "unpacked_source/doc/snippets/EigenSolver_eigenvectors.cpp",
    "unpacked_source/doc/snippets/EigenSolver_pseudoEigenvectors.cpp",
    "unpacked_source/doc/snippets/FullPivHouseholderQR_solve.cpp",
    "unpacked_source/doc/snippets/FullPivLU_image.cpp",
    "unpacked_source/doc/snippets/FullPivLU_kernel.cpp",
    "unpacked_source/doc/snippets/FullPivLU_solve.cpp",
    "unpacked_source/doc/snippets/GeneralizedEigenSolver.cpp",
    "unpacked_source/doc/snippets/HessenbergDecomposition_compute.cpp",
    "unpacked_source/doc/snippets/HessenbergDecomposition_matrixH.cpp",
    "unpacked_source/doc/snippets/HessenbergDecomposition_packedMatrix.cpp",
    "unpacked_source/doc/snippets/HouseholderQR_householderQ.cpp",
    "unpacked_source/doc/snippets/HouseholderQR_solve.cpp",
    "unpacked_source/doc/snippets/HouseholderSequence_HouseholderSequence.cpp",
    "unpacked_source/doc/snippets/IOFormat.cpp",
    "unpacked_source/doc/snippets/JacobiSVD_basic.cpp",
    "unpacked_source/doc/snippets/Jacobi_makeGivens.cpp",
    "unpacked_source/doc/snippets/Jacobi_makeJacobi.cpp",
    "unpacked_source/doc/snippets/LLT_example.cpp",
    "unpacked_source/doc/snippets/LLT_solve.cpp",
    "unpacked_source/doc/snippets/Map_general_stride.cpp",
    "unpacked_source/doc/snippets/Map_inner_stride.cpp",
    "unpacked_source/doc/snippets/Map_outer_stride.cpp",
    "unpacked_source/doc/snippets/Map_placement_new.cpp",
    "unpacked_source/doc/snippets/Map_simple.cpp",
    "unpacked_source/doc/snippets/MatrixBase_adjoint.cpp",
    "unpacked_source/doc/snippets/MatrixBase_all.cpp",
    "unpacked_source/doc/snippets/MatrixBase_applyOnTheLeft.cpp",
    "unpacked_source/doc/snippets/MatrixBase_applyOnTheRight.cpp",
    "unpacked_source/doc/snippets/MatrixBase_array.cpp",
    "unpacked_source/doc/snippets/MatrixBase_array_const.cpp",
    "unpacked_source/doc/snippets/MatrixBase_asDiagonal.cpp",
    "unpacked_source/doc/snippets/MatrixBase_block_int_int.cpp",
    "unpacked_source/doc/snippets/MatrixBase_block_int_int_int_int.cpp",
    "unpacked_source/doc/snippets/MatrixBase_bottomLeftCorner_int_int.cpp",
    "unpacked_source/doc/snippets/MatrixBase_bottomRightCorner_int_int.cpp",
    "unpacked_source/doc/snippets/MatrixBase_bottomRows_int.cpp",
    "unpacked_source/doc/snippets/MatrixBase_cast.cpp",
    "unpacked_source/doc/snippets/MatrixBase_col.cpp",
    "unpacked_source/doc/snippets/MatrixBase_colwise.cpp",
    "unpacked_source/doc/snippets/MatrixBase_computeInverseAndDetWithCheck.cpp",
    "unpacked_source/doc/snippets/MatrixBase_computeInverseWithCheck.cpp",
    "unpacked_source/doc/snippets/MatrixBase_cwiseAbs.cpp",
    "unpacked_source/doc/snippets/MatrixBase_cwiseAbs2.cpp",
    "unpacked_source/doc/snippets/MatrixBase_cwiseEqual.cpp",
    "unpacked_source/doc/snippets/MatrixBase_cwiseInverse.cpp",
    "unpacked_source/doc/snippets/MatrixBase_cwiseMax.cpp",
    "unpacked_source/doc/snippets/MatrixBase_cwiseMin.cpp",
    "unpacked_source/doc/snippets/MatrixBase_cwiseNotEqual.cpp",
    "unpacked_source/doc/snippets/MatrixBase_cwiseProduct.cpp",
    "unpacked_source/doc/snippets/MatrixBase_cwiseQuotient.cpp",
    "unpacked_source/doc/snippets/MatrixBase_cwiseSqrt.cpp",
    "unpacked_source/doc/snippets/MatrixBase_diagonal.cpp",
    "unpacked_source/doc/snippets/MatrixBase_diagonal_int.cpp",
    "unpacked_source/doc/snippets/MatrixBase_diagonal_template_int.cpp",
    "unpacked_source/doc/snippets/MatrixBase_eigenvalues.cpp",
    "unpacked_source/doc/snippets/MatrixBase_end_int.cpp",
    "unpacked_source/doc/snippets/MatrixBase_eval.cpp",
    "unpacked_source/doc/snippets/MatrixBase_extract.cpp",
    "unpacked_source/doc/snippets/MatrixBase_fixedBlock_int_int.cpp",
    "unpacked_source/doc/snippets/MatrixBase_identity.cpp",
    "unpacked_source/doc/snippets/MatrixBase_identity_int_int.cpp",
    "unpacked_source/doc/snippets/MatrixBase_inverse.cpp",
    "unpacked_source/doc/snippets/MatrixBase_isDiagonal.cpp",
    "unpacked_source/doc/snippets/MatrixBase_isIdentity.cpp",
    "unpacked_source/doc/snippets/MatrixBase_isOnes.cpp",
    "unpacked_source/doc/snippets/MatrixBase_isOrthogonal.cpp",
    "unpacked_source/doc/snippets/MatrixBase_isUnitary.cpp",
    "unpacked_source/doc/snippets/MatrixBase_isZero.cpp",
    "unpacked_source/doc/snippets/MatrixBase_leftCols_int.cpp",
    "unpacked_source/doc/snippets/MatrixBase_marked.cpp",
    "unpacked_source/doc/snippets/MatrixBase_noalias.cpp",
    "unpacked_source/doc/snippets/MatrixBase_ones.cpp",
    "unpacked_source/doc/snippets/MatrixBase_ones_int.cpp",
    "unpacked_source/doc/snippets/MatrixBase_ones_int_int.cpp",
    "unpacked_source/doc/snippets/MatrixBase_operatorNorm.cpp",
    "unpacked_source/doc/snippets/MatrixBase_part.cpp",
    "unpacked_source/doc/snippets/MatrixBase_prod.cpp",
    "unpacked_source/doc/snippets/MatrixBase_random.cpp",
    "unpacked_source/doc/snippets/MatrixBase_random_int.cpp",
    "unpacked_source/doc/snippets/MatrixBase_random_int_int.cpp",
    "unpacked_source/doc/snippets/MatrixBase_replicate.cpp",
    "unpacked_source/doc/snippets/MatrixBase_replicate_int_int.cpp",
    "unpacked_source/doc/snippets/MatrixBase_reverse.cpp",
    "unpacked_source/doc/snippets/MatrixBase_rightCols_int.cpp",
    "unpacked_source/doc/snippets/MatrixBase_row.cpp",
    "unpacked_source/doc/snippets/MatrixBase_rowwise.cpp",
    "unpacked_source/doc/snippets/MatrixBase_segment_int_int.cpp",
    "unpacked_source/doc/snippets/MatrixBase_select.cpp",
    "unpacked_source/doc/snippets/MatrixBase_set.cpp",
    "unpacked_source/doc/snippets/MatrixBase_setIdentity.cpp",
    "unpacked_source/doc/snippets/MatrixBase_setOnes.cpp",
    "unpacked_source/doc/snippets/MatrixBase_setRandom.cpp",
    "unpacked_source/doc/snippets/MatrixBase_setZero.cpp",
    "unpacked_source/doc/snippets/MatrixBase_start_int.cpp",
    "unpacked_source/doc/snippets/MatrixBase_template_int_bottomRows.cpp",
    "unpacked_source/doc/snippets/MatrixBase_template_int_end.cpp",
    "unpacked_source/doc/snippets/MatrixBase_template_int_int_block_int_int_int_int.cpp",
    "unpacked_source/doc/snippets/MatrixBase_template_int_int_bottomLeftCorner.cpp",
    "unpacked_source/doc/snippets/MatrixBase_template_int_int_bottomLeftCorner_int_int.cpp",
    "unpacked_source/doc/snippets/MatrixBase_template_int_int_bottomRightCorner.cpp",
    "unpacked_source/doc/snippets/MatrixBase_template_int_int_bottomRightCorner_int_int.cpp",
    "unpacked_source/doc/snippets/MatrixBase_template_int_int_topLeftCorner.cpp",
    "unpacked_source/doc/snippets/MatrixBase_template_int_int_topLeftCorner_int_int.cpp",
    "unpacked_source/doc/snippets/MatrixBase_template_int_int_topRightCorner.cpp",
    "unpacked_source/doc/snippets/MatrixBase_template_int_int_topRightCorner_int_int.cpp",
    "unpacked_source/doc/snippets/MatrixBase_template_int_leftCols.cpp",
    "unpacked_source/doc/snippets/MatrixBase_template_int_rightCols.cpp",
    "unpacked_source/doc/snippets/MatrixBase_template_int_segment.cpp",
    "unpacked_source/doc/snippets/MatrixBase_template_int_start.cpp",
    "unpacked_source/doc/snippets/MatrixBase_template_int_topRows.cpp",
    "unpacked_source/doc/snippets/MatrixBase_topLeftCorner_int_int.cpp",
    "unpacked_source/doc/snippets/MatrixBase_topRightCorner_int_int.cpp",
    "unpacked_source/doc/snippets/MatrixBase_topRows_int.cpp",
    "unpacked_source/doc/snippets/MatrixBase_transpose.cpp",
    "unpacked_source/doc/snippets/MatrixBase_zero.cpp",
    "unpacked_source/doc/snippets/MatrixBase_zero_int.cpp",
    "unpacked_source/doc/snippets/MatrixBase_zero_int_int.cpp",
    "unpacked_source/doc/snippets/Matrix_resize_NoChange_int.cpp",
    "unpacked_source/doc/snippets/Matrix_resize_int.cpp",
    "unpacked_source/doc/snippets/Matrix_resize_int_NoChange.cpp",
    "unpacked_source/doc/snippets/Matrix_resize_int_int.cpp",
    "unpacked_source/doc/snippets/Matrix_setConstant_int.cpp",
    "unpacked_source/doc/snippets/Matrix_setConstant_int_int.cpp",
    "unpacked_source/doc/snippets/Matrix_setIdentity_int_int.cpp",
    "unpacked_source/doc/snippets/Matrix_setOnes_int.cpp",
    "unpacked_source/doc/snippets/Matrix_setOnes_int_int.cpp",
    "unpacked_source/doc/snippets/Matrix_setRandom_int.cpp",
    "unpacked_source/doc/snippets/Matrix_setRandom_int_int.cpp",
    "unpacked_source/doc/snippets/Matrix_setZero_int.cpp",
    "unpacked_source/doc/snippets/Matrix_setZero_int_int.cpp",
    "unpacked_source/doc/snippets/PartialPivLU_solve.cpp",
    "unpacked_source/doc/snippets/PartialRedux_count.cpp",
    "unpacked_source/doc/snippets/PartialRedux_maxCoeff.cpp",
    "unpacked_source/doc/snippets/PartialRedux_minCoeff.cpp",
    "unpacked_source/doc/snippets/PartialRedux_norm.cpp",
    "unpacked_source/doc/snippets/PartialRedux_prod.cpp",
    "unpacked_source/doc/snippets/PartialRedux_squaredNorm.cpp",
    "unpacked_source/doc/snippets/PartialRedux_sum.cpp",
    "unpacked_source/doc/snippets/RealQZ_compute.cpp",
    "unpacked_source/doc/snippets/RealSchur_RealSchur_MatrixType.cpp",
    "unpacked_source/doc/snippets/RealSchur_compute.cpp",
    "unpacked_source/doc/snippets/SelfAdjointEigenSolver_SelfAdjointEigenSolver.cpp",
    "unpacked_source/doc/snippets/SelfAdjointEigenSolver_SelfAdjointEigenSolver_MatrixType.cpp",
    "unpacked_source/doc/snippets/SelfAdjointEigenSolver_SelfAdjointEigenSolver_MatrixType2.cpp",
    "unpacked_source/doc/snippets/SelfAdjointEigenSolver_compute_MatrixType.cpp",
    "unpacked_source/doc/snippets/SelfAdjointEigenSolver_compute_MatrixType2.cpp",
    "unpacked_source/doc/snippets/SelfAdjointEigenSolver_eigenvalues.cpp",
    "unpacked_source/doc/snippets/SelfAdjointEigenSolver_eigenvectors.cpp",
    "unpacked_source/doc/snippets/SelfAdjointEigenSolver_operatorInverseSqrt.cpp",
    "unpacked_source/doc/snippets/SelfAdjointEigenSolver_operatorSqrt.cpp",
    "unpacked_source/doc/snippets/SelfAdjointView_eigenvalues.cpp",
    "unpacked_source/doc/snippets/SelfAdjointView_operatorNorm.cpp",
    "unpacked_source/doc/snippets/TopicAliasing_block.cpp",
    "unpacked_source/doc/snippets/TopicAliasing_block_correct.cpp",
    "unpacked_source/doc/snippets/TopicAliasing_cwise.cpp",
    "unpacked_source/doc/snippets/TopicAliasing_mult1.cpp",
    "unpacked_source/doc/snippets/TopicAliasing_mult2.cpp",
    "unpacked_source/doc/snippets/TopicAliasing_mult3.cpp",
    "unpacked_source/doc/snippets/TopicStorageOrders_example.cpp",
    "unpacked_source/doc/snippets/Tridiagonalization_Tridiagonalization_MatrixType.cpp",
    "unpacked_source/doc/snippets/Tridiagonalization_compute.cpp",
    "unpacked_source/doc/snippets/Tridiagonalization_decomposeInPlace.cpp",
    "unpacked_source/doc/snippets/Tridiagonalization_diagonal.cpp",
    "unpacked_source/doc/snippets/Tridiagonalization_householderCoefficients.cpp",
    "unpacked_source/doc/snippets/Tridiagonalization_packedMatrix.cpp",
    "unpacked_source/doc/snippets/Tutorial_AdvancedInitialization_Block.cpp",
    "unpacked_source/doc/snippets/Tutorial_AdvancedInitialization_CommaTemporary.cpp",
    "unpacked_source/doc/snippets/Tutorial_AdvancedInitialization_Join.cpp",
    "unpacked_source/doc/snippets/Tutorial_AdvancedInitialization_LinSpaced.cpp",
    "unpacked_source/doc/snippets/Tutorial_AdvancedInitialization_ThreeWays.cpp",
    "unpacked_source/doc/snippets/Tutorial_AdvancedInitialization_Zero.cpp",
    "unpacked_source/doc/snippets/Tutorial_Map_rowmajor.cpp",
    "unpacked_source/doc/snippets/Tutorial_Map_using.cpp",
    "unpacked_source/doc/snippets/Tutorial_commainit_01.cpp",
    "unpacked_source/doc/snippets/Tutorial_commainit_01b.cpp",
    "unpacked_source/doc/snippets/Tutorial_commainit_02.cpp",
    "unpacked_source/doc/snippets/Tutorial_solve_matrix_inverse.cpp",
    "unpacked_source/doc/snippets/Tutorial_solve_multiple_rhs.cpp",
    "unpacked_source/doc/snippets/Tutorial_solve_reuse_decomposition.cpp",
    "unpacked_source/doc/snippets/Tutorial_solve_singular.cpp",
    "unpacked_source/doc/snippets/Tutorial_solve_triangular.cpp",
    "unpacked_source/doc/snippets/Tutorial_solve_triangular_inplace.cpp",
    "unpacked_source/doc/snippets/Vectorwise_reverse.cpp",
    "unpacked_source/doc/snippets/class_FullPivLU.cpp",
    "unpacked_source/doc/snippets/compile_snippet.cpp.in",
    "unpacked_source/doc/snippets/tut_arithmetic_redux_minmax.cpp",
    "unpacked_source/doc/snippets/tut_arithmetic_transpose_aliasing.cpp",
    "unpacked_source/doc/snippets/tut_arithmetic_transpose_conjugate.cpp",
    "unpacked_source/doc/snippets/tut_arithmetic_transpose_inplace.cpp",
    "unpacked_source/doc/snippets/tut_matrix_assignment_resizing.cpp",
    "unpacked_source/doc/special_examples/CMakeLists.txt",
    "unpacked_source/doc/special_examples/Tutorial_sparse_example.cpp",
    "unpacked_source/doc/special_examples/Tutorial_sparse_example_details.cpp",
    "unpacked_source/doc/tutorial.cpp",
    "unpacked_source/eigen3.pc.in",
    "unpacked_source/failtest/CMakeLists.txt",
    "unpacked_source/failtest/block_nonconst_ctor_on_const_xpr_0.cpp",
    "unpacked_source/failtest/block_nonconst_ctor_on_const_xpr_1.cpp",
    "unpacked_source/failtest/block_nonconst_ctor_on_const_xpr_2.cpp",
    "unpacked_source/failtest/block_on_const_type_actually_const_0.cpp",
    "unpacked_source/failtest/block_on_const_type_actually_const_1.cpp",
    "unpacked_source/failtest/colpivqr_int.cpp",
    "unpacked_source/failtest/const_qualified_block_method_retval_0.cpp",
    "unpacked_source/failtest/const_qualified_block_method_retval_1.cpp",
    "unpacked_source/failtest/const_qualified_diagonal_method_retval.cpp",
    "unpacked_source/failtest/const_qualified_transpose_method_retval.cpp",
    "unpacked_source/failtest/diagonal_nonconst_ctor_on_const_xpr.cpp",
    "unpacked_source/failtest/diagonal_on_const_type_actually_const.cpp",
    "unpacked_source/failtest/eigensolver_cplx.cpp",
    "unpacked_source/failtest/eigensolver_int.cpp",
    "unpacked_source/failtest/failtest_sanity_check.cpp",
    "unpacked_source/failtest/fullpivlu_int.cpp",
    "unpacked_source/failtest/fullpivqr_int.cpp",
    "unpacked_source/failtest/jacobisvd_int.cpp",
    "unpacked_source/failtest/ldlt_int.cpp",
    "unpacked_source/failtest/llt_int.cpp",
    "unpacked_source/failtest/map_nonconst_ctor_on_const_ptr_0.cpp",
    "unpacked_source/failtest/map_nonconst_ctor_on_const_ptr_1.cpp",
    "unpacked_source/failtest/map_nonconst_ctor_on_const_ptr_2.cpp",
    "unpacked_source/failtest/map_nonconst_ctor_on_const_ptr_3.cpp",
    "unpacked_source/failtest/map_nonconst_ctor_on_const_ptr_4.cpp",
    "unpacked_source/failtest/map_on_const_type_actually_const_0.cpp",
    "unpacked_source/failtest/map_on_const_type_actually_const_1.cpp",
    "unpacked_source/failtest/partialpivlu_int.cpp",
    "unpacked_source/failtest/qr_int.cpp",
    "unpacked_source/failtest/ref_1.cpp",
    "unpacked_source/failtest/ref_2.cpp",
    "unpacked_source/failtest/ref_3.cpp",
    "unpacked_source/failtest/ref_4.cpp",
    "unpacked_source/failtest/ref_5.cpp",
    "unpacked_source/failtest/transpose_nonconst_ctor_on_const_xpr.cpp",
    "unpacked_source/failtest/transpose_on_const_type_actually_const.cpp",
    "unpacked_source/lapack/CMakeLists.txt",
    "unpacked_source/lapack/cholesky.cpp",
    "unpacked_source/lapack/clacgv.f",
    "unpacked_source/lapack/cladiv.f",
    "unpacked_source/lapack/clarf.f",
    "unpacked_source/lapack/clarfb.f",
    "unpacked_source/lapack/clarfg.f",
    "unpacked_source/lapack/clarft.f",
    "unpacked_source/lapack/complex_double.cpp",
    "unpacked_source/lapack/complex_single.cpp",
    "unpacked_source/lapack/dladiv.f",
    "unpacked_source/lapack/dlamch.f",
    "unpacked_source/lapack/dlapy2.f",
    "unpacked_source/lapack/dlapy3.f",
    "unpacked_source/lapack/dlarf.f",
    "unpacked_source/lapack/dlarfb.f",
    "unpacked_source/lapack/dlarfg.f",
    "unpacked_source/lapack/dlarft.f",
    "unpacked_source/lapack/double.cpp",
    "unpacked_source/lapack/dsecnd_NONE.f",
    "unpacked_source/lapack/eigenvalues.cpp",
    "unpacked_source/lapack/ilaclc.f",
    "unpacked_source/lapack/ilaclr.f",
    "unpacked_source/lapack/iladlc.f",
    "unpacked_source/lapack/iladlr.f",
    "unpacked_source/lapack/ilaslc.f",
    "unpacked_source/lapack/ilaslr.f",
    "unpacked_source/lapack/ilazlc.f",
    "unpacked_source/lapack/ilazlr.f",
    "unpacked_source/lapack/lapack_common.h",
    "unpacked_source/lapack/lu.cpp",
    "unpacked_source/lapack/second_NONE.f",
    "unpacked_source/lapack/single.cpp",
    "unpacked_source/lapack/sladiv.f",
    "unpacked_source/lapack/slamch.f",
    "unpacked_source/lapack/slapy2.f",
    "unpacked_source/lapack/slapy3.f",
    "unpacked_source/lapack/slarf.f",
    "unpacked_source/lapack/slarfb.f",
    "unpacked_source/lapack/slarfg.f",
    "unpacked_source/lapack/slarft.f",
    "unpacked_source/lapack/zlacgv.f",
    "unpacked_source/lapack/zladiv.f",
    "unpacked_source/lapack/zlarf.f",
    "unpacked_source/lapack/zlarfb.f",
    "unpacked_source/lapack/zlarfg.f",
    "unpacked_source/lapack/zlarft.f",
    "unpacked_source/scripts/CMakeLists.txt",
    "unpacked_source/scripts/buildtests.in",
    "unpacked_source/scripts/cdashtesting.cmake.in",
    "unpacked_source/scripts/check.in",
    "unpacked_source/scripts/debug.in",
    "unpacked_source/scripts/eigen_gen_credits.cpp",
    "unpacked_source/scripts/eigen_gen_docs",
    "unpacked_source/scripts/release.in",
    "unpacked_source/scripts/relicense.py",
    "unpacked_source/signature_of_eigen3_matrix_library",
    "unpacked_source/test/CMakeLists.txt",
    "unpacked_source/test/adjoint.cpp",
    "unpacked_source/test/array.cpp",
    "unpacked_source/test/array_for_matrix.cpp",
    "unpacked_source/test/array_replicate.cpp",
    "unpacked_source/test/array_reverse.cpp",
    "unpacked_source/test/bandmatrix.cpp",
    "unpacked_source/test/basicstuff.cpp",
    "unpacked_source/test/bicgstab.cpp",
    "unpacked_source/test/block.cpp",
    "unpacked_source/test/cholesky.cpp",
    "unpacked_source/test/cholmod_support.cpp",
    "unpacked_source/test/commainitializer.cpp",
    "unpacked_source/test/conjugate_gradient.cpp",
    "unpacked_source/test/conservative_resize.cpp",
    "unpacked_source/test/corners.cpp",
    "unpacked_source/test/cwiseop.cpp",
    "unpacked_source/test/denseLM.cpp",
    "unpacked_source/test/determinant.cpp",
    "unpacked_source/test/diagonal.cpp",
    "unpacked_source/test/diagonalmatrices.cpp",
    "unpacked_source/test/dontalign.cpp",
    "unpacked_source/test/dynalloc.cpp",
    "unpacked_source/test/eigen2/CMakeLists.txt",
    "unpacked_source/test/eigen2/eigen2_adjoint.cpp",
    "unpacked_source/test/eigen2/eigen2_alignedbox.cpp",
    "unpacked_source/test/eigen2/eigen2_array.cpp",
    "unpacked_source/test/eigen2/eigen2_basicstuff.cpp",
    "unpacked_source/test/eigen2/eigen2_bug_132.cpp",
    "unpacked_source/test/eigen2/eigen2_cholesky.cpp",
    "unpacked_source/test/eigen2/eigen2_commainitializer.cpp",
    "unpacked_source/test/eigen2/eigen2_cwiseop.cpp",
    "unpacked_source/test/eigen2/eigen2_determinant.cpp",
    "unpacked_source/test/eigen2/eigen2_dynalloc.cpp",
    "unpacked_source/test/eigen2/eigen2_eigensolver.cpp",
    "unpacked_source/test/eigen2/eigen2_first_aligned.cpp",
    "unpacked_source/test/eigen2/eigen2_geometry.cpp",
    "unpacked_source/test/eigen2/eigen2_geometry_with_eigen2_prefix.cpp",
    "unpacked_source/test/eigen2/eigen2_hyperplane.cpp",
    "unpacked_source/test/eigen2/eigen2_inverse.cpp",
    "unpacked_source/test/eigen2/eigen2_linearstructure.cpp",
    "unpacked_source/test/eigen2/eigen2_lu.cpp",
    "unpacked_source/test/eigen2/eigen2_map.cpp",
    "unpacked_source/test/eigen2/eigen2_meta.cpp",
    "unpacked_source/test/eigen2/eigen2_miscmatrices.cpp",
    "unpacked_source/test/eigen2/eigen2_mixingtypes.cpp",
    "unpacked_source/test/eigen2/eigen2_newstdvector.cpp",
    "unpacked_source/test/eigen2/eigen2_nomalloc.cpp",
    "unpacked_source/test/eigen2/eigen2_packetmath.cpp",
    "unpacked_source/test/eigen2/eigen2_parametrizedline.cpp",
    "unpacked_source/test/eigen2/eigen2_prec_inverse_4x4.cpp",
    "unpacked_source/test/eigen2/eigen2_product_large.cpp",
    "unpacked_source/test/eigen2/eigen2_product_small.cpp",
    "unpacked_source/test/eigen2/eigen2_qr.cpp",
    "unpacked_source/test/eigen2/eigen2_qtvector.cpp",
    "unpacked_source/test/eigen2/eigen2_regression.cpp",
    "unpacked_source/test/eigen2/eigen2_sizeof.cpp",
    "unpacked_source/test/eigen2/eigen2_smallvectors.cpp",
    "unpacked_source/test/eigen2/eigen2_sparse_basic.cpp",
    "unpacked_source/test/eigen2/eigen2_sparse_product.cpp",
    "unpacked_source/test/eigen2/eigen2_sparse_solvers.cpp",
    "unpacked_source/test/eigen2/eigen2_sparse_vector.cpp",
    "unpacked_source/test/eigen2/eigen2_stdvector.cpp",
    "unpacked_source/test/eigen2/eigen2_submatrices.cpp",
    "unpacked_source/test/eigen2/eigen2_sum.cpp",
    "unpacked_source/test/eigen2/eigen2_svd.cpp",
    "unpacked_source/test/eigen2/eigen2_swap.cpp",
    "unpacked_source/test/eigen2/eigen2_triangular.cpp",
    "unpacked_source/test/eigen2/eigen2_unalignedassert.cpp",
    "unpacked_source/test/eigen2/eigen2_visitor.cpp",
    "unpacked_source/test/eigen2/gsl_helper.h",
    "unpacked_source/test/eigen2/main.h",
    "unpacked_source/test/eigen2/product.h",
    "unpacked_source/test/eigen2/runtest.sh",
    "unpacked_source/test/eigen2/sparse.h",
    "unpacked_source/test/eigen2/testsuite.cmake",
    "unpacked_source/test/eigen2support.cpp",
    "unpacked_source/test/eigensolver_complex.cpp",
    "unpacked_source/test/eigensolver_generalized_real.cpp",
    "unpacked_source/test/eigensolver_generic.cpp",
    "unpacked_source/test/eigensolver_selfadjoint.cpp",
    "unpacked_source/test/exceptions.cpp",
    "unpacked_source/test/first_aligned.cpp",
    "unpacked_source/test/geo_alignedbox.cpp",
    "unpacked_source/test/geo_eulerangles.cpp",
    "unpacked_source/test/geo_homogeneous.cpp",
    "unpacked_source/test/geo_hyperplane.cpp",
    "unpacked_source/test/geo_orthomethods.cpp",
    "unpacked_source/test/geo_parametrizedline.cpp",
    "unpacked_source/test/geo_quaternion.cpp",
    "unpacked_source/test/geo_transformations.cpp",
    "unpacked_source/test/hessenberg.cpp",
    "unpacked_source/test/householder.cpp",
    "unpacked_source/test/integer_types.cpp",
    "unpacked_source/test/inverse.cpp",
    "unpacked_source/test/jacobi.cpp",
    "unpacked_source/test/jacobisvd.cpp",
    "unpacked_source/test/linearstructure.cpp",
    "unpacked_source/test/lu.cpp",
    "unpacked_source/test/main.h",
    "unpacked_source/test/mapped_matrix.cpp",
    "unpacked_source/test/mapstaticmethods.cpp",
    "unpacked_source/test/mapstride.cpp",
    "unpacked_source/test/meta.cpp",
    "unpacked_source/test/metis_support.cpp",
    "unpacked_source/test/miscmatrices.cpp",
    "unpacked_source/test/mixingtypes.cpp",
    "unpacked_source/test/nesting_ops.cpp",
    "unpacked_source/test/nomalloc.cpp",
    "unpacked_source/test/nullary.cpp",
    "unpacked_source/test/packetmath.cpp",
    "unpacked_source/test/pardiso_support.cpp",
    "unpacked_source/test/pastix_support.cpp",
    "unpacked_source/test/permutationmatrices.cpp",
    "unpacked_source/test/prec_inverse_4x4.cpp",
    "unpacked_source/test/product.h",
    "unpacked_source/test/product_extra.cpp",
    "unpacked_source/test/product_large.cpp",
    "unpacked_source/test/product_mmtr.cpp",
    "unpacked_source/test/product_notemporary.cpp",
    "unpacked_source/test/product_selfadjoint.cpp",
    "unpacked_source/test/product_small.cpp",
    "unpacked_source/test/product_symm.cpp",
    "unpacked_source/test/product_syrk.cpp",
    "unpacked_source/test/product_trmm.cpp",
    "unpacked_source/test/product_trmv.cpp",
    "unpacked_source/test/product_trsolve.cpp",
    "unpacked_source/test/qr.cpp",
    "unpacked_source/test/qr_colpivoting.cpp",
    "unpacked_source/test/qr_fullpivoting.cpp",
    "unpacked_source/test/qtvector.cpp",
    "unpacked_source/test/real_qz.cpp",
    "unpacked_source/test/redux.cpp",
    "unpacked_source/test/ref.cpp",
    "unpacked_source/test/resize.cpp",
    "unpacked_source/test/runtest.sh",
    "unpacked_source/test/schur_complex.cpp",
    "unpacked_source/test/schur_real.cpp",
    "unpacked_source/test/selfadjoint.cpp",
    "unpacked_source/test/simplicial_cholesky.cpp",
    "unpacked_source/test/sizeof.cpp",
    "unpacked_source/test/sizeoverflow.cpp",
    "unpacked_source/test/smallvectors.cpp",
    "unpacked_source/test/sparse.h",
    "unpacked_source/test/sparseLM.cpp",
    "unpacked_source/test/sparse_basic.cpp",
    "unpacked_source/test/sparse_permutations.cpp",
    "unpacked_source/test/sparse_product.cpp",
    "unpacked_source/test/sparse_solver.h",
    "unpacked_source/test/sparse_solvers.cpp",
    "unpacked_source/test/sparse_vector.cpp",
    "unpacked_source/test/sparselu.cpp",
    "unpacked_source/test/sparseqr.cpp",
    "unpacked_source/test/special_numbers.cpp",
    "unpacked_source/test/spqr_support.cpp",
    "unpacked_source/test/stable_norm.cpp",
    "unpacked_source/test/stddeque.cpp",
    "unpacked_source/test/stdlist.cpp",
    "unpacked_source/test/stdvector.cpp",
    "unpacked_source/test/stdvector_overload.cpp",
    "unpacked_source/test/superlu_support.cpp",
    "unpacked_source/test/swap.cpp",
    "unpacked_source/test/testsuite.cmake",
    "unpacked_source/test/triangular.cpp",
    "unpacked_source/test/umeyama.cpp",
    "unpacked_source/test/umfpack_support.cpp",
    "unpacked_source/test/unalignedassert.cpp",
    "unpacked_source/test/unalignedcount.cpp",
    "unpacked_source/test/upperbidiagonalization.cpp",
    "unpacked_source/test/vectorization_logic.cpp",
    "unpacked_source/test/vectorwiseop.cpp",
    "unpacked_source/test/visitor.cpp",
    "unpacked_source/test/zerosized.cpp",
    "unpacked_source/unsupported/CMakeLists.txt",
    "unpacked_source/unsupported/Eigen/AdolcForward",
    "unpacked_source/unsupported/Eigen/AlignedVector3",
    "unpacked_source/unsupported/Eigen/ArpackSupport",
    "unpacked_source/unsupported/Eigen/AutoDiff",
    "unpacked_source/unsupported/Eigen/BVH",
    "unpacked_source/unsupported/Eigen/CMakeLists.txt",
    "unpacked_source/unsupported/Eigen/FFT",
    "unpacked_source/unsupported/Eigen/IterativeSolvers",
    "unpacked_source/unsupported/Eigen/KroneckerProduct",
    "unpacked_source/unsupported/Eigen/LevenbergMarquardt",
    "unpacked_source/unsupported/Eigen/MPRealSupport",
    "unpacked_source/unsupported/Eigen/MatrixFunctions",
    "unpacked_source/unsupported/Eigen/MoreVectorization",
    "unpacked_source/unsupported/Eigen/NonLinearOptimization",
    "unpacked_source/unsupported/Eigen/NumericalDiff",
    "unpacked_source/unsupported/Eigen/OpenGLSupport",
    "unpacked_source/unsupported/Eigen/Polynomials",
    "unpacked_source/unsupported/Eigen/SVD",
    "unpacked_source/unsupported/Eigen/Skyline",
    "unpacked_source/unsupported/Eigen/SparseExtra",
    "unpacked_source/unsupported/Eigen/Splines",
    "unpacked_source/unsupported/Eigen/src/AutoDiff/AutoDiffJacobian.h",
    "unpacked_source/unsupported/Eigen/src/AutoDiff/AutoDiffScalar.h",
    "unpacked_source/unsupported/Eigen/src/AutoDiff/AutoDiffVector.h",
    "unpacked_source/unsupported/Eigen/src/AutoDiff/CMakeLists.txt",
    "unpacked_source/unsupported/Eigen/src/BVH/BVAlgorithms.h",
    "unpacked_source/unsupported/Eigen/src/BVH/CMakeLists.txt",
    "unpacked_source/unsupported/Eigen/src/BVH/KdBVH.h",
    "unpacked_source/unsupported/Eigen/src/CMakeLists.txt",
    "unpacked_source/unsupported/Eigen/src/Eigenvalues/ArpackSelfAdjointEigenSolver.h",
    "unpacked_source/unsupported/Eigen/src/FFT/CMakeLists.txt",
    "unpacked_source/unsupported/Eigen/src/FFT/ei_fftw_impl.h",
    "unpacked_source/unsupported/Eigen/src/FFT/ei_kissfft_impl.h",
    "unpacked_source/unsupported/Eigen/src/IterativeSolvers/CMakeLists.txt",
    "unpacked_source/unsupported/Eigen/src/IterativeSolvers/ConstrainedConjGrad.h",
    "unpacked_source/unsupported/Eigen/src/IterativeSolvers/DGMRES.h",
    "unpacked_source/unsupported/Eigen/src/IterativeSolvers/GMRES.h",
    "unpacked_source/unsupported/Eigen/src/IterativeSolvers/IncompleteCholesky.h",
    "unpacked_source/unsupported/Eigen/src/IterativeSolvers/IncompleteLU.h",
    "unpacked_source/unsupported/Eigen/src/IterativeSolvers/IterationController.h",
    "unpacked_source/unsupported/Eigen/src/IterativeSolvers/MINRES.h",
    "unpacked_source/unsupported/Eigen/src/IterativeSolvers/Scaling.h",
    "unpacked_source/unsupported/Eigen/src/KroneckerProduct/CMakeLists.txt",
    "unpacked_source/unsupported/Eigen/src/KroneckerProduct/KroneckerTensorProduct.h",
    "unpacked_source/unsupported/Eigen/src/LevenbergMarquardt/CMakeLists.txt",
    "unpacked_source/unsupported/Eigen/src/LevenbergMarquardt/CopyrightMINPACK.txt",
    "unpacked_source/unsupported/Eigen/src/LevenbergMarquardt/LMcovar.h",
    "unpacked_source/unsupported/Eigen/src/LevenbergMarquardt/LMonestep.h",
    "unpacked_source/unsupported/Eigen/src/LevenbergMarquardt/LMpar.h",
    "unpacked_source/unsupported/Eigen/src/LevenbergMarquardt/LMqrsolv.h",
    "unpacked_source/unsupported/Eigen/src/LevenbergMarquardt/LevenbergMarquardt.h",
    "unpacked_source/unsupported/Eigen/src/MatrixFunctions/CMakeLists.txt",
    "unpacked_source/unsupported/Eigen/src/MatrixFunctions/MatrixExponential.h",
    "unpacked_source/unsupported/Eigen/src/MatrixFunctions/MatrixFunction.h",
    "unpacked_source/unsupported/Eigen/src/MatrixFunctions/MatrixFunctionAtomic.h",
    "unpacked_source/unsupported/Eigen/src/MatrixFunctions/MatrixLogarithm.h",
    "unpacked_source/unsupported/Eigen/src/MatrixFunctions/MatrixPower.h",
    "unpacked_source/unsupported/Eigen/src/MatrixFunctions/MatrixSquareRoot.h",
    "unpacked_source/unsupported/Eigen/src/MatrixFunctions/StemFunction.h",
    "unpacked_source/unsupported/Eigen/src/MoreVectorization/CMakeLists.txt",
    "unpacked_source/unsupported/Eigen/src/MoreVectorization/MathFunctions.h",
    "unpacked_source/unsupported/Eigen/src/NonLinearOptimization/CMakeLists.txt",
    "unpacked_source/unsupported/Eigen/src/NonLinearOptimization/HybridNonLinearSolver.h",
    "unpacked_source/unsupported/Eigen/src/NonLinearOptimization/LevenbergMarquardt.h",
    "unpacked_source/unsupported/Eigen/src/NonLinearOptimization/chkder.h",
    "unpacked_source/unsupported/Eigen/src/NonLinearOptimization/covar.h",
    "unpacked_source/unsupported/Eigen/src/NonLinearOptimization/dogleg.h",
    "unpacked_source/unsupported/Eigen/src/NonLinearOptimization/fdjac1.h",
    "unpacked_source/unsupported/Eigen/src/NonLinearOptimization/lmpar.h",
    "unpacked_source/unsupported/Eigen/src/NonLinearOptimization/qrsolv.h",
    "unpacked_source/unsupported/Eigen/src/NonLinearOptimization/r1mpyq.h",
    "unpacked_source/unsupported/Eigen/src/NonLinearOptimization/r1updt.h",
    "unpacked_source/unsupported/Eigen/src/NonLinearOptimization/rwupdt.h",
    "unpacked_source/unsupported/Eigen/src/NumericalDiff/CMakeLists.txt",
    "unpacked_source/unsupported/Eigen/src/NumericalDiff/NumericalDiff.h",
    "unpacked_source/unsupported/Eigen/src/Polynomials/CMakeLists.txt",
    "unpacked_source/unsupported/Eigen/src/Polynomials/Companion.h",
    "unpacked_source/unsupported/Eigen/src/Polynomials/PolynomialSolver.h",
    "unpacked_source/unsupported/Eigen/src/Polynomials/PolynomialUtils.h",
    "unpacked_source/unsupported/Eigen/src/SVD/BDCSVD.h",
    "unpacked_source/unsupported/Eigen/src/SVD/CMakeLists.txt",
    "unpacked_source/unsupported/Eigen/src/SVD/JacobiSVD.h",
    "unpacked_source/unsupported/Eigen/src/SVD/SVDBase.h",
    "unpacked_source/unsupported/Eigen/src/SVD/TODOBdcsvd.txt",
    "unpacked_source/unsupported/Eigen/src/SVD/doneInBDCSVD.txt",
    "unpacked_source/unsupported/Eigen/src/Skyline/CMakeLists.txt",
    "unpacked_source/unsupported/Eigen/src/Skyline/SkylineInplaceLU.h",
    "unpacked_source/unsupported/Eigen/src/Skyline/SkylineMatrix.h",
    "unpacked_source/unsupported/Eigen/src/Skyline/SkylineMatrixBase.h",
    "unpacked_source/unsupported/Eigen/src/Skyline/SkylineProduct.h",
    "unpacked_source/unsupported/Eigen/src/Skyline/SkylineStorage.h",
    "unpacked_source/unsupported/Eigen/src/Skyline/SkylineUtil.h",
    "unpacked_source/unsupported/Eigen/src/SparseExtra/BlockOfDynamicSparseMatrix.h",
    "unpacked_source/unsupported/Eigen/src/SparseExtra/CMakeLists.txt",
    "unpacked_source/unsupported/Eigen/src/SparseExtra/DynamicSparseMatrix.h",
    "unpacked_source/unsupported/Eigen/src/SparseExtra/MarketIO.h",
    "unpacked_source/unsupported/Eigen/src/SparseExtra/MatrixMarketIterator.h",
    "unpacked_source/unsupported/Eigen/src/SparseExtra/RandomSetter.h",
    "unpacked_source/unsupported/Eigen/src/Splines/CMakeLists.txt",
    "unpacked_source/unsupported/Eigen/src/Splines/Spline.h",
    "unpacked_source/unsupported/Eigen/src/Splines/SplineFitting.h",
    "unpacked_source/unsupported/Eigen/src/Splines/SplineFwd.h",
    "unpacked_source/unsupported/README.txt",
    "unpacked_source/unsupported/bench/bench_svd.cpp",
    "unpacked_source/unsupported/doc/CMakeLists.txt",
    "unpacked_source/unsupported/doc/Overview.dox",
    "unpacked_source/unsupported/doc/eigendoxy_layout.xml.in",
    "unpacked_source/unsupported/doc/examples/BVH_Example.cpp",
    "unpacked_source/unsupported/doc/examples/CMakeLists.txt",
    "unpacked_source/unsupported/doc/examples/FFT.cpp",
    "unpacked_source/unsupported/doc/examples/MatrixExponential.cpp",
    "unpacked_source/unsupported/doc/examples/MatrixFunction.cpp",
    "unpacked_source/unsupported/doc/examples/MatrixLogarithm.cpp",
    "unpacked_source/unsupported/doc/examples/MatrixPower.cpp",
    "unpacked_source/unsupported/doc/examples/MatrixPower_optimal.cpp",
    "unpacked_source/unsupported/doc/examples/MatrixSine.cpp",
    "unpacked_source/unsupported/doc/examples/MatrixSinh.cpp",
    "unpacked_source/unsupported/doc/examples/MatrixSquareRoot.cpp",
    "unpacked_source/unsupported/doc/examples/PolynomialSolver1.cpp",
    "unpacked_source/unsupported/doc/examples/PolynomialUtils1.cpp",
    "unpacked_source/unsupported/doc/snippets/CMakeLists.txt",
    "unpacked_source/unsupported/test/BVH.cpp",
    "unpacked_source/unsupported/test/CMakeLists.txt",
    "unpacked_source/unsupported/test/FFT.cpp",
    "unpacked_source/unsupported/test/FFTW.cpp",
    "unpacked_source/unsupported/test/NonLinearOptimization.cpp",
    "unpacked_source/unsupported/test/NumericalDiff.cpp",
    "unpacked_source/unsupported/test/alignedvector3.cpp",
    "unpacked_source/unsupported/test/autodiff.cpp",
    "unpacked_source/unsupported/test/bdcsvd.cpp",
    "unpacked_source/unsupported/test/dgmres.cpp",
    "unpacked_source/unsupported/test/forward_adolc.cpp",
    "unpacked_source/unsupported/test/gmres.cpp",
    "unpacked_source/unsupported/test/jacobisvd.cpp",
    "unpacked_source/unsupported/test/kronecker_product.cpp",
    "unpacked_source/unsupported/test/levenberg_marquardt.cpp",
    "unpacked_source/unsupported/test/matrix_exponential.cpp",
    "unpacked_source/unsupported/test/matrix_function.cpp",
    "unpacked_source/unsupported/test/matrix_functions.h",
    "unpacked_source/unsupported/test/matrix_power.cpp",
    "unpacked_source/unsupported/test/matrix_square_root.cpp",
    "unpacked_source/unsupported/test/minres.cpp",
    "unpacked_source/unsupported/test/mpreal/mpreal.h",
    "unpacked_source/unsupported/test/mpreal_support.cpp",
    "unpacked_source/unsupported/test/openglsupport.cpp",
    "unpacked_source/unsupported/test/polynomialsolver.cpp",
    "unpacked_source/unsupported/test/polynomialutils.cpp",
    "unpacked_source/unsupported/test/sparse_extra.cpp",
    "unpacked_source/unsupported/test/splines.cpp",
    "unpacked_source/unsupported/test/svd_common.h"
  ],
  "fn": "eigen-3.2-3.tar.bz2",
  "license": "MPL2",
  "link": {
    "source": "/home/simone/miniconda3/pkgs/eigen-3.2-3",
    "type": 1
  },
  "md5": "2759a33011cf05ed88202133d53b93d7",
  "name": "eigen",
  "package_tarball_full_path": "/home/simone/miniconda3/pkgs/eigen-3.2-3.tar.bz2",
  "paths_data": {
    "paths": [
      {
        "_path": "include/eigen3/Eigen/Array",
        "path_type": "hardlink"
      },
      {
        "_path": "include/eigen3/Eigen/Cholesky",
        "path_type": "hardlink"
      },
      {
        "_path": "include/eigen3/Eigen/CholmodSupport",
        "path_type": "hardlink"
      },
      {
        "_path": "include/eigen3/Eigen/Core",
        "path_type": "hardlink"
      },
      {
        "_path": "include/eigen3/Eigen/Dense",
        "path_type": "hardlink"
      },
      {
        "_path": "include/eigen3/Eigen/Eigen",
        "path_type": "hardlink"
      },
      {
        "_path": "include/eigen3/Eigen/Eigen2Support",
        "path_type": "hardlink"
      },
      {
        "_path": "include/eigen3/Eigen/Eigenvalues",
        "path_type": "hardlink"
      },
      {
        "_path": "include/eigen3/Eigen/Geometry",
        "path_type": "hardlink"
      },
      {
        "_path": "include/eigen3/Eigen/Householder",
        "path_type": "hardlink"
      },
      {
        "_path": "include/eigen3/Eigen/IterativeLinearSolvers",
        "path_type": "hardlink"
      },
      {
        "_path": "include/eigen3/Eigen/Jacobi",
        "path_type": "hardlink"
      },
      {
        "_path": "include/eigen3/Eigen/LU",
        "path_type": "hardlink"
      },
      {
        "_path": "include/eigen3/Eigen/LeastSquares",
        "path_type": "hardlink"
      },
      {
        "_path": "include/eigen3/Eigen/MetisSupport",
        "path_type": "hardlink"
      },
      {
        "_path": "include/eigen3/Eigen/OrderingMethods",
        "path_type": "hardlink"
      },
      {
        "_path": "include/eigen3/Eigen/PaStiXSupport",
        "path_type": "hardlink"
      },
      {
        "_path": "include/eigen3/Eigen/PardisoSupport",
        "path_type": "hardlink"
      },
      {
        "_path": "include/eigen3/Eigen/QR",
        "path_type": "hardlink"
      },
      {
        "_path": "include/eigen3/Eigen/QtAlignedMalloc",
        "path_type": "hardlink"
      },
      {
        "_path": "include/eigen3/Eigen/SPQRSupport",
        "path_type": "hardlink"
      },
      {
        "_path": "include/eigen3/Eigen/SVD",
        "path_type": "hardlink"
      },
      {
        "_path": "include/eigen3/Eigen/Sparse",
        "path_type": "hardlink"
      },
      {
        "_path": "include/eigen3/Eigen/SparseCholesky",
        "path_type": "hardlink"
      },
      {
        "_path": "include/eigen3/Eigen/SparseCore",
        "path_type": "hardlink"
      },
      {
        "_path": "include/eigen3/Eigen/SparseLU",
        "path_type": "hardlink"
      },
      {
        "_path": "include/eigen3/Eigen/SparseQR",
        "path_type": "hardlink"
      },
      {
        "_path": "include/eigen3/Eigen/StdDeque",
        "path_type": "hardlink"
      },
      {
        "_path": "include/eigen3/Eigen/StdList",
        "path_type": "hardlink"
      },
      {
        "_path": "include/eigen3/Eigen/StdVector",
        "path_type": "hardlink"
      },
      {
        "_path": "include/eigen3/Eigen/SuperLUSupport",
        "path_type": "hardlink"
      },
      {
        "_path": "include/eigen3/Eigen/UmfPackSupport",
        "path_type": "hardlink"
      },
      {
        "_path": "include/eigen3/Eigen/src/Cholesky/LDLT.h",
        "path_type": "hardlink"
      },
      {
        "_path": "include/eigen3/Eigen/src/Cholesky/LLT.h",
        "path_type": "hardlink"
      },
      {
        "_path": "include/eigen3/Eigen/src/Cholesky/LLT_MKL.h",
        "path_type": "hardlink"
      },
      {
        "_path": "include/eigen3/Eigen/src/CholmodSupport/CholmodSupport.h",
        "path_type": "hardlink"
      },
      {
        "_path": "include/eigen3/Eigen/src/Core/Array.h",
        "path_type": "hardlink"
      },
      {
        "_path": "include/eigen3/Eigen/src/Core/ArrayBase.h",
        "path_type": "hardlink"
      },
      {
        "_path": "include/eigen3/Eigen/src/Core/ArrayWrapper.h",
        "path_type": "hardlink"
      },
      {
        "_path": "include/eigen3/Eigen/src/Core/Assign.h",
        "path_type": "hardlink"
      },
      {
        "_path": "include/eigen3/Eigen/src/Core/Assign_MKL.h",
        "path_type": "hardlink"
      },
      {
        "_path": "include/eigen3/Eigen/src/Core/BandMatrix.h",
        "path_type": "hardlink"
      },
      {
        "_path": "include/eigen3/Eigen/src/Core/Block.h",
        "path_type": "hardlink"
      },
      {
        "_path": "include/eigen3/Eigen/src/Core/BooleanRedux.h",
        "path_type": "hardlink"
      },
      {
        "_path": "include/eigen3/Eigen/src/Core/CommaInitializer.h",
        "path_type": "hardlink"
      },
      {
        "_path": "include/eigen3/Eigen/src/Core/CoreIterators.h",
        "path_type": "hardlink"
      },
      {
        "_path": "include/eigen3/Eigen/src/Core/CwiseBinaryOp.h",
        "path_type": "hardlink"
      },
      {
        "_path": "include/eigen3/Eigen/src/Core/CwiseNullaryOp.h",
        "path_type": "hardlink"
      },
      {
        "_path": "include/eigen3/Eigen/src/Core/CwiseUnaryOp.h",
        "path_type": "hardlink"
      },
      {
        "_path": "include/eigen3/Eigen/src/Core/CwiseUnaryView.h",
        "path_type": "hardlink"
      },
      {
        "_path": "include/eigen3/Eigen/src/Core/DenseBase.h",
        "path_type": "hardlink"
      },
      {
        "_path": "include/eigen3/Eigen/src/Core/DenseCoeffsBase.h",
        "path_type": "hardlink"
      },
      {
        "_path": "include/eigen3/Eigen/src/Core/DenseStorage.h",
        "path_type": "hardlink"
      },
      {
        "_path": "include/eigen3/Eigen/src/Core/Diagonal.h",
        "path_type": "hardlink"
      },
      {
        "_path": "include/eigen3/Eigen/src/Core/DiagonalMatrix.h",
        "path_type": "hardlink"
      },
      {
        "_path": "include/eigen3/Eigen/src/Core/DiagonalProduct.h",
        "path_type": "hardlink"
      },
      {
        "_path": "include/eigen3/Eigen/src/Core/Dot.h",
        "path_type": "hardlink"
      },
      {
        "_path": "include/eigen3/Eigen/src/Core/EigenBase.h",
        "path_type": "hardlink"
      },
      {
        "_path": "include/eigen3/Eigen/src/Core/Flagged.h",
        "path_type": "hardlink"
      },
      {
        "_path": "include/eigen3/Eigen/src/Core/ForceAlignedAccess.h",
        "path_type": "hardlink"
      },
      {
        "_path": "include/eigen3/Eigen/src/Core/Functors.h",
        "path_type": "hardlink"
      },
      {
        "_path": "include/eigen3/Eigen/src/Core/Fuzzy.h",
        "path_type": "hardlink"
      },
      {
        "_path": "include/eigen3/Eigen/src/Core/GeneralProduct.h",
        "path_type": "hardlink"
      },
      {
        "_path": "include/eigen3/Eigen/src/Core/GenericPacketMath.h",
        "path_type": "hardlink"
      },
      {
        "_path": "include/eigen3/Eigen/src/Core/GlobalFunctions.h",
        "path_type": "hardlink"
      },
      {
        "_path": "include/eigen3/Eigen/src/Core/IO.h",
        "path_type": "hardlink"
      },
      {
        "_path": "include/eigen3/Eigen/src/Core/Map.h",
        "path_type": "hardlink"
      },
      {
        "_path": "include/eigen3/Eigen/src/Core/MapBase.h",
        "path_type": "hardlink"
      },
      {
        "_path": "include/eigen3/Eigen/src/Core/MathFunctions.h",
        "path_type": "hardlink"
      },
      {
        "_path": "include/eigen3/Eigen/src/Core/Matrix.h",
        "path_type": "hardlink"
      },
      {
        "_path": "include/eigen3/Eigen/src/Core/MatrixBase.h",
        "path_type": "hardlink"
      },
      {
        "_path": "include/eigen3/Eigen/src/Core/NestByValue.h",
        "path_type": "hardlink"
      },
      {
        "_path": "include/eigen3/Eigen/src/Core/NoAlias.h",
        "path_type": "hardlink"
      },
      {
        "_path": "include/eigen3/Eigen/src/Core/NumTraits.h",
        "path_type": "hardlink"
      },
      {
        "_path": "include/eigen3/Eigen/src/Core/PermutationMatrix.h",
        "path_type": "hardlink"
      },
      {
        "_path": "include/eigen3/Eigen/src/Core/PlainObjectBase.h",
        "path_type": "hardlink"
      },
      {
        "_path": "include/eigen3/Eigen/src/Core/ProductBase.h",
        "path_type": "hardlink"
      },
      {
        "_path": "include/eigen3/Eigen/src/Core/Random.h",
        "path_type": "hardlink"
      },
      {
        "_path": "include/eigen3/Eigen/src/Core/Redux.h",
        "path_type": "hardlink"
      },
      {
        "_path": "include/eigen3/Eigen/src/Core/Ref.h",
        "path_type": "hardlink"
      },
      {
        "_path": "include/eigen3/Eigen/src/Core/Replicate.h",
        "path_type": "hardlink"
      },
      {
        "_path": "include/eigen3/Eigen/src/Core/ReturnByValue.h",
        "path_type": "hardlink"
      },
      {
        "_path": "include/eigen3/Eigen/src/Core/Reverse.h",
        "path_type": "hardlink"
      },
      {
        "_path": "include/eigen3/Eigen/src/Core/Select.h",
        "path_type": "hardlink"
      },
      {
        "_path": "include/eigen3/Eigen/src/Core/SelfAdjointView.h",
        "path_type": "hardlink"
      },
      {
        "_path": "include/eigen3/Eigen/src/Core/SelfCwiseBinaryOp.h",
        "path_type": "hardlink"
      },
      {
        "_path": "include/eigen3/Eigen/src/Core/SolveTriangular.h",
        "path_type": "hardlink"
      },
      {
        "_path": "include/eigen3/Eigen/src/Core/StableNorm.h",
        "path_type": "hardlink"
      },
      {
        "_path": "include/eigen3/Eigen/src/Core/Stride.h",
        "path_type": "hardlink"
      },
      {
        "_path": "include/eigen3/Eigen/src/Core/Swap.h",
        "path_type": "hardlink"
      },
      {
        "_path": "include/eigen3/Eigen/src/Core/Transpose.h",
        "path_type": "hardlink"
      },
      {
        "_path": "include/eigen3/Eigen/src/Core/Transpositions.h",
        "path_type": "hardlink"
      },
      {
        "_path": "include/eigen3/Eigen/src/Core/TriangularMatrix.h",
        "path_type": "hardlink"
      },
      {
        "_path": "include/eigen3/Eigen/src/Core/VectorBlock.h",
        "path_type": "hardlink"
      },
      {
        "_path": "include/eigen3/Eigen/src/Core/VectorwiseOp.h",
        "path_type": "hardlink"
      },
      {
        "_path": "include/eigen3/Eigen/src/Core/Visitor.h",
        "path_type": "hardlink"
      },
      {
        "_path": "include/eigen3/Eigen/src/Core/arch/AltiVec/Complex.h",
        "path_type": "hardlink"
      },
      {
        "_path": "include/eigen3/Eigen/src/Core/arch/AltiVec/PacketMath.h",
        "path_type": "hardlink"
      },
      {
        "_path": "include/eigen3/Eigen/src/Core/arch/Default/Settings.h",
        "path_type": "hardlink"
      },
      {
        "_path": "include/eigen3/Eigen/src/Core/arch/NEON/Complex.h",
        "path_type": "hardlink"
      },
      {
        "_path": "include/eigen3/Eigen/src/Core/arch/NEON/PacketMath.h",
        "path_type": "hardlink"
      },
      {
        "_path": "include/eigen3/Eigen/src/Core/arch/SSE/Complex.h",
        "path_type": "hardlink"
      },
      {
        "_path": "include/eigen3/Eigen/src/Core/arch/SSE/MathFunctions.h",
        "path_type": "hardlink"
      },
      {
        "_path": "include/eigen3/Eigen/src/Core/arch/SSE/PacketMath.h",
        "path_type": "hardlink"
      },
      {
        "_path": "include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h",
        "path_type": "hardlink"
      },
      {
        "_path": "include/eigen3/Eigen/src/Core/products/GeneralBlockPanelKernel.h",
        "path_type": "hardlink"
      },
      {
        "_path": "include/eigen3/Eigen/src/Core/products/GeneralMatrixMatrix.h",
        "path_type": "hardlink"
      },
      {
        "_path": "include/eigen3/Eigen/src/Core/products/GeneralMatrixMatrixTriangular.h",
        "path_type": "hardlink"
      },
      {
        "_path": "include/eigen3/Eigen/src/Core/products/GeneralMatrixMatrixTriangular_MKL.h",
        "path_type": "hardlink"
      },
      {
        "_path": "include/eigen3/Eigen/src/Core/products/GeneralMatrixMatrix_MKL.h",
        "path_type": "hardlink"
      },
      {
        "_path": "include/eigen3/Eigen/src/Core/products/GeneralMatrixVector.h",
        "path_type": "hardlink"
      },
      {
        "_path": "include/eigen3/Eigen/src/Core/products/GeneralMatrixVector_MKL.h",
        "path_type": "hardlink"
      },
      {
        "_path": "include/eigen3/Eigen/src/Core/products/Parallelizer.h",
        "path_type": "hardlink"
      },
      {
        "_path": "include/eigen3/Eigen/src/Core/products/SelfadjointMatrixMatrix.h",
        "path_type": "hardlink"
      },
      {
        "_path": "include/eigen3/Eigen/src/Core/products/SelfadjointMatrixMatrix_MKL.h",
        "path_type": "hardlink"
      },
      {
        "_path": "include/eigen3/Eigen/src/Core/products/SelfadjointMatrixVector.h",
        "path_type": "hardlink"
      },
      {
        "_path": "include/eigen3/Eigen/src/Core/products/SelfadjointMatrixVector_MKL.h",
        "path_type": "hardlink"
      },
      {
        "_path": "include/eigen3/Eigen/src/Core/products/SelfadjointProduct.h",
        "path_type": "hardlink"
      },
      {
        "_path": "include/eigen3/Eigen/src/Core/products/SelfadjointRank2Update.h",
        "path_type": "hardlink"
      },
      {
        "_path": "include/eigen3/Eigen/src/Core/products/TriangularMatrixMatrix.h",
        "path_type": "hardlink"
      },
      {
        "_path": "include/eigen3/Eigen/src/Core/products/TriangularMatrixMatrix_MKL.h",
        "path_type": "hardlink"
      },
      {
        "_path": "include/eigen3/Eigen/src/Core/products/TriangularMatrixVector.h",
        "path_type": "hardlink"
      },
      {
        "_path": "include/eigen3/Eigen/src/Core/products/TriangularMatrixVector_MKL.h",
        "path_type": "hardlink"
      },
      {
        "_path": "include/eigen3/Eigen/src/Core/products/TriangularSolverMatrix.h",
        "path_type": "hardlink"
      },
      {
        "_path": "include/eigen3/Eigen/src/Core/products/TriangularSolverMatrix_MKL.h",
        "path_type": "hardlink"
      },
      {
        "_path": "include/eigen3/Eigen/src/Core/products/TriangularSolverVector.h",
        "path_type": "hardlink"
      },
      {
        "_path": "include/eigen3/Eigen/src/Core/util/BlasUtil.h",
        "path_type": "hardlink"
      },
      {
        "_path": "include/eigen3/Eigen/src/Core/util/Constants.h",
        "path_type": "hardlink"
      },
      {
        "_path": "include/eigen3/Eigen/src/Core/util/DisableStupidWarnings.h",
        "path_type": "hardlink"
      },
      {
        "_path": "include/eigen3/Eigen/src/Core/util/ForwardDeclarations.h",
        "path_type": "hardlink"
      },
      {
        "_path": "include/eigen3/Eigen/src/Core/util/MKL_support.h",
        "path_type": "hardlink"
      },
      {
        "_path": "include/eigen3/Eigen/src/Core/util/Macros.h",
        "path_type": "hardlink"
      },
      {
        "_path": "include/eigen3/Eigen/src/Core/util/Memory.h",
        "path_type": "hardlink"
      },
      {
        "_path": "include/eigen3/Eigen/src/Core/util/Meta.h",
        "path_type": "hardlink"
      },
      {
        "_path": "include/eigen3/Eigen/src/Core/util/NonMPL2.h",
        "path_type": "hardlink"
      },
      {
        "_path": "include/eigen3/Eigen/src/Core/util/ReenableStupidWarnings.h",
        "path_type": "hardlink"
      },
      {
        "_path": "include/eigen3/Eigen/src/Core/util/StaticAssert.h",
        "path_type": "hardlink"
      },
      {
        "_path": "include/eigen3/Eigen/src/Core/util/XprHelper.h",
        "path_type": "hardlink"
      },
      {
        "_path": "include/eigen3/Eigen/src/Eigen2Support/Block.h",
        "path_type": "hardlink"
      },
      {
        "_path": "include/eigen3/Eigen/src/Eigen2Support/Cwise.h",
        "path_type": "hardlink"
      },
      {
        "_path": "include/eigen3/Eigen/src/Eigen2Support/CwiseOperators.h",
        "path_type": "hardlink"
      },
      {
        "_path": "include/eigen3/Eigen/src/Eigen2Support/Geometry/AlignedBox.h",
        "path_type": "hardlink"
      },
      {
        "_path": "include/eigen3/Eigen/src/Eigen2Support/Geometry/All.h",
        "path_type": "hardlink"
      },
      {
        "_path": "include/eigen3/Eigen/src/Eigen2Support/Geometry/AngleAxis.h",
        "path_type": "hardlink"
      },
      {
        "_path": "include/eigen3/Eigen/src/Eigen2Support/Geometry/Hyperplane.h",
        "path_type": "hardlink"
      },
      {
        "_path": "include/eigen3/Eigen/src/Eigen2Support/Geometry/ParametrizedLine.h",
        "path_type": "hardlink"
      },
      {
        "_path": "include/eigen3/Eigen/src/Eigen2Support/Geometry/Quaternion.h",
        "path_type": "hardlink"
      },
      {
        "_path": "include/eigen3/Eigen/src/Eigen2Support/Geometry/Rotation2D.h",
        "path_type": "hardlink"
      },
      {
        "_path": "include/eigen3/Eigen/src/Eigen2Support/Geometry/RotationBase.h",
        "path_type": "hardlink"
      },
      {
        "_path": "include/eigen3/Eigen/src/Eigen2Support/Geometry/Scaling.h",
        "path_type": "hardlink"
      },
      {
        "_path": "include/eigen3/Eigen/src/Eigen2Support/Geometry/Transform.h",
        "path_type": "hardlink"
      },
      {
        "_path": "include/eigen3/Eigen/src/Eigen2Support/Geometry/Translation.h",
        "path_type": "hardlink"
      },
      {
        "_path": "include/eigen3/Eigen/src/Eigen2Support/LU.h",
        "path_type": "hardlink"
      },
      {
        "_path": "include/eigen3/Eigen/src/Eigen2Support/Lazy.h",
        "path_type": "hardlink"
      },
      {
        "_path": "include/eigen3/Eigen/src/Eigen2Support/LeastSquares.h",
        "path_type": "hardlink"
      },
      {
        "_path": "include/eigen3/Eigen/src/Eigen2Support/Macros.h",
        "path_type": "hardlink"
      },
      {
        "_path": "include/eigen3/Eigen/src/Eigen2Support/MathFunctions.h",
        "path_type": "hardlink"
      },
      {
        "_path": "include/eigen3/Eigen/src/Eigen2Support/Memory.h",
        "path_type": "hardlink"
      },
      {
        "_path": "include/eigen3/Eigen/src/Eigen2Support/Meta.h",
        "path_type": "hardlink"
      },
      {
        "_path": "include/eigen3/Eigen/src/Eigen2Support/Minor.h",
        "path_type": "hardlink"
      },
      {
        "_path": "include/eigen3/Eigen/src/Eigen2Support/QR.h",
        "path_type": "hardlink"
      },
      {
        "_path": "include/eigen3/Eigen/src/Eigen2Support/SVD.h",
        "path_type": "hardlink"
      },
      {
        "_path": "include/eigen3/Eigen/src/Eigen2Support/TriangularSolver.h",
        "path_type": "hardlink"
      },
      {
        "_path": "include/eigen3/Eigen/src/Eigen2Support/VectorBlock.h",
        "path_type": "hardlink"
      },
      {
        "_path": "include/eigen3/Eigen/src/Eigenvalues/ComplexEigenSolver.h",
        "path_type": "hardlink"
      },
      {
        "_path": "include/eigen3/Eigen/src/Eigenvalues/ComplexSchur.h",
        "path_type": "hardlink"
      },
      {
        "_path": "include/eigen3/Eigen/src/Eigenvalues/ComplexSchur_MKL.h",
        "path_type": "hardlink"
      },
      {
        "_path": "include/eigen3/Eigen/src/Eigenvalues/EigenSolver.h",
        "path_type": "hardlink"
      },
      {
        "_path": "include/eigen3/Eigen/src/Eigenvalues/GeneralizedEigenSolver.h",
        "path_type": "hardlink"
      },
      {
        "_path": "include/eigen3/Eigen/src/Eigenvalues/GeneralizedSelfAdjointEigenSolver.h",
        "path_type": "hardlink"
      },
      {
        "_path": "include/eigen3/Eigen/src/Eigenvalues/HessenbergDecomposition.h",
        "path_type": "hardlink"
      },
      {
        "_path": "include/eigen3/Eigen/src/Eigenvalues/MatrixBaseEigenvalues.h",
        "path_type": "hardlink"
      },
      {
        "_path": "include/eigen3/Eigen/src/Eigenvalues/RealQZ.h",
        "path_type": "hardlink"
      },
      {
        "_path": "include/eigen3/Eigen/src/Eigenvalues/RealSchur.h",
        "path_type": "hardlink"
      },
      {
        "_path": "include/eigen3/Eigen/src/Eigenvalues/RealSchur_MKL.h",
        "path_type": "hardlink"
      },
      {
        "_path": "include/eigen3/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h",
        "path_type": "hardlink"
      },
      {
        "_path": "include/eigen3/Eigen/src/Eigenvalues/SelfAdjointEigenSolver_MKL.h",
        "path_type": "hardlink"
      },
      {
        "_path": "include/eigen3/Eigen/src/Eigenvalues/Tridiagonalization.h",
        "path_type": "hardlink"
      },
      {
        "_path": "include/eigen3/Eigen/src/Geometry/AlignedBox.h",
        "path_type": "hardlink"
      },
      {
        "_path": "include/eigen3/Eigen/src/Geometry/AngleAxis.h",
        "path_type": "hardlink"
      },
      {
        "_path": "include/eigen3/Eigen/src/Geometry/EulerAngles.h",
        "path_type": "hardlink"
      },
      {
        "_path": "include/eigen3/Eigen/src/Geometry/Homogeneous.h",
        "path_type": "hardlink"
      },
      {
        "_path": "include/eigen3/Eigen/src/Geometry/Hyperplane.h",
        "path_type": "hardlink"
      },
      {
        "_path": "include/eigen3/Eigen/src/Geometry/OrthoMethods.h",
        "path_type": "hardlink"
      },
      {
        "_path": "include/eigen3/Eigen/src/Geometry/ParametrizedLine.h",
        "path_type": "hardlink"
      },
      {
        "_path": "include/eigen3/Eigen/src/Geometry/Quaternion.h",
        "path_type": "hardlink"
      },
      {
        "_path": "include/eigen3/Eigen/src/Geometry/Rotation2D.h",
        "path_type": "hardlink"
      },
      {
        "_path": "include/eigen3/Eigen/src/Geometry/RotationBase.h",
        "path_type": "hardlink"
      },
      {
        "_path": "include/eigen3/Eigen/src/Geometry/Scaling.h",
        "path_type": "hardlink"
      },
      {
        "_path": "include/eigen3/Eigen/src/Geometry/Transform.h",
        "path_type": "hardlink"
      },
      {
        "_path": "include/eigen3/Eigen/src/Geometry/Translation.h",
        "path_type": "hardlink"
      },
      {
        "_path": "include/eigen3/Eigen/src/Geometry/Umeyama.h",
        "path_type": "hardlink"
      },
      {
        "_path": "include/eigen3/Eigen/src/Geometry/arch/Geometry_SSE.h",
        "path_type": "hardlink"
      },
      {
        "_path": "include/eigen3/Eigen/src/Householder/BlockHouseholder.h",
        "path_type": "hardlink"
      },
      {
        "_path": "include/eigen3/Eigen/src/Householder/Householder.h",
        "path_type": "hardlink"
      },
      {
        "_path": "include/eigen3/Eigen/src/Householder/HouseholderSequence.h",
        "path_type": "hardlink"
      },
      {
        "_path": "include/eigen3/Eigen/src/IterativeLinearSolvers/BasicPreconditioners.h",
        "path_type": "hardlink"
      },
      {
        "_path": "include/eigen3/Eigen/src/IterativeLinearSolvers/BiCGSTAB.h",
        "path_type": "hardlink"
      },
      {
        "_path": "include/eigen3/Eigen/src/IterativeLinearSolvers/ConjugateGradient.h",
        "path_type": "hardlink"
      },
      {
        "_path": "include/eigen3/Eigen/src/IterativeLinearSolvers/IncompleteLUT.h",
        "path_type": "hardlink"
      },
      {
        "_path": "include/eigen3/Eigen/src/IterativeLinearSolvers/IterativeSolverBase.h",
        "path_type": "hardlink"
      },
      {
        "_path": "include/eigen3/Eigen/src/Jacobi/Jacobi.h",
        "path_type": "hardlink"
      },
      {
        "_path": "include/eigen3/Eigen/src/LU/Determinant.h",
        "path_type": "hardlink"
      },
      {
        "_path": "include/eigen3/Eigen/src/LU/FullPivLU.h",
        "path_type": "hardlink"
      },
      {
        "_path": "include/eigen3/Eigen/src/LU/Inverse.h",
        "path_type": "hardlink"
      },
      {
        "_path": "include/eigen3/Eigen/src/LU/PartialPivLU.h",
        "path_type": "hardlink"
      },
      {
        "_path": "include/eigen3/Eigen/src/LU/PartialPivLU_MKL.h",
        "path_type": "hardlink"
      },
      {
        "_path": "include/eigen3/Eigen/src/LU/arch/Inverse_SSE.h",
        "path_type": "hardlink"
      },
      {
        "_path": "include/eigen3/Eigen/src/MetisSupport/MetisSupport.h",
        "path_type": "hardlink"
      },
      {
        "_path": "include/eigen3/Eigen/src/OrderingMethods/Amd.h",
        "path_type": "hardlink"
      },
      {
        "_path": "include/eigen3/Eigen/src/OrderingMethods/Eigen_Colamd.h",
        "path_type": "hardlink"
      },
      {
        "_path": "include/eigen3/Eigen/src/OrderingMethods/Ordering.h",
        "path_type": "hardlink"
      },
      {
        "_path": "include/eigen3/Eigen/src/PaStiXSupport/PaStiXSupport.h",
        "path_type": "hardlink"
      },
      {
        "_path": "include/eigen3/Eigen/src/PardisoSupport/PardisoSupport.h",
        "path_type": "hardlink"
      },
      {
        "_path": "include/eigen3/Eigen/src/QR/ColPivHouseholderQR.h",
        "path_type": "hardlink"
      },
      {
        "_path": "include/eigen3/Eigen/src/QR/ColPivHouseholderQR_MKL.h",
        "path_type": "hardlink"
      },
      {
        "_path": "include/eigen3/Eigen/src/QR/FullPivHouseholderQR.h",
        "path_type": "hardlink"
      },
      {
        "_path": "include/eigen3/Eigen/src/QR/HouseholderQR.h",
        "path_type": "hardlink"
      },
      {
        "_path": "include/eigen3/Eigen/src/QR/HouseholderQR_MKL.h",
        "path_type": "hardlink"
      },
      {
        "_path": "include/eigen3/Eigen/src/SPQRSupport/SuiteSparseQRSupport.h",
        "path_type": "hardlink"
      },
      {
        "_path": "include/eigen3/Eigen/src/SVD/JacobiSVD.h",
        "path_type": "hardlink"
      },
      {
        "_path": "include/eigen3/Eigen/src/SVD/JacobiSVD_MKL.h",
        "path_type": "hardlink"
      },
      {
        "_path": "include/eigen3/Eigen/src/SVD/UpperBidiagonalization.h",
        "path_type": "hardlink"
      },
      {
        "_path": "include/eigen3/Eigen/src/SparseCholesky/SimplicialCholesky.h",
        "path_type": "hardlink"
      },
      {
        "_path": "include/eigen3/Eigen/src/SparseCholesky/SimplicialCholesky_impl.h",
        "path_type": "hardlink"
      },
      {
        "_path": "include/eigen3/Eigen/src/SparseCore/AmbiVector.h",
        "path_type": "hardlink"
      },
      {
        "_path": "include/eigen3/Eigen/src/SparseCore/CompressedStorage.h",
        "path_type": "hardlink"
      },
      {
        "_path": "include/eigen3/Eigen/src/SparseCore/ConservativeSparseSparseProduct.h",
        "path_type": "hardlink"
      },
      {
        "_path": "include/eigen3/Eigen/src/SparseCore/MappedSparseMatrix.h",
        "path_type": "hardlink"
      },
      {
        "_path": "include/eigen3/Eigen/src/SparseCore/SparseBlock.h",
        "path_type": "hardlink"
      },
      {
        "_path": "include/eigen3/Eigen/src/SparseCore/SparseColEtree.h",
        "path_type": "hardlink"
      },
      {
        "_path": "include/eigen3/Eigen/src/SparseCore/SparseCwiseBinaryOp.h",
        "path_type": "hardlink"
      },
      {
        "_path": "include/eigen3/Eigen/src/SparseCore/SparseCwiseUnaryOp.h",
        "path_type": "hardlink"
      },
      {
        "_path": "include/eigen3/Eigen/src/SparseCore/SparseDenseProduct.h",
        "path_type": "hardlink"
      },
      {
        "_path": "include/eigen3/Eigen/src/SparseCore/SparseDiagonalProduct.h",
        "path_type": "hardlink"
      },
      {
        "_path": "include/eigen3/Eigen/src/SparseCore/SparseDot.h",
        "path_type": "hardlink"
      },
      {
        "_path": "include/eigen3/Eigen/src/SparseCore/SparseFuzzy.h",
        "path_type": "hardlink"
      },
      {
        "_path": "include/eigen3/Eigen/src/SparseCore/SparseMatrix.h",
        "path_type": "hardlink"
      },
      {
        "_path": "include/eigen3/Eigen/src/SparseCore/SparseMatrixBase.h",
        "path_type": "hardlink"
      },
      {
        "_path": "include/eigen3/Eigen/src/SparseCore/SparsePermutation.h",
        "path_type": "hardlink"
      },
      {
        "_path": "include/eigen3/Eigen/src/SparseCore/SparseProduct.h",
        "path_type": "hardlink"
      },
      {
        "_path": "include/eigen3/Eigen/src/SparseCore/SparseRedux.h",
        "path_type": "hardlink"
      },
      {
        "_path": "include/eigen3/Eigen/src/SparseCore/SparseSelfAdjointView.h",
        "path_type": "hardlink"
      },
      {
        "_path": "include/eigen3/Eigen/src/SparseCore/SparseSparseProductWithPruning.h",
        "path_type": "hardlink"
      },
      {
        "_path": "include/eigen3/Eigen/src/SparseCore/SparseTranspose.h",
        "path_type": "hardlink"
      },
      {
        "_path": "include/eigen3/Eigen/src/SparseCore/SparseTriangularView.h",
        "path_type": "hardlink"
      },
      {
        "_path": "include/eigen3/Eigen/src/SparseCore/SparseUtil.h",
        "path_type": "hardlink"
      },
      {
        "_path": "include/eigen3/Eigen/src/SparseCore/SparseVector.h",
        "path_type": "hardlink"
      },
      {
        "_path": "include/eigen3/Eigen/src/SparseCore/SparseView.h",
        "path_type": "hardlink"
      },
      {
        "_path": "include/eigen3/Eigen/src/SparseCore/TriangularSolver.h",
        "path_type": "hardlink"
      },
      {
        "_path": "include/eigen3/Eigen/src/SparseLU/SparseLU.h",
        "path_type": "hardlink"
      },
      {
        "_path": "include/eigen3/Eigen/src/SparseLU/SparseLUImpl.h",
        "path_type": "hardlink"
      },
      {
        "_path": "include/eigen3/Eigen/src/SparseLU/SparseLU_Memory.h",
        "path_type": "hardlink"
      },
      {
        "_path": "include/eigen3/Eigen/src/SparseLU/SparseLU_Structs.h",
        "path_type": "hardlink"
      },
      {
        "_path": "include/eigen3/Eigen/src/SparseLU/SparseLU_SupernodalMatrix.h",
        "path_type": "hardlink"
      },
      {
        "_path": "include/eigen3/Eigen/src/SparseLU/SparseLU_Utils.h",
        "path_type": "hardlink"
      },
      {
        "_path": "include/eigen3/Eigen/src/SparseLU/SparseLU_column_bmod.h",
        "path_type": "hardlink"
      },
      {
        "_path": "include/eigen3/Eigen/src/SparseLU/SparseLU_column_dfs.h",
        "path_type": "hardlink"
      },
      {
        "_path": "include/eigen3/Eigen/src/SparseLU/SparseLU_copy_to_ucol.h",
        "path_type": "hardlink"
      },
      {
        "_path": "include/eigen3/Eigen/src/SparseLU/SparseLU_gemm_kernel.h",
        "path_type": "hardlink"
      },
      {
        "_path": "include/eigen3/Eigen/src/SparseLU/SparseLU_heap_relax_snode.h",
        "path_type": "hardlink"
      },
      {
        "_path": "include/eigen3/Eigen/src/SparseLU/SparseLU_kernel_bmod.h",
        "path_type": "hardlink"
      },
      {
        "_path": "include/eigen3/Eigen/src/SparseLU/SparseLU_panel_bmod.h",
        "path_type": "hardlink"
      },
      {
        "_path": "include/eigen3/Eigen/src/SparseLU/SparseLU_panel_dfs.h",
        "path_type": "hardlink"
      },
      {
        "_path": "include/eigen3/Eigen/src/SparseLU/SparseLU_pivotL.h",
        "path_type": "hardlink"
      },
      {
        "_path": "include/eigen3/Eigen/src/SparseLU/SparseLU_pruneL.h",
        "path_type": "hardlink"
      },
      {
        "_path": "include/eigen3/Eigen/src/SparseLU/SparseLU_relax_snode.h",
        "path_type": "hardlink"
      },
      {
        "_path": "include/eigen3/Eigen/src/SparseQR/SparseQR.h",
        "path_type": "hardlink"
      },
      {
        "_path": "include/eigen3/Eigen/src/StlSupport/StdDeque.h",
        "path_type": "hardlink"
      },
      {
        "_path": "include/eigen3/Eigen/src/StlSupport/StdList.h",
        "path_type": "hardlink"
      },
      {
        "_path": "include/eigen3/Eigen/src/StlSupport/StdVector.h",
        "path_type": "hardlink"
      },
      {
        "_path": "include/eigen3/Eigen/src/StlSupport/details.h",
        "path_type": "hardlink"
      },
      {
        "_path": "include/eigen3/Eigen/src/SuperLUSupport/SuperLUSupport.h",
        "path_type": "hardlink"
      },
      {
        "_path": "include/eigen3/Eigen/src/UmfPackSupport/UmfPackSupport.h",
        "path_type": "hardlink"
      },
      {
        "_path": "include/eigen3/Eigen/src/misc/Image.h",
        "path_type": "hardlink"
      },
      {
        "_path": "include/eigen3/Eigen/src/misc/Kernel.h",
        "path_type": "hardlink"
      },
      {
        "_path": "include/eigen3/Eigen/src/misc/Solve.h",
        "path_type": "hardlink"
      },
      {
        "_path": "include/eigen3/Eigen/src/misc/SparseSolve.h",
        "path_type": "hardlink"
      },
      {
        "_path": "include/eigen3/Eigen/src/misc/blas.h",
        "path_type": "hardlink"
      },
      {
        "_path": "include/eigen3/Eigen/src/plugins/ArrayCwiseBinaryOps.h",
        "path_type": "hardlink"
      },
      {
        "_path": "include/eigen3/Eigen/src/plugins/ArrayCwiseUnaryOps.h",
        "path_type": "hardlink"
      },
      {
        "_path": "include/eigen3/Eigen/src/plugins/BlockMethods.h",
        "path_type": "hardlink"
      },
      {
        "_path": "include/eigen3/Eigen/src/plugins/CommonCwiseBinaryOps.h",
        "path_type": "hardlink"
      },
      {
        "_path": "include/eigen3/Eigen/src/plugins/CommonCwiseUnaryOps.h",
        "path_type": "hardlink"
      },
      {
        "_path": "include/eigen3/Eigen/src/plugins/MatrixCwiseBinaryOps.h",
        "path_type": "hardlink"
      },
      {
        "_path": "include/eigen3/Eigen/src/plugins/MatrixCwiseUnaryOps.h",
        "path_type": "hardlink"
      },
      {
        "_path": "include/eigen3/signature_of_eigen3_matrix_library",
        "path_type": "hardlink"
      },
      {
        "_path": "include/eigen3/unsupported/Eigen/AdolcForward",
        "path_type": "hardlink"
      },
      {
        "_path": "include/eigen3/unsupported/Eigen/AlignedVector3",
        "path_type": "hardlink"
      },
      {
        "_path": "include/eigen3/unsupported/Eigen/ArpackSupport",
        "path_type": "hardlink"
      },
      {
        "_path": "include/eigen3/unsupported/Eigen/AutoDiff",
        "path_type": "hardlink"
      },
      {
        "_path": "include/eigen3/unsupported/Eigen/BVH",
        "path_type": "hardlink"
      },
      {
        "_path": "include/eigen3/unsupported/Eigen/FFT",
        "path_type": "hardlink"
      },
      {
        "_path": "include/eigen3/unsupported/Eigen/IterativeSolvers",
        "path_type": "hardlink"
      },
      {
        "_path": "include/eigen3/unsupported/Eigen/KroneckerProduct",
        "path_type": "hardlink"
      },
      {
        "_path": "include/eigen3/unsupported/Eigen/LevenbergMarquardt",
        "path_type": "hardlink"
      },
      {
        "_path": "include/eigen3/unsupported/Eigen/MPRealSupport",
        "path_type": "hardlink"
      },
      {
        "_path": "include/eigen3/unsupported/Eigen/MatrixFunctions",
        "path_type": "hardlink"
      },
      {
        "_path": "include/eigen3/unsupported/Eigen/MoreVectorization",
        "path_type": "hardlink"
      },
      {
        "_path": "include/eigen3/unsupported/Eigen/NonLinearOptimization",
        "path_type": "hardlink"
      },
      {
        "_path": "include/eigen3/unsupported/Eigen/NumericalDiff",
        "path_type": "hardlink"
      },
      {
        "_path": "include/eigen3/unsupported/Eigen/OpenGLSupport",
        "path_type": "hardlink"
      },
      {
        "_path": "include/eigen3/unsupported/Eigen/Polynomials",
        "path_type": "hardlink"
      },
      {
        "_path": "include/eigen3/unsupported/Eigen/Skyline",
        "path_type": "hardlink"
      },
      {
        "_path": "include/eigen3/unsupported/Eigen/SparseExtra",
        "path_type": "hardlink"
      },
      {
        "_path": "include/eigen3/unsupported/Eigen/Splines",
        "path_type": "hardlink"
      },
      {
        "_path": "include/eigen3/unsupported/Eigen/src/AutoDiff/AutoDiffJacobian.h",
        "path_type": "hardlink"
      },
      {
        "_path": "include/eigen3/unsupported/Eigen/src/AutoDiff/AutoDiffScalar.h",
        "path_type": "hardlink"
      },
      {
        "_path": "include/eigen3/unsupported/Eigen/src/AutoDiff/AutoDiffVector.h",
        "path_type": "hardlink"
      },
      {
        "_path": "include/eigen3/unsupported/Eigen/src/BVH/BVAlgorithms.h",
        "path_type": "hardlink"
      },
      {
        "_path": "include/eigen3/unsupported/Eigen/src/BVH/KdBVH.h",
        "path_type": "hardlink"
      },
      {
        "_path": "include/eigen3/unsupported/Eigen/src/FFT/ei_fftw_impl.h",
        "path_type": "hardlink"
      },
      {
        "_path": "include/eigen3/unsupported/Eigen/src/FFT/ei_kissfft_impl.h",
        "path_type": "hardlink"
      },
      {
        "_path": "include/eigen3/unsupported/Eigen/src/IterativeSolvers/ConstrainedConjGrad.h",
        "path_type": "hardlink"
      },
      {
        "_path": "include/eigen3/unsupported/Eigen/src/IterativeSolvers/DGMRES.h",
        "path_type": "hardlink"
      },
      {
        "_path": "include/eigen3/unsupported/Eigen/src/IterativeSolvers/GMRES.h",
        "path_type": "hardlink"
      },
      {
        "_path": "include/eigen3/unsupported/Eigen/src/IterativeSolvers/IncompleteCholesky.h",
        "path_type": "hardlink"
      },
      {
        "_path": "include/eigen3/unsupported/Eigen/src/IterativeSolvers/IncompleteLU.h",
        "path_type": "hardlink"
      },
      {
        "_path": "include/eigen3/unsupported/Eigen/src/IterativeSolvers/IterationController.h",
        "path_type": "hardlink"
      },
      {
        "_path": "include/eigen3/unsupported/Eigen/src/IterativeSolvers/MINRES.h",
        "path_type": "hardlink"
      },
      {
        "_path": "include/eigen3/unsupported/Eigen/src/IterativeSolvers/Scaling.h",
        "path_type": "hardlink"
      },
      {
        "_path": "include/eigen3/unsupported/Eigen/src/KroneckerProduct/KroneckerTensorProduct.h",
        "path_type": "hardlink"
      },
      {
        "_path": "include/eigen3/unsupported/Eigen/src/LevenbergMarquardt/LMcovar.h",
        "path_type": "hardlink"
      },
      {
        "_path": "include/eigen3/unsupported/Eigen/src/LevenbergMarquardt/LMonestep.h",
        "path_type": "hardlink"
      },
      {
        "_path": "include/eigen3/unsupported/Eigen/src/LevenbergMarquardt/LMpar.h",
        "path_type": "hardlink"
      },
      {
        "_path": "include/eigen3/unsupported/Eigen/src/LevenbergMarquardt/LMqrsolv.h",
        "path_type": "hardlink"
      },
      {
        "_path": "include/eigen3/unsupported/Eigen/src/LevenbergMarquardt/LevenbergMarquardt.h",
        "path_type": "hardlink"
      },
      {
        "_path": "include/eigen3/unsupported/Eigen/src/MatrixFunctions/MatrixExponential.h",
        "path_type": "hardlink"
      },
      {
        "_path": "include/eigen3/unsupported/Eigen/src/MatrixFunctions/MatrixFunction.h",
        "path_type": "hardlink"
      },
      {
        "_path": "include/eigen3/unsupported/Eigen/src/MatrixFunctions/MatrixFunctionAtomic.h",
        "path_type": "hardlink"
      },
      {
        "_path": "include/eigen3/unsupported/Eigen/src/MatrixFunctions/MatrixLogarithm.h",
        "path_type": "hardlink"
      },
      {
        "_path": "include/eigen3/unsupported/Eigen/src/MatrixFunctions/MatrixPower.h",
        "path_type": "hardlink"
      },
      {
        "_path": "include/eigen3/unsupported/Eigen/src/MatrixFunctions/MatrixSquareRoot.h",
        "path_type": "hardlink"
      },
      {
        "_path": "include/eigen3/unsupported/Eigen/src/MatrixFunctions/StemFunction.h",
        "path_type": "hardlink"
      },
      {
        "_path": "include/eigen3/unsupported/Eigen/src/MoreVectorization/MathFunctions.h",
        "path_type": "hardlink"
      },
      {
        "_path": "include/eigen3/unsupported/Eigen/src/NonLinearOptimization/HybridNonLinearSolver.h",
        "path_type": "hardlink"
      },
      {
        "_path": "include/eigen3/unsupported/Eigen/src/NonLinearOptimization/LevenbergMarquardt.h",
        "path_type": "hardlink"
      },
      {
        "_path": "include/eigen3/unsupported/Eigen/src/NonLinearOptimization/chkder.h",
        "path_type": "hardlink"
      },
      {
        "_path": "include/eigen3/unsupported/Eigen/src/NonLinearOptimization/covar.h",
        "path_type": "hardlink"
      },
      {
        "_path": "include/eigen3/unsupported/Eigen/src/NonLinearOptimization/dogleg.h",
        "path_type": "hardlink"
      },
      {
        "_path": "include/eigen3/unsupported/Eigen/src/NonLinearOptimization/fdjac1.h",
        "path_type": "hardlink"
      },
      {
        "_path": "include/eigen3/unsupported/Eigen/src/NonLinearOptimization/lmpar.h",
        "path_type": "hardlink"
      },
      {
        "_path": "include/eigen3/unsupported/Eigen/src/NonLinearOptimization/qrsolv.h",
        "path_type": "hardlink"
      },
      {
        "_path": "include/eigen3/unsupported/Eigen/src/NonLinearOptimization/r1mpyq.h",
        "path_type": "hardlink"
      },
      {
        "_path": "include/eigen3/unsupported/Eigen/src/NonLinearOptimization/r1updt.h",
        "path_type": "hardlink"
      },
      {
        "_path": "include/eigen3/unsupported/Eigen/src/NonLinearOptimization/rwupdt.h",
        "path_type": "hardlink"
      },
      {
        "_path": "include/eigen3/unsupported/Eigen/src/NumericalDiff/NumericalDiff.h",
        "path_type": "hardlink"
      },
      {
        "_path": "include/eigen3/unsupported/Eigen/src/Polynomials/Companion.h",
        "path_type": "hardlink"
      },
      {
        "_path": "include/eigen3/unsupported/Eigen/src/Polynomials/PolynomialSolver.h",
        "path_type": "hardlink"
      },
      {
        "_path": "include/eigen3/unsupported/Eigen/src/Polynomials/PolynomialUtils.h",
        "path_type": "hardlink"
      },
      {
        "_path": "include/eigen3/unsupported/Eigen/src/Skyline/SkylineInplaceLU.h",
        "path_type": "hardlink"
      },
      {
        "_path": "include/eigen3/unsupported/Eigen/src/Skyline/SkylineMatrix.h",
        "path_type": "hardlink"
      },
      {
        "_path": "include/eigen3/unsupported/Eigen/src/Skyline/SkylineMatrixBase.h",
        "path_type": "hardlink"
      },
      {
        "_path": "include/eigen3/unsupported/Eigen/src/Skyline/SkylineProduct.h",
        "path_type": "hardlink"
      },
      {
        "_path": "include/eigen3/unsupported/Eigen/src/Skyline/SkylineStorage.h",
        "path_type": "hardlink"
      },
      {
        "_path": "include/eigen3/unsupported/Eigen/src/Skyline/SkylineUtil.h",
        "path_type": "hardlink"
      },
      {
        "_path": "include/eigen3/unsupported/Eigen/src/SparseExtra/BlockOfDynamicSparseMatrix.h",
        "path_type": "hardlink"
      },
      {
        "_path": "include/eigen3/unsupported/Eigen/src/SparseExtra/DynamicSparseMatrix.h",
        "path_type": "hardlink"
      },
      {
        "_path": "include/eigen3/unsupported/Eigen/src/SparseExtra/MarketIO.h",
        "path_type": "hardlink"
      },
      {
        "_path": "include/eigen3/unsupported/Eigen/src/SparseExtra/MatrixMarketIterator.h",
        "path_type": "hardlink"
      },
      {
        "_path": "include/eigen3/unsupported/Eigen/src/SparseExtra/RandomSetter.h",
        "path_type": "hardlink"
      },
      {
        "_path": "include/eigen3/unsupported/Eigen/src/Splines/Spline.h",
        "path_type": "hardlink"
      },
      {
        "_path": "include/eigen3/unsupported/Eigen/src/Splines/SplineFitting.h",
        "path_type": "hardlink"
      },
      {
        "_path": "include/eigen3/unsupported/Eigen/src/Splines/SplineFwd.h",
        "path_type": "hardlink"
      },
      {
        "_path": "share/pkgconfig/eigen3.pc",
        "file_mode": "text",
        "path_type": "hardlink",
        "prefix_placeholder": "/opt/anaconda1anaconda2anaconda3",
        "sha256_in_prefix": "e1fd4ed0e160b7f57bc2536d682d52ad914ab14458f6f61a92a7d647cca5e066"
      },
      {
        "_path": "unpacked_source/CMakeLists.txt",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/COPYING.BSD",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/COPYING.GPL",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/COPYING.LGPL",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/COPYING.MINPACK",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/COPYING.MPL2",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/COPYING.README",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/CTestConfig.cmake",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/CTestCustom.cmake.in",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/Eigen/Array",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/Eigen/CMakeLists.txt",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/Eigen/Cholesky",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/Eigen/CholmodSupport",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/Eigen/Core",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/Eigen/Dense",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/Eigen/Eigen",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/Eigen/Eigen2Support",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/Eigen/Eigenvalues",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/Eigen/Geometry",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/Eigen/Householder",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/Eigen/IterativeLinearSolvers",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/Eigen/Jacobi",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/Eigen/LU",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/Eigen/LeastSquares",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/Eigen/MetisSupport",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/Eigen/OrderingMethods",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/Eigen/PaStiXSupport",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/Eigen/PardisoSupport",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/Eigen/QR",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/Eigen/QtAlignedMalloc",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/Eigen/SPQRSupport",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/Eigen/SVD",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/Eigen/Sparse",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/Eigen/SparseCholesky",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/Eigen/SparseCore",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/Eigen/SparseLU",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/Eigen/SparseQR",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/Eigen/StdDeque",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/Eigen/StdList",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/Eigen/StdVector",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/Eigen/SuperLUSupport",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/Eigen/UmfPackSupport",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/Eigen/src/CMakeLists.txt",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/Eigen/src/Cholesky/CMakeLists.txt",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/Eigen/src/Cholesky/LDLT.h",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/Eigen/src/Cholesky/LLT.h",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/Eigen/src/Cholesky/LLT_MKL.h",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/Eigen/src/CholmodSupport/CMakeLists.txt",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/Eigen/src/CholmodSupport/CholmodSupport.h",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/Eigen/src/Core/Array.h",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/Eigen/src/Core/ArrayBase.h",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/Eigen/src/Core/ArrayWrapper.h",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/Eigen/src/Core/Assign.h",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/Eigen/src/Core/Assign_MKL.h",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/Eigen/src/Core/BandMatrix.h",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/Eigen/src/Core/Block.h",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/Eigen/src/Core/BooleanRedux.h",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/Eigen/src/Core/CMakeLists.txt",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/Eigen/src/Core/CommaInitializer.h",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/Eigen/src/Core/CoreIterators.h",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/Eigen/src/Core/CwiseBinaryOp.h",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/Eigen/src/Core/CwiseNullaryOp.h",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/Eigen/src/Core/CwiseUnaryOp.h",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/Eigen/src/Core/CwiseUnaryView.h",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/Eigen/src/Core/DenseBase.h",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/Eigen/src/Core/DenseCoeffsBase.h",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/Eigen/src/Core/DenseStorage.h",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/Eigen/src/Core/Diagonal.h",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/Eigen/src/Core/DiagonalMatrix.h",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/Eigen/src/Core/DiagonalProduct.h",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/Eigen/src/Core/Dot.h",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/Eigen/src/Core/EigenBase.h",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/Eigen/src/Core/Flagged.h",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/Eigen/src/Core/ForceAlignedAccess.h",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/Eigen/src/Core/Functors.h",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/Eigen/src/Core/Fuzzy.h",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/Eigen/src/Core/GeneralProduct.h",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/Eigen/src/Core/GenericPacketMath.h",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/Eigen/src/Core/GlobalFunctions.h",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/Eigen/src/Core/IO.h",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/Eigen/src/Core/Map.h",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/Eigen/src/Core/MapBase.h",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/Eigen/src/Core/MathFunctions.h",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/Eigen/src/Core/Matrix.h",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/Eigen/src/Core/MatrixBase.h",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/Eigen/src/Core/NestByValue.h",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/Eigen/src/Core/NoAlias.h",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/Eigen/src/Core/NumTraits.h",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/Eigen/src/Core/PermutationMatrix.h",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/Eigen/src/Core/PlainObjectBase.h",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/Eigen/src/Core/ProductBase.h",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/Eigen/src/Core/Random.h",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/Eigen/src/Core/Redux.h",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/Eigen/src/Core/Ref.h",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/Eigen/src/Core/Replicate.h",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/Eigen/src/Core/ReturnByValue.h",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/Eigen/src/Core/Reverse.h",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/Eigen/src/Core/Select.h",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/Eigen/src/Core/SelfAdjointView.h",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/Eigen/src/Core/SelfCwiseBinaryOp.h",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/Eigen/src/Core/SolveTriangular.h",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/Eigen/src/Core/StableNorm.h",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/Eigen/src/Core/Stride.h",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/Eigen/src/Core/Swap.h",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/Eigen/src/Core/Transpose.h",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/Eigen/src/Core/Transpositions.h",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/Eigen/src/Core/TriangularMatrix.h",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/Eigen/src/Core/VectorBlock.h",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/Eigen/src/Core/VectorwiseOp.h",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/Eigen/src/Core/Visitor.h",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/Eigen/src/Core/arch/AltiVec/CMakeLists.txt",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/Eigen/src/Core/arch/AltiVec/Complex.h",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/Eigen/src/Core/arch/AltiVec/PacketMath.h",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/Eigen/src/Core/arch/CMakeLists.txt",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/Eigen/src/Core/arch/Default/CMakeLists.txt",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/Eigen/src/Core/arch/Default/Settings.h",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/Eigen/src/Core/arch/NEON/CMakeLists.txt",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/Eigen/src/Core/arch/NEON/Complex.h",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/Eigen/src/Core/arch/NEON/PacketMath.h",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/Eigen/src/Core/arch/SSE/CMakeLists.txt",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/Eigen/src/Core/arch/SSE/Complex.h",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/Eigen/src/Core/arch/SSE/MathFunctions.h",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/Eigen/src/Core/arch/SSE/PacketMath.h",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/Eigen/src/Core/products/CMakeLists.txt",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/Eigen/src/Core/products/CoeffBasedProduct.h",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/Eigen/src/Core/products/GeneralBlockPanelKernel.h",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/Eigen/src/Core/products/GeneralMatrixMatrix.h",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/Eigen/src/Core/products/GeneralMatrixMatrixTriangular.h",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/Eigen/src/Core/products/GeneralMatrixMatrixTriangular_MKL.h",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/Eigen/src/Core/products/GeneralMatrixMatrix_MKL.h",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/Eigen/src/Core/products/GeneralMatrixVector.h",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/Eigen/src/Core/products/GeneralMatrixVector_MKL.h",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/Eigen/src/Core/products/Parallelizer.h",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/Eigen/src/Core/products/SelfadjointMatrixMatrix.h",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/Eigen/src/Core/products/SelfadjointMatrixMatrix_MKL.h",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/Eigen/src/Core/products/SelfadjointMatrixVector.h",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/Eigen/src/Core/products/SelfadjointMatrixVector_MKL.h",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/Eigen/src/Core/products/SelfadjointProduct.h",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/Eigen/src/Core/products/SelfadjointRank2Update.h",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/Eigen/src/Core/products/TriangularMatrixMatrix.h",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/Eigen/src/Core/products/TriangularMatrixMatrix_MKL.h",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/Eigen/src/Core/products/TriangularMatrixVector.h",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/Eigen/src/Core/products/TriangularMatrixVector_MKL.h",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/Eigen/src/Core/products/TriangularSolverMatrix.h",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/Eigen/src/Core/products/TriangularSolverMatrix_MKL.h",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/Eigen/src/Core/products/TriangularSolverVector.h",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/Eigen/src/Core/util/BlasUtil.h",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/Eigen/src/Core/util/CMakeLists.txt",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/Eigen/src/Core/util/Constants.h",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/Eigen/src/Core/util/DisableStupidWarnings.h",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/Eigen/src/Core/util/ForwardDeclarations.h",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/Eigen/src/Core/util/MKL_support.h",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/Eigen/src/Core/util/Macros.h",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/Eigen/src/Core/util/Memory.h",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/Eigen/src/Core/util/Meta.h",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/Eigen/src/Core/util/NonMPL2.h",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/Eigen/src/Core/util/ReenableStupidWarnings.h",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/Eigen/src/Core/util/StaticAssert.h",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/Eigen/src/Core/util/XprHelper.h",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/Eigen/src/Eigen2Support/Block.h",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/Eigen/src/Eigen2Support/CMakeLists.txt",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/Eigen/src/Eigen2Support/Cwise.h",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/Eigen/src/Eigen2Support/CwiseOperators.h",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/Eigen/src/Eigen2Support/Geometry/AlignedBox.h",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/Eigen/src/Eigen2Support/Geometry/All.h",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/Eigen/src/Eigen2Support/Geometry/AngleAxis.h",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/Eigen/src/Eigen2Support/Geometry/CMakeLists.txt",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/Eigen/src/Eigen2Support/Geometry/Hyperplane.h",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/Eigen/src/Eigen2Support/Geometry/ParametrizedLine.h",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/Eigen/src/Eigen2Support/Geometry/Quaternion.h",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/Eigen/src/Eigen2Support/Geometry/Rotation2D.h",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/Eigen/src/Eigen2Support/Geometry/RotationBase.h",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/Eigen/src/Eigen2Support/Geometry/Scaling.h",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/Eigen/src/Eigen2Support/Geometry/Transform.h",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/Eigen/src/Eigen2Support/Geometry/Translation.h",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/Eigen/src/Eigen2Support/LU.h",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/Eigen/src/Eigen2Support/Lazy.h",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/Eigen/src/Eigen2Support/LeastSquares.h",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/Eigen/src/Eigen2Support/Macros.h",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/Eigen/src/Eigen2Support/MathFunctions.h",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/Eigen/src/Eigen2Support/Memory.h",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/Eigen/src/Eigen2Support/Meta.h",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/Eigen/src/Eigen2Support/Minor.h",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/Eigen/src/Eigen2Support/QR.h",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/Eigen/src/Eigen2Support/SVD.h",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/Eigen/src/Eigen2Support/TriangularSolver.h",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/Eigen/src/Eigen2Support/VectorBlock.h",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/Eigen/src/Eigenvalues/CMakeLists.txt",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/Eigen/src/Eigenvalues/ComplexEigenSolver.h",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/Eigen/src/Eigenvalues/ComplexSchur.h",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/Eigen/src/Eigenvalues/ComplexSchur_MKL.h",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/Eigen/src/Eigenvalues/EigenSolver.h",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/Eigen/src/Eigenvalues/GeneralizedEigenSolver.h",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/Eigen/src/Eigenvalues/GeneralizedSelfAdjointEigenSolver.h",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/Eigen/src/Eigenvalues/HessenbergDecomposition.h",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/Eigen/src/Eigenvalues/MatrixBaseEigenvalues.h",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/Eigen/src/Eigenvalues/RealQZ.h",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/Eigen/src/Eigenvalues/RealSchur.h",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/Eigen/src/Eigenvalues/RealSchur_MKL.h",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/Eigen/src/Eigenvalues/SelfAdjointEigenSolver_MKL.h",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/Eigen/src/Eigenvalues/Tridiagonalization.h",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/Eigen/src/Geometry/AlignedBox.h",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/Eigen/src/Geometry/AngleAxis.h",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/Eigen/src/Geometry/CMakeLists.txt",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/Eigen/src/Geometry/EulerAngles.h",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/Eigen/src/Geometry/Homogeneous.h",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/Eigen/src/Geometry/Hyperplane.h",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/Eigen/src/Geometry/OrthoMethods.h",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/Eigen/src/Geometry/ParametrizedLine.h",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/Eigen/src/Geometry/Quaternion.h",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/Eigen/src/Geometry/Rotation2D.h",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/Eigen/src/Geometry/RotationBase.h",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/Eigen/src/Geometry/Scaling.h",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/Eigen/src/Geometry/Transform.h",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/Eigen/src/Geometry/Translation.h",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/Eigen/src/Geometry/Umeyama.h",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/Eigen/src/Geometry/arch/CMakeLists.txt",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/Eigen/src/Geometry/arch/Geometry_SSE.h",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/Eigen/src/Householder/BlockHouseholder.h",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/Eigen/src/Householder/CMakeLists.txt",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/Eigen/src/Householder/Householder.h",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/Eigen/src/Householder/HouseholderSequence.h",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/Eigen/src/IterativeLinearSolvers/BasicPreconditioners.h",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/Eigen/src/IterativeLinearSolvers/BiCGSTAB.h",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/Eigen/src/IterativeLinearSolvers/CMakeLists.txt",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/Eigen/src/IterativeLinearSolvers/ConjugateGradient.h",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/Eigen/src/IterativeLinearSolvers/IncompleteLUT.h",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/Eigen/src/IterativeLinearSolvers/IterativeSolverBase.h",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/Eigen/src/Jacobi/CMakeLists.txt",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/Eigen/src/Jacobi/Jacobi.h",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/Eigen/src/LU/CMakeLists.txt",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/Eigen/src/LU/Determinant.h",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/Eigen/src/LU/FullPivLU.h",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/Eigen/src/LU/Inverse.h",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/Eigen/src/LU/PartialPivLU.h",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/Eigen/src/LU/PartialPivLU_MKL.h",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/Eigen/src/LU/arch/CMakeLists.txt",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/Eigen/src/LU/arch/Inverse_SSE.h",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/Eigen/src/MetisSupport/CMakeLists.txt",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/Eigen/src/MetisSupport/MetisSupport.h",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/Eigen/src/OrderingMethods/Amd.h",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/Eigen/src/OrderingMethods/CMakeLists.txt",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/Eigen/src/OrderingMethods/Eigen_Colamd.h",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/Eigen/src/OrderingMethods/Ordering.h",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/Eigen/src/PaStiXSupport/CMakeLists.txt",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/Eigen/src/PaStiXSupport/PaStiXSupport.h",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/Eigen/src/PardisoSupport/CMakeLists.txt",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/Eigen/src/PardisoSupport/PardisoSupport.h",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/Eigen/src/QR/CMakeLists.txt",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/Eigen/src/QR/ColPivHouseholderQR.h",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/Eigen/src/QR/ColPivHouseholderQR_MKL.h",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/Eigen/src/QR/FullPivHouseholderQR.h",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/Eigen/src/QR/HouseholderQR.h",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/Eigen/src/QR/HouseholderQR_MKL.h",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/Eigen/src/SPQRSupport/CMakeLists.txt",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/Eigen/src/SPQRSupport/SuiteSparseQRSupport.h",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/Eigen/src/SVD/CMakeLists.txt",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/Eigen/src/SVD/JacobiSVD.h",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/Eigen/src/SVD/JacobiSVD_MKL.h",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/Eigen/src/SVD/UpperBidiagonalization.h",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/Eigen/src/SparseCholesky/CMakeLists.txt",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/Eigen/src/SparseCholesky/SimplicialCholesky.h",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/Eigen/src/SparseCholesky/SimplicialCholesky_impl.h",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/Eigen/src/SparseCore/AmbiVector.h",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/Eigen/src/SparseCore/CMakeLists.txt",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/Eigen/src/SparseCore/CompressedStorage.h",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/Eigen/src/SparseCore/ConservativeSparseSparseProduct.h",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/Eigen/src/SparseCore/MappedSparseMatrix.h",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/Eigen/src/SparseCore/SparseBlock.h",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/Eigen/src/SparseCore/SparseColEtree.h",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/Eigen/src/SparseCore/SparseCwiseBinaryOp.h",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/Eigen/src/SparseCore/SparseCwiseUnaryOp.h",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/Eigen/src/SparseCore/SparseDenseProduct.h",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/Eigen/src/SparseCore/SparseDiagonalProduct.h",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/Eigen/src/SparseCore/SparseDot.h",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/Eigen/src/SparseCore/SparseFuzzy.h",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/Eigen/src/SparseCore/SparseMatrix.h",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/Eigen/src/SparseCore/SparseMatrixBase.h",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/Eigen/src/SparseCore/SparsePermutation.h",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/Eigen/src/SparseCore/SparseProduct.h",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/Eigen/src/SparseCore/SparseRedux.h",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/Eigen/src/SparseCore/SparseSelfAdjointView.h",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/Eigen/src/SparseCore/SparseSparseProductWithPruning.h",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/Eigen/src/SparseCore/SparseTranspose.h",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/Eigen/src/SparseCore/SparseTriangularView.h",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/Eigen/src/SparseCore/SparseUtil.h",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/Eigen/src/SparseCore/SparseVector.h",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/Eigen/src/SparseCore/SparseView.h",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/Eigen/src/SparseCore/TriangularSolver.h",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/Eigen/src/SparseLU/CMakeLists.txt",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/Eigen/src/SparseLU/SparseLU.h",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/Eigen/src/SparseLU/SparseLUImpl.h",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/Eigen/src/SparseLU/SparseLU_Memory.h",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/Eigen/src/SparseLU/SparseLU_Structs.h",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/Eigen/src/SparseLU/SparseLU_SupernodalMatrix.h",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/Eigen/src/SparseLU/SparseLU_Utils.h",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/Eigen/src/SparseLU/SparseLU_column_bmod.h",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/Eigen/src/SparseLU/SparseLU_column_dfs.h",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/Eigen/src/SparseLU/SparseLU_copy_to_ucol.h",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/Eigen/src/SparseLU/SparseLU_gemm_kernel.h",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/Eigen/src/SparseLU/SparseLU_heap_relax_snode.h",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/Eigen/src/SparseLU/SparseLU_kernel_bmod.h",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/Eigen/src/SparseLU/SparseLU_panel_bmod.h",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/Eigen/src/SparseLU/SparseLU_panel_dfs.h",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/Eigen/src/SparseLU/SparseLU_pivotL.h",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/Eigen/src/SparseLU/SparseLU_pruneL.h",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/Eigen/src/SparseLU/SparseLU_relax_snode.h",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/Eigen/src/SparseQR/CMakeLists.txt",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/Eigen/src/SparseQR/SparseQR.h",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/Eigen/src/StlSupport/CMakeLists.txt",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/Eigen/src/StlSupport/StdDeque.h",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/Eigen/src/StlSupport/StdList.h",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/Eigen/src/StlSupport/StdVector.h",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/Eigen/src/StlSupport/details.h",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/Eigen/src/SuperLUSupport/CMakeLists.txt",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/Eigen/src/SuperLUSupport/SuperLUSupport.h",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/Eigen/src/UmfPackSupport/CMakeLists.txt",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/Eigen/src/UmfPackSupport/UmfPackSupport.h",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/Eigen/src/misc/CMakeLists.txt",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/Eigen/src/misc/Image.h",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/Eigen/src/misc/Kernel.h",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/Eigen/src/misc/Solve.h",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/Eigen/src/misc/SparseSolve.h",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/Eigen/src/misc/blas.h",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/Eigen/src/plugins/ArrayCwiseBinaryOps.h",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/Eigen/src/plugins/ArrayCwiseUnaryOps.h",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/Eigen/src/plugins/BlockMethods.h",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/Eigen/src/plugins/CMakeLists.txt",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/Eigen/src/plugins/CommonCwiseBinaryOps.h",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/Eigen/src/plugins/CommonCwiseUnaryOps.h",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/Eigen/src/plugins/MatrixCwiseBinaryOps.h",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/Eigen/src/plugins/MatrixCwiseUnaryOps.h",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/INSTALL",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/bench/BenchSparseUtil.h",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/bench/BenchTimer.h",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/bench/BenchUtil.h",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/bench/README.txt",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/bench/basicbench.cxxlist",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/bench/basicbenchmark.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/bench/basicbenchmark.h",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/bench/benchBlasGemm.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/bench/benchCholesky.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/bench/benchEigenSolver.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/bench/benchFFT.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/bench/benchGeometry.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/bench/benchVecAdd.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/bench/bench_gemm.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/bench/bench_multi_compilers.sh",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/bench/bench_norm.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/bench/bench_reverse.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/bench/bench_sum.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/bench/bench_unrolling",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/bench/benchmark.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/bench/benchmarkSlice.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/bench/benchmarkX.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/bench/benchmarkXcwise.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/bench/benchmark_suite",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/bench/btl/CMakeLists.txt",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/bench/btl/COPYING",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/bench/btl/README",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/bench/btl/actions/action_aat_product.hh",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/bench/btl/actions/action_ata_product.hh",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/bench/btl/actions/action_atv_product.hh",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/bench/btl/actions/action_axpby.hh",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/bench/btl/actions/action_axpy.hh",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/bench/btl/actions/action_cholesky.hh",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/bench/btl/actions/action_ger.hh",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/bench/btl/actions/action_hessenberg.hh",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/bench/btl/actions/action_lu_decomp.hh",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/bench/btl/actions/action_lu_solve.hh",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/bench/btl/actions/action_matrix_matrix_product.hh",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/bench/btl/actions/action_matrix_matrix_product_bis.hh",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/bench/btl/actions/action_matrix_vector_product.hh",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/bench/btl/actions/action_partial_lu.hh",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/bench/btl/actions/action_rot.hh",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/bench/btl/actions/action_symv.hh",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/bench/btl/actions/action_syr2.hh",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/bench/btl/actions/action_trisolve.hh",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/bench/btl/actions/action_trisolve_matrix.hh",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/bench/btl/actions/action_trmm.hh",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/bench/btl/actions/basic_actions.hh",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/bench/btl/cmake/FindACML.cmake",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/bench/btl/cmake/FindATLAS.cmake",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/bench/btl/cmake/FindBlitz.cmake",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/bench/btl/cmake/FindCBLAS.cmake",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/bench/btl/cmake/FindGMM.cmake",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/bench/btl/cmake/FindGOTO.cmake",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/bench/btl/cmake/FindGOTO2.cmake",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/bench/btl/cmake/FindMKL.cmake",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/bench/btl/cmake/FindMTL4.cmake",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/bench/btl/cmake/FindPackageHandleStandardArgs.cmake",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/bench/btl/cmake/FindTvmet.cmake",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/bench/btl/cmake/MacroOptionalAddSubdirectory.cmake",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/bench/btl/data/CMakeLists.txt",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/bench/btl/data/action_settings.txt",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/bench/btl/data/gnuplot_common_settings.hh",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/bench/btl/data/go_mean",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/bench/btl/data/mean.cxx",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/bench/btl/data/mk_gnuplot_script.sh",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/bench/btl/data/mk_mean_script.sh",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/bench/btl/data/mk_new_gnuplot.sh",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/bench/btl/data/perlib_plot_settings.txt",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/bench/btl/data/regularize.cxx",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/bench/btl/data/smooth.cxx",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/bench/btl/data/smooth_all.sh",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/bench/btl/generic_bench/bench.hh",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/bench/btl/generic_bench/bench_parameter.hh",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/bench/btl/generic_bench/btl.hh",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/bench/btl/generic_bench/init/init_function.hh",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/bench/btl/generic_bench/init/init_matrix.hh",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/bench/btl/generic_bench/init/init_vector.hh",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/bench/btl/generic_bench/static/bench_static.hh",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/bench/btl/generic_bench/static/intel_bench_fixed_size.hh",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/bench/btl/generic_bench/static/static_size_generator.hh",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/bench/btl/generic_bench/timers/STL_perf_analyzer.hh",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/bench/btl/generic_bench/timers/STL_timer.hh",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/bench/btl/generic_bench/timers/mixed_perf_analyzer.hh",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/bench/btl/generic_bench/timers/portable_perf_analyzer.hh",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/bench/btl/generic_bench/timers/portable_perf_analyzer_old.hh",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/bench/btl/generic_bench/timers/portable_timer.hh",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/bench/btl/generic_bench/timers/x86_perf_analyzer.hh",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/bench/btl/generic_bench/timers/x86_timer.hh",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/bench/btl/generic_bench/utils/size_lin_log.hh",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/bench/btl/generic_bench/utils/size_log.hh",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/bench/btl/generic_bench/utils/utilities.h",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/bench/btl/generic_bench/utils/xy_file.hh",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/bench/btl/libs/BLAS/CMakeLists.txt",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/bench/btl/libs/BLAS/blas.h",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/bench/btl/libs/BLAS/blas_interface.hh",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/bench/btl/libs/BLAS/blas_interface_impl.hh",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/bench/btl/libs/BLAS/c_interface_base.h",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/bench/btl/libs/BLAS/main.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/bench/btl/libs/STL/CMakeLists.txt",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/bench/btl/libs/STL/STL_interface.hh",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/bench/btl/libs/STL/main.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/bench/btl/libs/blitz/CMakeLists.txt",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/bench/btl/libs/blitz/blitz_LU_solve_interface.hh",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/bench/btl/libs/blitz/blitz_interface.hh",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/bench/btl/libs/blitz/btl_blitz.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/bench/btl/libs/blitz/btl_tiny_blitz.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/bench/btl/libs/blitz/tiny_blitz_interface.hh",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/bench/btl/libs/eigen2/CMakeLists.txt",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/bench/btl/libs/eigen2/btl_tiny_eigen2.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/bench/btl/libs/eigen2/eigen2_interface.hh",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/bench/btl/libs/eigen2/main_adv.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/bench/btl/libs/eigen2/main_linear.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/bench/btl/libs/eigen2/main_matmat.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/bench/btl/libs/eigen2/main_vecmat.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/bench/btl/libs/eigen3/CMakeLists.txt",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/bench/btl/libs/eigen3/btl_tiny_eigen3.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/bench/btl/libs/eigen3/eigen3_interface.hh",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/bench/btl/libs/eigen3/main_adv.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/bench/btl/libs/eigen3/main_linear.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/bench/btl/libs/eigen3/main_matmat.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/bench/btl/libs/eigen3/main_vecmat.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/bench/btl/libs/gmm/CMakeLists.txt",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/bench/btl/libs/gmm/gmm_LU_solve_interface.hh",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/bench/btl/libs/gmm/gmm_interface.hh",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/bench/btl/libs/gmm/main.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/bench/btl/libs/mtl4/.kdbgrc.main",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/bench/btl/libs/mtl4/CMakeLists.txt",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/bench/btl/libs/mtl4/main.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/bench/btl/libs/mtl4/mtl4_LU_solve_interface.hh",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/bench/btl/libs/mtl4/mtl4_interface.hh",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/bench/btl/libs/tvmet/CMakeLists.txt",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/bench/btl/libs/tvmet/main.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/bench/btl/libs/tvmet/tvmet_interface.hh",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/bench/btl/libs/ublas/CMakeLists.txt",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/bench/btl/libs/ublas/main.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/bench/btl/libs/ublas/ublas_interface.hh",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/bench/check_cache_queries.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/bench/eig33.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/bench/geometry.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/bench/product_threshold.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/bench/quat_slerp.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/bench/quatmul.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/bench/sparse_cholesky.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/bench/sparse_dense_product.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/bench/sparse_lu.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/bench/sparse_product.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/bench/sparse_randomsetter.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/bench/sparse_setter.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/bench/sparse_transpose.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/bench/sparse_trisolver.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/bench/spbench/CMakeLists.txt",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/bench/spbench/sp_solver.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/bench/spbench/spbench.dtd",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/bench/spbench/spbenchsolver.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/bench/spbench/spbenchsolver.h",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/bench/spbench/spbenchstyle.h",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/bench/spbench/test_sparseLU.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/bench/spmv.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/bench/vdw_new.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/blas/BandTriangularSolver.h",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/blas/CMakeLists.txt",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/blas/GeneralRank1Update.h",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/blas/PackedSelfadjointProduct.h",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/blas/PackedTriangularMatrixVector.h",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/blas/PackedTriangularSolverVector.h",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/blas/README.txt",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/blas/Rank2Update.h",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/blas/chbmv.f",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/blas/chpmv.f",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/blas/common.h",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/blas/complex_double.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/blas/complex_single.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/blas/complexdots.f",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/blas/ctbmv.f",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/blas/double.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/blas/drotm.f",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/blas/drotmg.f",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/blas/dsbmv.f",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/blas/dspmv.f",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/blas/dtbmv.f",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/blas/level1_cplx_impl.h",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/blas/level1_impl.h",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/blas/level1_real_impl.h",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/blas/level2_cplx_impl.h",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/blas/level2_impl.h",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/blas/level2_real_impl.h",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/blas/level3_impl.h",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/blas/lsame.f",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/blas/single.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/blas/srotm.f",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/blas/srotmg.f",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/blas/ssbmv.f",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/blas/sspmv.f",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/blas/stbmv.f",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/blas/testing/CMakeLists.txt",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/blas/testing/cblat1.f",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/blas/testing/cblat2.dat",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/blas/testing/cblat2.f",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/blas/testing/cblat3.dat",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/blas/testing/cblat3.f",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/blas/testing/dblat1.f",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/blas/testing/dblat2.dat",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/blas/testing/dblat2.f",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/blas/testing/dblat3.dat",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/blas/testing/dblat3.f",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/blas/testing/runblastest.sh",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/blas/testing/sblat1.f",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/blas/testing/sblat2.dat",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/blas/testing/sblat2.f",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/blas/testing/sblat3.dat",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/blas/testing/sblat3.f",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/blas/testing/zblat1.f",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/blas/testing/zblat2.dat",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/blas/testing/zblat2.f",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/blas/testing/zblat3.dat",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/blas/testing/zblat3.f",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/blas/xerbla.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/blas/zhbmv.f",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/blas/zhpmv.f",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/blas/ztbmv.f",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/cmake/EigenConfigureTesting.cmake",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/cmake/EigenDetermineOSVersion.cmake",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/cmake/EigenDetermineVSServicePack.cmake",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/cmake/EigenTesting.cmake",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/cmake/FindAdolc.cmake",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/cmake/FindBLAS.cmake",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/cmake/FindCholmod.cmake",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/cmake/FindEigen2.cmake",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/cmake/FindEigen3.cmake",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/cmake/FindFFTW.cmake",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/cmake/FindGLEW.cmake",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/cmake/FindGMP.cmake",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/cmake/FindGSL.cmake",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/cmake/FindGoogleHash.cmake",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/cmake/FindLAPACK.cmake",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/cmake/FindMPFR.cmake",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/cmake/FindMetis.cmake",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/cmake/FindPastix.cmake",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/cmake/FindSPQR.cmake",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/cmake/FindScotch.cmake",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/cmake/FindStandardMathLibrary.cmake",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/cmake/FindSuperLU.cmake",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/cmake/FindUmfpack.cmake",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/cmake/RegexUtils.cmake",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/cmake/language_support.cmake",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/debug/gdb/__init__.py",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/debug/gdb/printers.py",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/debug/msvc/eigen.natvis",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/debug/msvc/eigen_autoexp_part.dat",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/demos/CMakeLists.txt",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/demos/mandelbrot/CMakeLists.txt",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/demos/mandelbrot/README",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/demos/mandelbrot/mandelbrot.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/demos/mandelbrot/mandelbrot.h",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/demos/mix_eigen_and_c/README",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/demos/mix_eigen_and_c/binary_library.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/demos/mix_eigen_and_c/binary_library.h",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/demos/mix_eigen_and_c/example.c",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/demos/opengl/CMakeLists.txt",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/demos/opengl/README",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/demos/opengl/camera.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/demos/opengl/camera.h",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/demos/opengl/gpuhelper.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/demos/opengl/gpuhelper.h",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/demos/opengl/icosphere.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/demos/opengl/icosphere.h",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/demos/opengl/quaternion_demo.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/demos/opengl/quaternion_demo.h",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/demos/opengl/trackball.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/demos/opengl/trackball.h",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/doc/A05_PortingFrom2To3.dox",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/doc/A10_Eigen2SupportModes.dox",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/doc/AsciiQuickReference.txt",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/doc/B01_Experimental.dox",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/doc/CMakeLists.txt",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/doc/ClassHierarchy.dox",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/doc/CustomizingEigen.dox",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/doc/Doxyfile.in",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/doc/Eigen_Silly_Professor_64x64.png",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/doc/FixedSizeVectorizable.dox",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/doc/FunctionsTakingEigenTypes.dox",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/doc/HiPerformance.dox",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/doc/InsideEigenExample.dox",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/doc/Manual.dox",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/doc/Overview.dox",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/doc/PassingByValue.dox",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/doc/Pitfalls.dox",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/doc/PreprocessorDirectives.dox",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/doc/QuickReference.dox",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/doc/QuickStartGuide.dox",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/doc/SparseLinearSystems.dox",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/doc/SparseQuickReference.dox",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/doc/StlContainers.dox",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/doc/StorageOrders.dox",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/doc/StructHavingEigenMembers.dox",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/doc/TemplateKeyword.dox",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/doc/TopicAliasing.dox",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/doc/TopicAssertions.dox",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/doc/TopicEigenExpressionTemplates.dox",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/doc/TopicLazyEvaluation.dox",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/doc/TopicLinearAlgebraDecompositions.dox",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/doc/TopicMultithreading.dox",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/doc/TopicResizing.dox",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/doc/TopicScalarTypes.dox",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/doc/TopicVectorization.dox",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/doc/TutorialAdvancedInitialization.dox",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/doc/TutorialArrayClass.dox",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/doc/TutorialBlockOperations.dox",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/doc/TutorialGeometry.dox",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/doc/TutorialLinearAlgebra.dox",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/doc/TutorialMapClass.dox",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/doc/TutorialMatrixArithmetic.dox",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/doc/TutorialMatrixClass.dox",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/doc/TutorialReductionsVisitorsBroadcasting.dox",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/doc/TutorialSparse.dox",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/doc/TutorialSparse_example_details.dox",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/doc/UnalignedArrayAssert.dox",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/doc/UsingIntelMKL.dox",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/doc/WrongStackAlignment.dox",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/doc/eigen_navtree_hacks.js",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/doc/eigendoxy.css",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/doc/eigendoxy_footer.html.in",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/doc/eigendoxy_header.html.in",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/doc/eigendoxy_layout.xml.in",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/doc/eigendoxy_tabs.css",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/doc/examples/.krazy",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/doc/examples/CMakeLists.txt",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/doc/examples/DenseBase_middleCols_int.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/doc/examples/DenseBase_middleRows_int.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/doc/examples/DenseBase_template_int_middleCols.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/doc/examples/DenseBase_template_int_middleRows.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/doc/examples/MatrixBase_cwise_const.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/doc/examples/QuickStart_example.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/doc/examples/QuickStart_example2_dynamic.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/doc/examples/QuickStart_example2_fixed.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/doc/examples/TemplateKeyword_flexible.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/doc/examples/TemplateKeyword_simple.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/doc/examples/TutorialLinAlgComputeTwice.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/doc/examples/TutorialLinAlgExComputeSolveError.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/doc/examples/TutorialLinAlgExSolveColPivHouseholderQR.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/doc/examples/TutorialLinAlgExSolveLDLT.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/doc/examples/TutorialLinAlgInverseDeterminant.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/doc/examples/TutorialLinAlgRankRevealing.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/doc/examples/TutorialLinAlgSVDSolve.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/doc/examples/TutorialLinAlgSelfAdjointEigenSolver.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/doc/examples/TutorialLinAlgSetThreshold.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/doc/examples/Tutorial_ArrayClass_accessors.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/doc/examples/Tutorial_ArrayClass_addition.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/doc/examples/Tutorial_ArrayClass_cwise_other.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/doc/examples/Tutorial_ArrayClass_interop.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/doc/examples/Tutorial_ArrayClass_interop_matrix.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/doc/examples/Tutorial_ArrayClass_mult.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/doc/examples/Tutorial_BlockOperations_block_assignment.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/doc/examples/Tutorial_BlockOperations_colrow.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/doc/examples/Tutorial_BlockOperations_corner.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/doc/examples/Tutorial_BlockOperations_print_block.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/doc/examples/Tutorial_BlockOperations_vector.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/doc/examples/Tutorial_PartialLU_solve.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/doc/examples/Tutorial_ReductionsVisitorsBroadcasting_broadcast_1nn.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/doc/examples/Tutorial_ReductionsVisitorsBroadcasting_broadcast_simple.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/doc/examples/Tutorial_ReductionsVisitorsBroadcasting_broadcast_simple_rowwise.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/doc/examples/Tutorial_ReductionsVisitorsBroadcasting_colwise.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/doc/examples/Tutorial_ReductionsVisitorsBroadcasting_maxnorm.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/doc/examples/Tutorial_ReductionsVisitorsBroadcasting_reductions_bool.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/doc/examples/Tutorial_ReductionsVisitorsBroadcasting_reductions_norm.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/doc/examples/Tutorial_ReductionsVisitorsBroadcasting_rowwise.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/doc/examples/Tutorial_ReductionsVisitorsBroadcasting_visitors.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/doc/examples/Tutorial_simple_example_dynamic_size.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/doc/examples/Tutorial_simple_example_fixed_size.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/doc/examples/class_Block.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/doc/examples/class_CwiseBinaryOp.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/doc/examples/class_CwiseUnaryOp.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/doc/examples/class_CwiseUnaryOp_ptrfun.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/doc/examples/class_FixedBlock.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/doc/examples/class_FixedVectorBlock.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/doc/examples/class_VectorBlock.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/doc/examples/function_taking_eigenbase.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/doc/examples/function_taking_ref.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/doc/examples/tut_arithmetic_add_sub.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/doc/examples/tut_arithmetic_dot_cross.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/doc/examples/tut_arithmetic_matrix_mul.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/doc/examples/tut_arithmetic_redux_basic.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/doc/examples/tut_arithmetic_scalar_mul_div.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/doc/examples/tut_matrix_coefficient_accessors.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/doc/examples/tut_matrix_resize.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/doc/examples/tut_matrix_resize_fixed_size.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/doc/snippets/.krazy",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/doc/snippets/AngleAxis_mimic_euler.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/doc/snippets/CMakeLists.txt",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/doc/snippets/ColPivHouseholderQR_solve.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/doc/snippets/ComplexEigenSolver_compute.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/doc/snippets/ComplexEigenSolver_eigenvalues.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/doc/snippets/ComplexEigenSolver_eigenvectors.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/doc/snippets/ComplexSchur_compute.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/doc/snippets/ComplexSchur_matrixT.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/doc/snippets/ComplexSchur_matrixU.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/doc/snippets/Cwise_abs.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/doc/snippets/Cwise_abs2.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/doc/snippets/Cwise_acos.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/doc/snippets/Cwise_asin.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/doc/snippets/Cwise_boolean_and.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/doc/snippets/Cwise_boolean_or.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/doc/snippets/Cwise_cos.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/doc/snippets/Cwise_cube.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/doc/snippets/Cwise_equal_equal.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/doc/snippets/Cwise_exp.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/doc/snippets/Cwise_greater.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/doc/snippets/Cwise_greater_equal.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/doc/snippets/Cwise_inverse.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/doc/snippets/Cwise_less.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/doc/snippets/Cwise_less_equal.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/doc/snippets/Cwise_log.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/doc/snippets/Cwise_max.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/doc/snippets/Cwise_min.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/doc/snippets/Cwise_minus.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/doc/snippets/Cwise_minus_equal.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/doc/snippets/Cwise_not_equal.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/doc/snippets/Cwise_plus.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/doc/snippets/Cwise_plus_equal.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/doc/snippets/Cwise_pow.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/doc/snippets/Cwise_product.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/doc/snippets/Cwise_quotient.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/doc/snippets/Cwise_sin.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/doc/snippets/Cwise_slash_equal.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/doc/snippets/Cwise_sqrt.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/doc/snippets/Cwise_square.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/doc/snippets/Cwise_tan.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/doc/snippets/Cwise_times_equal.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/doc/snippets/DenseBase_LinSpaced.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/doc/snippets/DenseBase_LinSpaced_seq.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/doc/snippets/DenseBase_setLinSpaced.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/doc/snippets/DirectionWise_replicate.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/doc/snippets/DirectionWise_replicate_int.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/doc/snippets/EigenSolver_EigenSolver_MatrixType.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/doc/snippets/EigenSolver_compute.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/doc/snippets/EigenSolver_eigenvalues.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/doc/snippets/EigenSolver_eigenvectors.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/doc/snippets/EigenSolver_pseudoEigenvectors.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/doc/snippets/FullPivHouseholderQR_solve.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/doc/snippets/FullPivLU_image.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/doc/snippets/FullPivLU_kernel.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/doc/snippets/FullPivLU_solve.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/doc/snippets/GeneralizedEigenSolver.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/doc/snippets/HessenbergDecomposition_compute.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/doc/snippets/HessenbergDecomposition_matrixH.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/doc/snippets/HessenbergDecomposition_packedMatrix.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/doc/snippets/HouseholderQR_householderQ.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/doc/snippets/HouseholderQR_solve.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/doc/snippets/HouseholderSequence_HouseholderSequence.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/doc/snippets/IOFormat.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/doc/snippets/JacobiSVD_basic.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/doc/snippets/Jacobi_makeGivens.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/doc/snippets/Jacobi_makeJacobi.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/doc/snippets/LLT_example.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/doc/snippets/LLT_solve.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/doc/snippets/Map_general_stride.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/doc/snippets/Map_inner_stride.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/doc/snippets/Map_outer_stride.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/doc/snippets/Map_placement_new.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/doc/snippets/Map_simple.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/doc/snippets/MatrixBase_adjoint.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/doc/snippets/MatrixBase_all.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/doc/snippets/MatrixBase_applyOnTheLeft.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/doc/snippets/MatrixBase_applyOnTheRight.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/doc/snippets/MatrixBase_array.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/doc/snippets/MatrixBase_array_const.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/doc/snippets/MatrixBase_asDiagonal.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/doc/snippets/MatrixBase_block_int_int.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/doc/snippets/MatrixBase_block_int_int_int_int.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/doc/snippets/MatrixBase_bottomLeftCorner_int_int.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/doc/snippets/MatrixBase_bottomRightCorner_int_int.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/doc/snippets/MatrixBase_bottomRows_int.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/doc/snippets/MatrixBase_cast.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/doc/snippets/MatrixBase_col.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/doc/snippets/MatrixBase_colwise.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/doc/snippets/MatrixBase_computeInverseAndDetWithCheck.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/doc/snippets/MatrixBase_computeInverseWithCheck.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/doc/snippets/MatrixBase_cwiseAbs.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/doc/snippets/MatrixBase_cwiseAbs2.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/doc/snippets/MatrixBase_cwiseEqual.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/doc/snippets/MatrixBase_cwiseInverse.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/doc/snippets/MatrixBase_cwiseMax.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/doc/snippets/MatrixBase_cwiseMin.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/doc/snippets/MatrixBase_cwiseNotEqual.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/doc/snippets/MatrixBase_cwiseProduct.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/doc/snippets/MatrixBase_cwiseQuotient.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/doc/snippets/MatrixBase_cwiseSqrt.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/doc/snippets/MatrixBase_diagonal.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/doc/snippets/MatrixBase_diagonal_int.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/doc/snippets/MatrixBase_diagonal_template_int.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/doc/snippets/MatrixBase_eigenvalues.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/doc/snippets/MatrixBase_end_int.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/doc/snippets/MatrixBase_eval.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/doc/snippets/MatrixBase_extract.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/doc/snippets/MatrixBase_fixedBlock_int_int.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/doc/snippets/MatrixBase_identity.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/doc/snippets/MatrixBase_identity_int_int.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/doc/snippets/MatrixBase_inverse.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/doc/snippets/MatrixBase_isDiagonal.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/doc/snippets/MatrixBase_isIdentity.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/doc/snippets/MatrixBase_isOnes.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/doc/snippets/MatrixBase_isOrthogonal.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/doc/snippets/MatrixBase_isUnitary.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/doc/snippets/MatrixBase_isZero.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/doc/snippets/MatrixBase_leftCols_int.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/doc/snippets/MatrixBase_marked.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/doc/snippets/MatrixBase_noalias.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/doc/snippets/MatrixBase_ones.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/doc/snippets/MatrixBase_ones_int.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/doc/snippets/MatrixBase_ones_int_int.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/doc/snippets/MatrixBase_operatorNorm.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/doc/snippets/MatrixBase_part.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/doc/snippets/MatrixBase_prod.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/doc/snippets/MatrixBase_random.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/doc/snippets/MatrixBase_random_int.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/doc/snippets/MatrixBase_random_int_int.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/doc/snippets/MatrixBase_replicate.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/doc/snippets/MatrixBase_replicate_int_int.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/doc/snippets/MatrixBase_reverse.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/doc/snippets/MatrixBase_rightCols_int.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/doc/snippets/MatrixBase_row.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/doc/snippets/MatrixBase_rowwise.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/doc/snippets/MatrixBase_segment_int_int.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/doc/snippets/MatrixBase_select.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/doc/snippets/MatrixBase_set.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/doc/snippets/MatrixBase_setIdentity.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/doc/snippets/MatrixBase_setOnes.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/doc/snippets/MatrixBase_setRandom.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/doc/snippets/MatrixBase_setZero.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/doc/snippets/MatrixBase_start_int.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/doc/snippets/MatrixBase_template_int_bottomRows.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/doc/snippets/MatrixBase_template_int_end.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/doc/snippets/MatrixBase_template_int_int_block_int_int_int_int.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/doc/snippets/MatrixBase_template_int_int_bottomLeftCorner.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/doc/snippets/MatrixBase_template_int_int_bottomLeftCorner_int_int.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/doc/snippets/MatrixBase_template_int_int_bottomRightCorner.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/doc/snippets/MatrixBase_template_int_int_bottomRightCorner_int_int.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/doc/snippets/MatrixBase_template_int_int_topLeftCorner.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/doc/snippets/MatrixBase_template_int_int_topLeftCorner_int_int.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/doc/snippets/MatrixBase_template_int_int_topRightCorner.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/doc/snippets/MatrixBase_template_int_int_topRightCorner_int_int.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/doc/snippets/MatrixBase_template_int_leftCols.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/doc/snippets/MatrixBase_template_int_rightCols.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/doc/snippets/MatrixBase_template_int_segment.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/doc/snippets/MatrixBase_template_int_start.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/doc/snippets/MatrixBase_template_int_topRows.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/doc/snippets/MatrixBase_topLeftCorner_int_int.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/doc/snippets/MatrixBase_topRightCorner_int_int.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/doc/snippets/MatrixBase_topRows_int.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/doc/snippets/MatrixBase_transpose.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/doc/snippets/MatrixBase_zero.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/doc/snippets/MatrixBase_zero_int.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/doc/snippets/MatrixBase_zero_int_int.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/doc/snippets/Matrix_resize_NoChange_int.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/doc/snippets/Matrix_resize_int.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/doc/snippets/Matrix_resize_int_NoChange.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/doc/snippets/Matrix_resize_int_int.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/doc/snippets/Matrix_setConstant_int.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/doc/snippets/Matrix_setConstant_int_int.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/doc/snippets/Matrix_setIdentity_int_int.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/doc/snippets/Matrix_setOnes_int.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/doc/snippets/Matrix_setOnes_int_int.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/doc/snippets/Matrix_setRandom_int.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/doc/snippets/Matrix_setRandom_int_int.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/doc/snippets/Matrix_setZero_int.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/doc/snippets/Matrix_setZero_int_int.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/doc/snippets/PartialPivLU_solve.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/doc/snippets/PartialRedux_count.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/doc/snippets/PartialRedux_maxCoeff.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/doc/snippets/PartialRedux_minCoeff.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/doc/snippets/PartialRedux_norm.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/doc/snippets/PartialRedux_prod.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/doc/snippets/PartialRedux_squaredNorm.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/doc/snippets/PartialRedux_sum.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/doc/snippets/RealQZ_compute.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/doc/snippets/RealSchur_RealSchur_MatrixType.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/doc/snippets/RealSchur_compute.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/doc/snippets/SelfAdjointEigenSolver_SelfAdjointEigenSolver.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/doc/snippets/SelfAdjointEigenSolver_SelfAdjointEigenSolver_MatrixType.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/doc/snippets/SelfAdjointEigenSolver_SelfAdjointEigenSolver_MatrixType2.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/doc/snippets/SelfAdjointEigenSolver_compute_MatrixType.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/doc/snippets/SelfAdjointEigenSolver_compute_MatrixType2.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/doc/snippets/SelfAdjointEigenSolver_eigenvalues.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/doc/snippets/SelfAdjointEigenSolver_eigenvectors.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/doc/snippets/SelfAdjointEigenSolver_operatorInverseSqrt.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/doc/snippets/SelfAdjointEigenSolver_operatorSqrt.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/doc/snippets/SelfAdjointView_eigenvalues.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/doc/snippets/SelfAdjointView_operatorNorm.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/doc/snippets/TopicAliasing_block.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/doc/snippets/TopicAliasing_block_correct.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/doc/snippets/TopicAliasing_cwise.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/doc/snippets/TopicAliasing_mult1.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/doc/snippets/TopicAliasing_mult2.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/doc/snippets/TopicAliasing_mult3.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/doc/snippets/TopicStorageOrders_example.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/doc/snippets/Tridiagonalization_Tridiagonalization_MatrixType.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/doc/snippets/Tridiagonalization_compute.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/doc/snippets/Tridiagonalization_decomposeInPlace.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/doc/snippets/Tridiagonalization_diagonal.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/doc/snippets/Tridiagonalization_householderCoefficients.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/doc/snippets/Tridiagonalization_packedMatrix.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/doc/snippets/Tutorial_AdvancedInitialization_Block.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/doc/snippets/Tutorial_AdvancedInitialization_CommaTemporary.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/doc/snippets/Tutorial_AdvancedInitialization_Join.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/doc/snippets/Tutorial_AdvancedInitialization_LinSpaced.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/doc/snippets/Tutorial_AdvancedInitialization_ThreeWays.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/doc/snippets/Tutorial_AdvancedInitialization_Zero.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/doc/snippets/Tutorial_Map_rowmajor.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/doc/snippets/Tutorial_Map_using.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/doc/snippets/Tutorial_commainit_01.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/doc/snippets/Tutorial_commainit_01b.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/doc/snippets/Tutorial_commainit_02.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/doc/snippets/Tutorial_solve_matrix_inverse.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/doc/snippets/Tutorial_solve_multiple_rhs.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/doc/snippets/Tutorial_solve_reuse_decomposition.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/doc/snippets/Tutorial_solve_singular.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/doc/snippets/Tutorial_solve_triangular.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/doc/snippets/Tutorial_solve_triangular_inplace.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/doc/snippets/Vectorwise_reverse.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/doc/snippets/class_FullPivLU.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/doc/snippets/compile_snippet.cpp.in",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/doc/snippets/tut_arithmetic_redux_minmax.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/doc/snippets/tut_arithmetic_transpose_aliasing.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/doc/snippets/tut_arithmetic_transpose_conjugate.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/doc/snippets/tut_arithmetic_transpose_inplace.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/doc/snippets/tut_matrix_assignment_resizing.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/doc/special_examples/CMakeLists.txt",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/doc/special_examples/Tutorial_sparse_example.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/doc/special_examples/Tutorial_sparse_example_details.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/doc/tutorial.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/eigen3.pc.in",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/failtest/CMakeLists.txt",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/failtest/block_nonconst_ctor_on_const_xpr_0.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/failtest/block_nonconst_ctor_on_const_xpr_1.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/failtest/block_nonconst_ctor_on_const_xpr_2.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/failtest/block_on_const_type_actually_const_0.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/failtest/block_on_const_type_actually_const_1.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/failtest/colpivqr_int.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/failtest/const_qualified_block_method_retval_0.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/failtest/const_qualified_block_method_retval_1.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/failtest/const_qualified_diagonal_method_retval.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/failtest/const_qualified_transpose_method_retval.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/failtest/diagonal_nonconst_ctor_on_const_xpr.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/failtest/diagonal_on_const_type_actually_const.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/failtest/eigensolver_cplx.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/failtest/eigensolver_int.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/failtest/failtest_sanity_check.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/failtest/fullpivlu_int.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/failtest/fullpivqr_int.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/failtest/jacobisvd_int.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/failtest/ldlt_int.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/failtest/llt_int.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/failtest/map_nonconst_ctor_on_const_ptr_0.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/failtest/map_nonconst_ctor_on_const_ptr_1.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/failtest/map_nonconst_ctor_on_const_ptr_2.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/failtest/map_nonconst_ctor_on_const_ptr_3.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/failtest/map_nonconst_ctor_on_const_ptr_4.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/failtest/map_on_const_type_actually_const_0.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/failtest/map_on_const_type_actually_const_1.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/failtest/partialpivlu_int.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/failtest/qr_int.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/failtest/ref_1.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/failtest/ref_2.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/failtest/ref_3.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/failtest/ref_4.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/failtest/ref_5.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/failtest/transpose_nonconst_ctor_on_const_xpr.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/failtest/transpose_on_const_type_actually_const.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/lapack/CMakeLists.txt",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/lapack/cholesky.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/lapack/clacgv.f",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/lapack/cladiv.f",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/lapack/clarf.f",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/lapack/clarfb.f",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/lapack/clarfg.f",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/lapack/clarft.f",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/lapack/complex_double.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/lapack/complex_single.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/lapack/dladiv.f",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/lapack/dlamch.f",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/lapack/dlapy2.f",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/lapack/dlapy3.f",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/lapack/dlarf.f",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/lapack/dlarfb.f",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/lapack/dlarfg.f",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/lapack/dlarft.f",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/lapack/double.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/lapack/dsecnd_NONE.f",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/lapack/eigenvalues.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/lapack/ilaclc.f",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/lapack/ilaclr.f",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/lapack/iladlc.f",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/lapack/iladlr.f",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/lapack/ilaslc.f",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/lapack/ilaslr.f",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/lapack/ilazlc.f",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/lapack/ilazlr.f",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/lapack/lapack_common.h",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/lapack/lu.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/lapack/second_NONE.f",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/lapack/single.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/lapack/sladiv.f",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/lapack/slamch.f",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/lapack/slapy2.f",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/lapack/slapy3.f",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/lapack/slarf.f",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/lapack/slarfb.f",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/lapack/slarfg.f",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/lapack/slarft.f",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/lapack/zlacgv.f",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/lapack/zladiv.f",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/lapack/zlarf.f",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/lapack/zlarfb.f",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/lapack/zlarfg.f",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/lapack/zlarft.f",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/scripts/CMakeLists.txt",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/scripts/buildtests.in",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/scripts/cdashtesting.cmake.in",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/scripts/check.in",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/scripts/debug.in",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/scripts/eigen_gen_credits.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/scripts/eigen_gen_docs",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/scripts/release.in",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/scripts/relicense.py",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/signature_of_eigen3_matrix_library",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/test/CMakeLists.txt",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/test/adjoint.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/test/array.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/test/array_for_matrix.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/test/array_replicate.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/test/array_reverse.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/test/bandmatrix.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/test/basicstuff.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/test/bicgstab.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/test/block.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/test/cholesky.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/test/cholmod_support.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/test/commainitializer.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/test/conjugate_gradient.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/test/conservative_resize.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/test/corners.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/test/cwiseop.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/test/denseLM.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/test/determinant.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/test/diagonal.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/test/diagonalmatrices.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/test/dontalign.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/test/dynalloc.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/test/eigen2/CMakeLists.txt",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/test/eigen2/eigen2_adjoint.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/test/eigen2/eigen2_alignedbox.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/test/eigen2/eigen2_array.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/test/eigen2/eigen2_basicstuff.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/test/eigen2/eigen2_bug_132.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/test/eigen2/eigen2_cholesky.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/test/eigen2/eigen2_commainitializer.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/test/eigen2/eigen2_cwiseop.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/test/eigen2/eigen2_determinant.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/test/eigen2/eigen2_dynalloc.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/test/eigen2/eigen2_eigensolver.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/test/eigen2/eigen2_first_aligned.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/test/eigen2/eigen2_geometry.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/test/eigen2/eigen2_geometry_with_eigen2_prefix.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/test/eigen2/eigen2_hyperplane.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/test/eigen2/eigen2_inverse.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/test/eigen2/eigen2_linearstructure.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/test/eigen2/eigen2_lu.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/test/eigen2/eigen2_map.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/test/eigen2/eigen2_meta.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/test/eigen2/eigen2_miscmatrices.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/test/eigen2/eigen2_mixingtypes.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/test/eigen2/eigen2_newstdvector.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/test/eigen2/eigen2_nomalloc.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/test/eigen2/eigen2_packetmath.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/test/eigen2/eigen2_parametrizedline.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/test/eigen2/eigen2_prec_inverse_4x4.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/test/eigen2/eigen2_product_large.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/test/eigen2/eigen2_product_small.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/test/eigen2/eigen2_qr.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/test/eigen2/eigen2_qtvector.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/test/eigen2/eigen2_regression.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/test/eigen2/eigen2_sizeof.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/test/eigen2/eigen2_smallvectors.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/test/eigen2/eigen2_sparse_basic.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/test/eigen2/eigen2_sparse_product.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/test/eigen2/eigen2_sparse_solvers.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/test/eigen2/eigen2_sparse_vector.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/test/eigen2/eigen2_stdvector.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/test/eigen2/eigen2_submatrices.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/test/eigen2/eigen2_sum.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/test/eigen2/eigen2_svd.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/test/eigen2/eigen2_swap.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/test/eigen2/eigen2_triangular.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/test/eigen2/eigen2_unalignedassert.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/test/eigen2/eigen2_visitor.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/test/eigen2/gsl_helper.h",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/test/eigen2/main.h",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/test/eigen2/product.h",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/test/eigen2/runtest.sh",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/test/eigen2/sparse.h",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/test/eigen2/testsuite.cmake",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/test/eigen2support.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/test/eigensolver_complex.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/test/eigensolver_generalized_real.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/test/eigensolver_generic.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/test/eigensolver_selfadjoint.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/test/exceptions.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/test/first_aligned.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/test/geo_alignedbox.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/test/geo_eulerangles.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/test/geo_homogeneous.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/test/geo_hyperplane.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/test/geo_orthomethods.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/test/geo_parametrizedline.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/test/geo_quaternion.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/test/geo_transformations.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/test/hessenberg.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/test/householder.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/test/integer_types.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/test/inverse.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/test/jacobi.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/test/jacobisvd.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/test/linearstructure.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/test/lu.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/test/main.h",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/test/mapped_matrix.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/test/mapstaticmethods.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/test/mapstride.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/test/meta.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/test/metis_support.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/test/miscmatrices.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/test/mixingtypes.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/test/nesting_ops.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/test/nomalloc.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/test/nullary.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/test/packetmath.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/test/pardiso_support.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/test/pastix_support.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/test/permutationmatrices.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/test/prec_inverse_4x4.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/test/product.h",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/test/product_extra.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/test/product_large.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/test/product_mmtr.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/test/product_notemporary.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/test/product_selfadjoint.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/test/product_small.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/test/product_symm.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/test/product_syrk.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/test/product_trmm.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/test/product_trmv.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/test/product_trsolve.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/test/qr.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/test/qr_colpivoting.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/test/qr_fullpivoting.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/test/qtvector.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/test/real_qz.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/test/redux.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/test/ref.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/test/resize.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/test/runtest.sh",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/test/schur_complex.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/test/schur_real.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/test/selfadjoint.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/test/simplicial_cholesky.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/test/sizeof.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/test/sizeoverflow.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/test/smallvectors.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/test/sparse.h",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/test/sparseLM.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/test/sparse_basic.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/test/sparse_permutations.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/test/sparse_product.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/test/sparse_solver.h",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/test/sparse_solvers.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/test/sparse_vector.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/test/sparselu.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/test/sparseqr.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/test/special_numbers.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/test/spqr_support.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/test/stable_norm.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/test/stddeque.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/test/stdlist.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/test/stdvector.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/test/stdvector_overload.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/test/superlu_support.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/test/swap.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/test/testsuite.cmake",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/test/triangular.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/test/umeyama.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/test/umfpack_support.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/test/unalignedassert.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/test/unalignedcount.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/test/upperbidiagonalization.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/test/vectorization_logic.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/test/vectorwiseop.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/test/visitor.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/test/zerosized.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/unsupported/CMakeLists.txt",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/unsupported/Eigen/AdolcForward",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/unsupported/Eigen/AlignedVector3",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/unsupported/Eigen/ArpackSupport",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/unsupported/Eigen/AutoDiff",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/unsupported/Eigen/BVH",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/unsupported/Eigen/CMakeLists.txt",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/unsupported/Eigen/FFT",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/unsupported/Eigen/IterativeSolvers",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/unsupported/Eigen/KroneckerProduct",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/unsupported/Eigen/LevenbergMarquardt",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/unsupported/Eigen/MPRealSupport",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/unsupported/Eigen/MatrixFunctions",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/unsupported/Eigen/MoreVectorization",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/unsupported/Eigen/NonLinearOptimization",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/unsupported/Eigen/NumericalDiff",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/unsupported/Eigen/OpenGLSupport",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/unsupported/Eigen/Polynomials",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/unsupported/Eigen/SVD",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/unsupported/Eigen/Skyline",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/unsupported/Eigen/SparseExtra",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/unsupported/Eigen/Splines",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/unsupported/Eigen/src/AutoDiff/AutoDiffJacobian.h",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/unsupported/Eigen/src/AutoDiff/AutoDiffScalar.h",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/unsupported/Eigen/src/AutoDiff/AutoDiffVector.h",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/unsupported/Eigen/src/AutoDiff/CMakeLists.txt",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/unsupported/Eigen/src/BVH/BVAlgorithms.h",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/unsupported/Eigen/src/BVH/CMakeLists.txt",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/unsupported/Eigen/src/BVH/KdBVH.h",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/unsupported/Eigen/src/CMakeLists.txt",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/unsupported/Eigen/src/Eigenvalues/ArpackSelfAdjointEigenSolver.h",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/unsupported/Eigen/src/FFT/CMakeLists.txt",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/unsupported/Eigen/src/FFT/ei_fftw_impl.h",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/unsupported/Eigen/src/FFT/ei_kissfft_impl.h",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/unsupported/Eigen/src/IterativeSolvers/CMakeLists.txt",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/unsupported/Eigen/src/IterativeSolvers/ConstrainedConjGrad.h",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/unsupported/Eigen/src/IterativeSolvers/DGMRES.h",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/unsupported/Eigen/src/IterativeSolvers/GMRES.h",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/unsupported/Eigen/src/IterativeSolvers/IncompleteCholesky.h",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/unsupported/Eigen/src/IterativeSolvers/IncompleteLU.h",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/unsupported/Eigen/src/IterativeSolvers/IterationController.h",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/unsupported/Eigen/src/IterativeSolvers/MINRES.h",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/unsupported/Eigen/src/IterativeSolvers/Scaling.h",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/unsupported/Eigen/src/KroneckerProduct/CMakeLists.txt",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/unsupported/Eigen/src/KroneckerProduct/KroneckerTensorProduct.h",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/unsupported/Eigen/src/LevenbergMarquardt/CMakeLists.txt",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/unsupported/Eigen/src/LevenbergMarquardt/CopyrightMINPACK.txt",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/unsupported/Eigen/src/LevenbergMarquardt/LMcovar.h",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/unsupported/Eigen/src/LevenbergMarquardt/LMonestep.h",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/unsupported/Eigen/src/LevenbergMarquardt/LMpar.h",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/unsupported/Eigen/src/LevenbergMarquardt/LMqrsolv.h",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/unsupported/Eigen/src/LevenbergMarquardt/LevenbergMarquardt.h",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/unsupported/Eigen/src/MatrixFunctions/CMakeLists.txt",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/unsupported/Eigen/src/MatrixFunctions/MatrixExponential.h",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/unsupported/Eigen/src/MatrixFunctions/MatrixFunction.h",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/unsupported/Eigen/src/MatrixFunctions/MatrixFunctionAtomic.h",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/unsupported/Eigen/src/MatrixFunctions/MatrixLogarithm.h",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/unsupported/Eigen/src/MatrixFunctions/MatrixPower.h",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/unsupported/Eigen/src/MatrixFunctions/MatrixSquareRoot.h",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/unsupported/Eigen/src/MatrixFunctions/StemFunction.h",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/unsupported/Eigen/src/MoreVectorization/CMakeLists.txt",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/unsupported/Eigen/src/MoreVectorization/MathFunctions.h",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/unsupported/Eigen/src/NonLinearOptimization/CMakeLists.txt",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/unsupported/Eigen/src/NonLinearOptimization/HybridNonLinearSolver.h",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/unsupported/Eigen/src/NonLinearOptimization/LevenbergMarquardt.h",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/unsupported/Eigen/src/NonLinearOptimization/chkder.h",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/unsupported/Eigen/src/NonLinearOptimization/covar.h",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/unsupported/Eigen/src/NonLinearOptimization/dogleg.h",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/unsupported/Eigen/src/NonLinearOptimization/fdjac1.h",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/unsupported/Eigen/src/NonLinearOptimization/lmpar.h",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/unsupported/Eigen/src/NonLinearOptimization/qrsolv.h",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/unsupported/Eigen/src/NonLinearOptimization/r1mpyq.h",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/unsupported/Eigen/src/NonLinearOptimization/r1updt.h",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/unsupported/Eigen/src/NonLinearOptimization/rwupdt.h",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/unsupported/Eigen/src/NumericalDiff/CMakeLists.txt",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/unsupported/Eigen/src/NumericalDiff/NumericalDiff.h",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/unsupported/Eigen/src/Polynomials/CMakeLists.txt",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/unsupported/Eigen/src/Polynomials/Companion.h",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/unsupported/Eigen/src/Polynomials/PolynomialSolver.h",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/unsupported/Eigen/src/Polynomials/PolynomialUtils.h",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/unsupported/Eigen/src/SVD/BDCSVD.h",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/unsupported/Eigen/src/SVD/CMakeLists.txt",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/unsupported/Eigen/src/SVD/JacobiSVD.h",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/unsupported/Eigen/src/SVD/SVDBase.h",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/unsupported/Eigen/src/SVD/TODOBdcsvd.txt",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/unsupported/Eigen/src/SVD/doneInBDCSVD.txt",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/unsupported/Eigen/src/Skyline/CMakeLists.txt",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/unsupported/Eigen/src/Skyline/SkylineInplaceLU.h",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/unsupported/Eigen/src/Skyline/SkylineMatrix.h",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/unsupported/Eigen/src/Skyline/SkylineMatrixBase.h",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/unsupported/Eigen/src/Skyline/SkylineProduct.h",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/unsupported/Eigen/src/Skyline/SkylineStorage.h",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/unsupported/Eigen/src/Skyline/SkylineUtil.h",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/unsupported/Eigen/src/SparseExtra/BlockOfDynamicSparseMatrix.h",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/unsupported/Eigen/src/SparseExtra/CMakeLists.txt",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/unsupported/Eigen/src/SparseExtra/DynamicSparseMatrix.h",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/unsupported/Eigen/src/SparseExtra/MarketIO.h",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/unsupported/Eigen/src/SparseExtra/MatrixMarketIterator.h",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/unsupported/Eigen/src/SparseExtra/RandomSetter.h",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/unsupported/Eigen/src/Splines/CMakeLists.txt",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/unsupported/Eigen/src/Splines/Spline.h",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/unsupported/Eigen/src/Splines/SplineFitting.h",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/unsupported/Eigen/src/Splines/SplineFwd.h",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/unsupported/README.txt",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/unsupported/bench/bench_svd.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/unsupported/doc/CMakeLists.txt",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/unsupported/doc/Overview.dox",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/unsupported/doc/eigendoxy_layout.xml.in",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/unsupported/doc/examples/BVH_Example.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/unsupported/doc/examples/CMakeLists.txt",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/unsupported/doc/examples/FFT.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/unsupported/doc/examples/MatrixExponential.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/unsupported/doc/examples/MatrixFunction.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/unsupported/doc/examples/MatrixLogarithm.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/unsupported/doc/examples/MatrixPower.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/unsupported/doc/examples/MatrixPower_optimal.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/unsupported/doc/examples/MatrixSine.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/unsupported/doc/examples/MatrixSinh.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/unsupported/doc/examples/MatrixSquareRoot.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/unsupported/doc/examples/PolynomialSolver1.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/unsupported/doc/examples/PolynomialUtils1.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/unsupported/doc/snippets/CMakeLists.txt",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/unsupported/test/BVH.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/unsupported/test/CMakeLists.txt",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/unsupported/test/FFT.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/unsupported/test/FFTW.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/unsupported/test/NonLinearOptimization.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/unsupported/test/NumericalDiff.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/unsupported/test/alignedvector3.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/unsupported/test/autodiff.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/unsupported/test/bdcsvd.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/unsupported/test/dgmres.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/unsupported/test/forward_adolc.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/unsupported/test/gmres.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/unsupported/test/jacobisvd.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/unsupported/test/kronecker_product.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/unsupported/test/levenberg_marquardt.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/unsupported/test/matrix_exponential.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/unsupported/test/matrix_function.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/unsupported/test/matrix_functions.h",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/unsupported/test/matrix_power.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/unsupported/test/matrix_square_root.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/unsupported/test/minres.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/unsupported/test/mpreal/mpreal.h",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/unsupported/test/mpreal_support.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/unsupported/test/openglsupport.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/unsupported/test/polynomialsolver.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/unsupported/test/polynomialutils.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/unsupported/test/sparse_extra.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/unsupported/test/splines.cpp",
        "path_type": "hardlink"
      },
      {
        "_path": "unpacked_source/unsupported/test/svd_common.h",
        "path_type": "hardlink"
      }
    ],
    "paths_version": 1
  },
  "requested_spec": "None",
  "sha256": "c82671a538c19274ef3981947b57ddee4ee148c79e28a3b0c15fee0838f06c9a",
  "size": 1718149,
  "subdir": "linux-64",
  "track_features": "",
  "url": "https://conda.anaconda.org/bioconda/linux-64/eigen-3.2-3.tar.bz2",
  "version": "3.2"
}